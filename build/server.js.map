{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack:///./node_modules/css-loader/dist/runtime/getUrl.js","webpack:///./node_modules/razzle-dev-utils/prettyNodeErrors.js","webpack:///./node_modules/razzle-start-server-webpack-plugin/dist/monitor-loader.js","webpack:///(webpack)/hot/log-apply-result.js","webpack:///(webpack)/hot/log.js","webpack:///(webpack)/hot/poll.js","webpack:///./src/App.css","webpack:///./src/App.js","webpack:///./src/addresses.js","webpack:///./src/components/ChartWrapper.js","webpack:///./src/components/CsvLink.js","webpack:///./src/components/FeesChart.js","webpack:///./src/components/GenericChart.js","webpack:///./src/components/VolumeChart.js","webpack:///./src/dataProvider.js","webpack:///./src/fonts/comfortaa/Comfortaa-Bold.ttf","webpack:///./src/fonts/comfortaa/Comfortaa-Light.ttf","webpack:///./src/fonts/comfortaa/Comfortaa-Medium.ttf","webpack:///./src/fonts/comfortaa/Comfortaa-Regular.ttf","webpack:///./src/fonts/comfortaa/Comfortaa-SemiBold.ttf","webpack:///./src/fonts/philosopher/Philosopher-Bold.ttf","webpack:///./src/fonts/philosopher/Philosopher-BoldItalic.ttf","webpack:///./src/fonts/philosopher/Philosopher-Italic.ttf","webpack:///./src/fonts/philosopher/Philosopher-Regular.ttf","webpack:///./src/helpers.js","webpack:///./src/img/anzor-logo.png","webpack:///./src/index.js","webpack:///./src/middlewares.js","webpack:///./src/routes.js","webpack:///./src/server.js","webpack:///./src/views/Optimism.js","webpack:///./src/views/Referrals.js","webpack:///./src/views/Trading.js","webpack:///external \"@apollo/client\"","webpack:///external \"@babel/code-frame\"","webpack:///external \"chalk\"","webpack:///external \"classnames\"","webpack:///external \"console-log-level\"","webpack:///external \"cors\"","webpack:///external \"cross-fetch\"","webpack:///external \"ethers\"","webpack:///external \"express\"","webpack:///external \"framer-motion\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jest-message-util\"","webpack:///external \"lodash\"","webpack:///external \"moment\"","webpack:///external \"object-sizeof\"","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-icons/fa\"","webpack:///external \"react-icons/fi\"","webpack:///external \"react-icons/ri\"","webpack:///external \"react-router-dom\"","webpack:///external \"recharts\"","webpack:///external \"strftime\"","webpack:///external \"webpack/hot/log-apply-result\""],"sourcesContent":[" \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar chunk = require(\"./\" + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t\thotAddUpdateChunk(chunk.id, chunk.modules);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest() {\n \t\ttry {\n \t\t\tvar update = require(\"./\" + \"\" + hotCurrentHash + \".hot-update.json\");\n \t\t} catch (e) {\n \t\t\treturn Promise.resolve();\n \t\t}\n \t\treturn Promise.resolve(update);\n \t}\n\n \t//eslint-disable-next-line no-unused-vars\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"b1ff821a14ffecd35d07\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_selfInvalidated: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n \t\t\tinvalidate: function() {\n \t\t\t\tthis._selfInvalidated = true;\n \t\t\t\tswitch (hotStatus) {\n \t\t\t\t\tcase \"idle\":\n \t\t\t\t\t\thotUpdate = {};\n \t\t\t\t\t\thotUpdate[moduleId] = modules[moduleId];\n \t\t\t\t\t\thotSetStatus(\"ready\");\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"ready\":\n \t\t\t\t\t\thotApplyInvalidatedModule(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"prepare\":\n \t\t\t\t\tcase \"check\":\n \t\t\t\t\tcase \"dispose\":\n \t\t\t\t\tcase \"apply\":\n \t\t\t\t\t\t(hotQueuedInvalidatedModules =\n \t\t\t\t\t\t\thotQueuedInvalidatedModules || []).push(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\t// ignore requests in error states\n \t\t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash, hotQueuedInvalidatedModules;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(hotApplyInvalidatedModules() ? \"ready\" : \"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"server\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n \t\treturn hotApplyInternal(options);\n \t}\n\n \tfunction hotApplyInternal(options) {\n \t\thotApplyInvalidatedModules();\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (\n \t\t\t\t\t!module ||\n \t\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n \t\t\t\t)\n \t\t\t\t\tcontinue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire &&\n \t\t\t\t// when called invalidate self-accepting is not possible\n \t\t\t\t!installedModules[moduleId].hot._selfInvalidated\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\tparents: installedModules[moduleId].parents.slice(),\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\tif (hotUpdateNewHash !== undefined) {\n \t\t\thotCurrentHash = hotUpdateNewHash;\n \t\t\thotUpdateNewHash = undefined;\n \t\t}\n \t\thotUpdate = undefined;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = item.parents;\n \t\t\thotCurrentChildModule = moduleId;\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\treturn hotApplyInternal(options).then(function(list) {\n \t\t\t\toutdatedModules.forEach(function(moduleId) {\n \t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n \t\t\t\t});\n \t\t\t\treturn list;\n \t\t\t});\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \tfunction hotApplyInvalidatedModules() {\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\tif (!hotUpdate) hotUpdate = {};\n \t\t\thotQueuedInvalidatedModules.forEach(hotApplyInvalidatedModule);\n \t\t\thotQueuedInvalidatedModules = undefined;\n \t\t\treturn true;\n \t\t}\n \t}\n\n \tfunction hotApplyInvalidatedModule(moduleId) {\n \t\tif (!Object.prototype.hasOwnProperty.call(hotUpdate, moduleId))\n \t\t\thotUpdate[moduleId] = modules[moduleId];\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:3001/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(__webpack_require__.s = 0);\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","const fs = require('fs');\nconst {\n  getTopFrame,\n  getStackTraceLines,\n  separateMessageFromStack,\n} = require('jest-message-util');\nconst { codeFrameColumns } = require('@babel/code-frame');\n\nfunction pretty(error) {\n  const { message, stack } = error;\n  const lines = getStackTraceLines(stack);\n  const topFrame = getTopFrame(lines);\n  const fallback = `${message}${stack}`;\n\n  if (!topFrame) {\n    return fallback;\n  }\n\n  const { file, line } = topFrame;\n  try {\n    const result = codeFrameColumns(\n      fs.readFileSync(file, 'utf8'),\n      { start: { line } },\n      { highlightCode: true }\n    );\n    return `\\n${message}\\n\\n${result}\\n${stack}\\n`;\n  } catch (error) {\n    return fallback;\n  }\n}\n\nfunction usePrettyErrors(transform) {\n  const { prepareStackTrace } = Error;\n\n  Error.prepareStackTrace = (error, trace) => {\n    const prepared = prepareStackTrace\n      ? separateMessageFromStack(prepareStackTrace(error, trace))\n      : error;\n    const transformed = transform ? transform(prepared) : prepared;\n    return pretty(transformed);\n  };\n}\n\n// Clean up Webpack's sourcemap namespacing in error stacks\n// @see https://github.com/facebook/create-react-app/blob/next/packages/react-dev-utils/formatWebpackMessages.js#L112\nconst stackTransform = ({ stack = '', ...rest }) => ({\n  stack: stack.replace('/build/webpack:', ''),\n  ...rest,\n});\n\nusePrettyErrors(stackTransform);\n","(() => {\n  // Handle hot updates, copied with slight adjustments from webpack/hot/signal.js\n  if (module.hot) {\n    const log = (type, msg) => console[type](`sswp> ${msg}`); // TODO don't show this when sending signal instead of message\n\n\n    log('log', 'Handling Hot Module Reloading');\n\n    var checkForUpdate = function checkForUpdate(fromUpdate) {\n      module.hot.check().then(function (updatedModules) {\n        if (!updatedModules) {\n          if (fromUpdate) log('log', 'Update applied.');else log('warn', 'Cannot find update.');\n          return;\n        }\n\n        return module.hot.apply({\n          ignoreUnaccepted: true,\n          // TODO probably restart\n          onUnaccepted: function (data) {\n            log('warn', '\\u0007Ignored an update to unaccepted module ' + data.chain.join(' -> '));\n          }\n        }).then(function (renewedModules) {\n          require('webpack/hot/log-apply-result')(updatedModules, renewedModules);\n\n          checkForUpdate(true);\n        });\n      }).catch(function (err) {\n        var status = module.hot.status();\n\n        if (['abort', 'fail'].indexOf(status) >= 0) {\n          if (process.send) {\n            process.send('SSWP_HMR_FAIL');\n          }\n\n          log('warn', 'Cannot apply update.');\n          log('warn', '' + err.stack || err.message);\n          log('error', 'Quitting process - will reload on next file change\\u0007\\n\\u0007\\n\\u0007');\n          process.exit(222);\n        } else {\n          log('warn', 'Update failed: ' + err.stack || err.message);\n        }\n      });\n    };\n\n    process.on('message', function (message) {\n      if (message !== 'SSWP_HMR') return;\n\n      if (module.hot.status() !== 'idle') {\n        log('warn', 'Got signal but currently in ' + module.hot.status() + ' state.');\n        log('warn', 'Need to be in idle state to start hot update.');\n        return;\n      }\n\n      checkForUpdate();\n    });\n  } // Tell our plugin we loaded all the code without initially crashing\n\n\n  if (process.send) {\n    process.send('SSWP_LOADED');\n  }\n})()","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function(moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function(moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function(moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function(moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t\"[HMR] Consider using the NamedModulesPlugin for module names.\"\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function(level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function(level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function(level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function(err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar hotPollInterval = +__resourceQuery.substr(1) || 10 * 60 * 1000;\n\tvar log = require(\"./log\");\n\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tif (module.hot.status() === \"idle\") {\n\t\t\tmodule.hot\n\t\t\t\t.check(true)\n\t\t\t\t.then(function(updatedModules) {\n\t\t\t\t\tif (!updatedModules) {\n\t\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t})\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tvar status = module.hot.status();\n\t\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tsetInterval(checkForUpdate, hotPollInterval);\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./fonts/philosopher/Philosopher-BoldItalic.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"./fonts/philosopher/Philosopher-Italic.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_2___ from \"./fonts/philosopher/Philosopher-Regular.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_3___ from \"./fonts/philosopher/Philosopher-Bold.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_4___ from \"./fonts/comfortaa/Comfortaa-Regular.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_5___ from \"./fonts/comfortaa/Comfortaa-Bold.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_6___ from \"./fonts/comfortaa/Comfortaa-SemiBold.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_7___ from \"./fonts/comfortaa/Comfortaa-Light.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_8___ from \"./fonts/comfortaa/Comfortaa-Medium.ttf\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: italic;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: italic;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \") format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") format('truetype');\\r\\n  font-weight: 600;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") format('truetype');\\r\\n  font-weight: 300;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \") format('truetype');\\r\\n  font-weight: 500;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  /* background: #f6f9ff; */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Comfortaa', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: 'Comfortaa', monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #fcfcfc;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #000000;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n  /* color: #ffffff; */\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #181818;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 15px;\\r\\n  border: 1px solid #FFFFFF14;\\r\\n  background: #181818;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  box-sizing: border-box;\\r\\n  background: #b39a31;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #ffffff;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #000000;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  /* width: 87px; */\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n  font-family: 'Philosopher';\\r\\n  /* letter-spacing: 3px; */\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #ffffff;\\r\\n  /* color: #000; */\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #fff;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #00000029!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #000000 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #ffffff;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #181818;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  margin: unset;\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,0BAA0B;EAC1B,+DAA6E;EAC7E,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;EAC1B,+DAAyE;EACzE,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;EAC1B,+DAA0E;EAC1E,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;EAC1B,+DAAuE;EACvE,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,+DAAsE;EACtE,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,+DAAmE;EACnE,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,+DAAuE;EACvE,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,+DAAoE;EACpE,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,+DAAqE;EACrE,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,SAAS;EACT,UAAU;EACV,oCAAoC;EACpC,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,mCAAmC;AACrC;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,iBAAiB;EACjB,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,WAAW;EACX,iBAAiB;EACjB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB;AACF;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,sCAAsC;EACtC,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,SAAS;EACT,mBAAmB;EACnB,2BAA2B;EAC3B,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,SAAS;EACT,WAAW;EACX,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,oBAAoB;EACpB,sBAAsB;AACxB;AACA;EACE,YAAY;AACd;AACA;EACE,UAAU;AACZ;;AAEA;;EAEE,sBAAsB;EACtB,kBAAkB;EAClB,2BAA2B;EAC3B,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,2BAA2B;EAC3B,WAAW;EACX,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,YAAY;AACd;;AAEA;EACE;IACE,oBAAoB;EACtB;EACA;IACE,yBAAyB;EAC3B;AACF;;AAEA;EACE,+BAA+B;EAC/B,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;EAClB,iBAAiB;EACjB,QAAQ;EACR,SAAS;EACT,UAAU;AACZ;;;AAGA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,gCAAgC;EAChC,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;EACnB,kCAAkC;AACpC;;AAEA;EACE,iBAAiB;EACjB,sBAAsB;EACtB,sBAAsB;EACtB,oBAAoB;EACpB,0BAA0B;EAC1B,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,sBAAsB;EACtB,cAAc;EACd,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB;EACpB,qBAAqB;EACrB,sBAAsB;EACtB,eAAe;EACf,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,+CAA+C;EAC/C,2BAA2B;EAC3B,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,+CAA+C;AACjD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,sBAAsB;EACtB,yBAAyB;EACzB,2BAA2B;AAC7B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qCAAqC;EACrC,iCAAiC;EACjC,mCAAmC;EACnC,kBAAkB;AACpB;;AAEA;EACE,+CAA+C;EAC/C,iCAAiC;EACjC,UAAU;EACV,2BAA2B;EAC3B,eAAe;EACf,WAAW;EACX,OAAO;EACP,QAAQ;EACR,MAAM;EACN,aAAa;EACb,YAAY;AACd;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,mBAAmB;EACnB,qBAAqB;EACrB,cAAc;EACd,kBAAkB;EAClB,qBAAqB;EACrB,cAAc;AAChB;;AAEA;;;EAGE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,UAAU;EACV,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE;IACE,aAAa;IACb,qCAAqC;EACvC;;EAEA;IACE,yBAAyB;IACzB,qBAAqB;EACvB;EACA;IACE,yBAAyB;EAC3B;AACF;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,WAAW;EACX,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;AACV;;AAEA;EACE;IACE,aAAa;IACb,0BAA0B;EAC5B;;EAEA;IACE,kCAAkC;IAClC,gCAAgC;EAClC;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,oBAAoB;EACtB;;EAEA;IACE,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,aAAa;EACf;AACF\",\"sourcesContent\":[\"@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url('./fonts/philosopher/Philosopher-BoldItalic.ttf') format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: italic;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url('./fonts/philosopher/Philosopher-Italic.ttf') format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: italic;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url('./fonts/philosopher/Philosopher-Regular.ttf') format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Philosopher';\\r\\n  src: url('./fonts/philosopher/Philosopher-Bold.ttf') format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url('./fonts/comfortaa/Comfortaa-Regular.ttf') format('truetype');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url('./fonts/comfortaa/Comfortaa-Bold.ttf') format('truetype');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url('./fonts/comfortaa/Comfortaa-SemiBold.ttf') format('truetype');\\r\\n  font-weight: 600;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url('./fonts/comfortaa/Comfortaa-Light.ttf') format('truetype');\\r\\n  font-weight: 300;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Comfortaa';\\r\\n  src: url('./fonts/comfortaa/Comfortaa-Medium.ttf') format('truetype');\\r\\n  font-weight: 500;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  /* background: #f6f9ff; */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Comfortaa', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: 'Comfortaa', monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #fcfcfc;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #000000;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n  /* color: #ffffff; */\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #181818;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 15px;\\r\\n  border: 1px solid #FFFFFF14;\\r\\n  background: #181818;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  box-sizing: border-box;\\r\\n  background: #b39a31;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #ffffff;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #000000;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  /* width: 87px; */\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n  font-family: 'Philosopher';\\r\\n  /* letter-spacing: 3px; */\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #ffffff;\\r\\n  /* color: #000; */\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #fff;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #00000029!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #000000 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #ffffff;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #181818;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  margin: unset;\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport cx from \"classnames\";\r\nimport Optimism from './views/Optimism';\r\nimport Referrals from './views/Referrals';\r\nimport Trading from './views/Trading';\r\nimport './App.css';\r\nimport darkLogoIcon from './img/anzor-logo.png';\r\nimport lightLogoIcon from './img/anzor-logo.png';\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { RiMenuLine } from 'react-icons/ri';\r\n\r\nfunction AppHeaderLinks({ mode, small, clickCloseIcon }) {\r\n  return (\r\n    <div className=\"App-header-links\">\r\n      {small &&\r\n        <div className=\"App-header-links-header\">\r\n          <div className=\"App-header-menu-icon-block\" onClick={() => clickCloseIcon()}>\r\n            <FiX className=\"App-header-menu-icon\" />\r\n          </div>\r\n          <NavLink exact activeClassName=\"active\" className=\"App-header-link-main\" to=\"/\">\r\n            <img src={darkLogoIcon} alt=\"SKULL Logo\" style={{width: '40px', height: '40px'}} />\r\n          </NavLink>\r\n        </div>\r\n      }\r\n      <div className=\"App-header-link-container\">\r\n        <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">Optimism</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [mode, setMode] = useState(null);\r\n  const [isDrawerVisible, setIsDrawerVisible] = useState(undefined);\r\n\r\n  const slideVariants = {\r\n    hidden: { x: \"-100%\" },\r\n    visible: { x: 0 }\r\n  }\r\n\r\n  const fadeVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const savedMode = window.localStorage.getItem('mode');\r\n    const targetMode = savedMode == 'light' ? 'light' : 'dark';\r\n    document.querySelector('body').style.backgroundColor = targetMode == 'dark' ? '#000000' : '#f6f9ff';\r\n    setMode(targetMode);\r\n  }, [])\r\n\r\n  return (\r\n    <Switch>\r\n      {\r\n        mode && <div className={cx(\"App\", mode)}>\r\n          {isDrawerVisible &&\r\n            <AnimatePresence>\r\n              {isDrawerVisible &&\r\n                <motion.div className=\"App-header-backdrop\"\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"hidden\"\r\n                  variants={fadeVariants}\r\n                  transition={{ duration: 0.2 }}\r\n                  onClick={() => setIsDrawerVisible(!isDrawerVisible)}\r\n                >\r\n                </motion.div>\r\n              }\r\n            </AnimatePresence>\r\n          }\r\n          <div className=\"nav\">\r\n            <div className=\"nav-left\">\r\n              <div className=\"App-header-menu-icon-block\" onClick={() => setIsDrawerVisible(!isDrawerVisible)}>\r\n                {!isDrawerVisible && <RiMenuLine className=\"App-header-menu-icon\" />}\r\n                {isDrawerVisible && <FaTimes className=\"App-header-menu-icon\" />}\r\n              </div>\r\n              <a href=\"https://masonjar.finance\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-logo\" style={{textDecoration: 'none', alignItems: 'center'}}>\r\n                <img style={{width: '40px', height: '40px'}} src={mode == 'dark' ? darkLogoIcon : lightLogoIcon} />\r\n                <p style={{textDecoration: 'none', fontSize: '1.3rem', fontWeight: '40px'}}>Mason Jar</p>\r\n              </a>\r\n              {/* <NavLink to=\"/\" style={{paddingRight: \"12px\"}} exact className=\"nav-link\" activeClassName=\"active\">Optimism</NavLink> */}\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <a href=\"https://docs.masonjar.finance\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link\">Docs</a>\r\n              <a href=\"https://masonjar.finance\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link\">Launch App</a>\r\n            </div>\r\n          </div>\r\n          <AnimatePresence>\r\n            {isDrawerVisible &&\r\n              <motion.div\r\n                onClick={() => setIsDrawerVisible(false)}\r\n                className=\"App-header-links-container App-header-drawer\"\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"hidden\"\r\n                variants={slideVariants}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <AppHeaderLinks mode={mode} small clickCloseIcon={() => setIsDrawerVisible(false)} />\r\n              </motion.div>\r\n            }\r\n          </AnimatePresence>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" render={(props) => (\r\n              <Optimism {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/referrals/:chainName\" render={(props) => (\r\n              <Referrals {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/trading\" component={Trading} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </Switch>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","\r\nexport const OPTIMISM = 10;\r\n\r\nexport const addresses = {\r\n\r\n  [OPTIMISM]: {\r\n    SKULL: \"0x9945Dd3eCB40A6b594813f2A4DF1643b10Fe3550\", // DONE\r\n    ES_SKULL: \"\",\r\n    SLP: \"0x85CEF8dd0AaD49Fb4C04529f65D92177B936Da74\", // DONE\r\n    BN_SKULL: \"\",\r\n    STAKED_SKULL_TRACKER: \"\",\r\n    STAKED_SLP_TRACKER: \"\",\r\n    BONUS_SKULL_TRACKER: \"\",\r\n    FEE_SKULL_TRACKER: \"\",\r\n    FEE_SLP_TRACKER: \"\",\r\n    OP: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\r\n    BTC: \"0x321162Cd933E2Be498Cd2267a90534A804051b11\", // 8 decimals wrapped btc\r\n    ETH: \"0x74b23882a30290451A17c44f4F05243b6b58C76d\", // 18 decimals wrapped eth\r\n    RewardReader: \"0xeF98e5d4F67633D6072c2a93e69A7F6a6179fD1b\",\r\n    SlpManager: \"0xCeF49b3f525d646924d20A4bC7B325dBb537e45A\", // DONE\r\n    Router: \"0x5043C2470D7454F1678f6ecCCEE9D3D4588320cC\", // DONE\r\n    OrderBook: \"0x286798570bf721c45A757B1de0B3149526c42273\", // DONE\r\n    PositionManager: \"0x8F27c5F885B19279E12cdCbf29c9B0541dc563F3\", // DONE\r\n    FastPriceFeed: \"\",\r\n    PositionRouter: \"0xD30E4778512A0b24A34D355A5Ef28d337e96Bb95\", // DONE\r\n    PositionExecutorUpKeep: \"\"\r\n  },\r\n};\r\n\r\nexport function getAddress(chainId, key) {\r\n  if (!chainId in addresses) {\r\n    throw new Error(`Unknown chain ${chainId}`);\r\n  }\r\n  if (!(key in addresses[chainId])) {\r\n    throw new Error(`Unknown address key ${key}`);\r\n  }\r\n  return addresses[chainId][key];\r\n}\r\n","import { RiLoader5Fill } from \"react-icons/ri\";\r\nimport CsvLink from \"./CsvLink\";\r\n\r\nexport default function ChartWrapper(props) {\r\n  const { title, loading, csvFields, data } = props;\r\n  return (\r\n    <>\r\n      <h3>\r\n        {title}\r\n        <CsvLink fields={csvFields} name={title} data={data} />\r\n      </h3>\r\n      {loading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n","import { useCallback } from 'react'\r\nimport { RiDownload2Fill } from 'react-icons/ri'\r\nimport strftime from 'strftime'\r\n\r\nfunction formatTimestamp(timestamp) {\r\n  return strftime('%Y-%m-%d', new Date(timestamp * 1000))\r\n}\r\n\r\nfunction getCsvUrl(data, fields) {\r\n  const csvHeader = 'Date,' + fields.map(field => field.name || field.key).join(',')\r\n  const csvBody = data.map(item => {\r\n    return formatTimestamp(item.timestamp) + ',' + fields.map(field => item[field.key]).join(',')\r\n  }).join('\\n')\r\n  const csv = csvHeader + '\\n' + csvBody\r\n  return `data:application/octet-stream,${encodeURIComponent(csv)}`\r\n}\r\n\r\nexport default function CsvLink({ data, fields, name = 'SKULL stats' }) {\r\n  const onClick = useCallback((evt) => {\r\n    evt.preventDefault()\r\n\r\n    const csvUrl = getCsvUrl(data, fields)\r\n    const start = formatTimestamp(data[0].timestamp)\r\n    const end = formatTimestamp(data[data.length - 1].timestamp)\r\n    const fileName = `${name}_${start}_${end}.csv`\r\n\r\n    const aElement = document.createElement('a')\r\n    aElement.href = csvUrl\r\n    aElement.download = fileName\r\n    document.body.appendChild(aElement)\r\n    aElement.click()\r\n    document.body.removeChild(aElement)\r\n  }, [data, fields, name])\r\n\r\n  if (!data || data.length === 0 || !fields) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <a title=\"Download CSV\" className=\"csv-link\" onClick={onClick}>\r\n      <RiDownload2Fill size=\"1em\" />\r\n    </a>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ComposedChart,\r\n  Line,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS\r\n} from '../helpers'\r\n\r\nexport default function FeesChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n    xaxisTickFormatter,\r\n    yaxisTickFormatter,\r\n    tooltipFormatter,\r\n    tooltipLabelFormatter\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint SLP'},\r\n    {key: 'burn', name: 'Burn SLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ]\r\n\r\n  return <ChartWrapper title=\"Fees\" loading={loading} csvFields={csvFields} data={data}>\r\n    <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n      <ComposedChart data={data} syncId=\"syncA\">\r\n        <CartesianGrid strokeDasharray=\"10 10\" />\r\n        <XAxis dataKey=\"timestamp\" tickFormatter={xaxisTickFormatter} minTickGap={30} />\r\n        <YAxis dataKey=\"all\" interval=\"preserveStartEnd\" tickCount={7} tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n        />\r\n        <Legend />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint SLP\" fill={COLORS[1]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn SLP\" fill={COLORS[2]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n        <Line isAnimationActive={false} type=\"monotone\" strokeWidth={3} dot={false} stroke={COLORS[0]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n    <div className=\"chart-description\">\r\n      Collected fees. USD value is calculated with token price at the moment of swap, trade, minting or redeeming SLP\r\n    </div>\r\n  </ChartWrapper>\r\n}","import React from 'react'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie\r\n} from 'recharts';\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter as tooltipLabelFormatter_,\r\n  tooltipFormatter as tooltipFormatter_,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n  COINCOLORS\r\n} from '../helpers'\r\n\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nexport default function GenericChart(props) {\r\n  const {\r\n    loading,\r\n    title,\r\n    data,\r\n    description,\r\n    height = CHART_HEIGHT,\r\n    yaxisWidth = YAXIS_WIDTH,\r\n    yaxisDataKey = 'all',\r\n    yaxisTickFormatter = yaxisFormatter,\r\n    yaxisDomain,\r\n    xaxisDataKey = 'timestamp',\r\n    xaxisTickFormatter = tooltipLabelFormatter_,\r\n    tooltipFormatter = tooltipFormatter_,\r\n    tooltipLabelFormatter = tooltipLabelFormatter_,\r\n    items,\r\n    type,\r\n    syncId,\r\n    children,\r\n    rightYaxisDataKey,\r\n    isCoinChart\r\n  } = props\r\n\r\n  let ChartComponent\r\n  if (type === 'Line') {\r\n    ChartComponent = LineChart\r\n  } else if (type === 'Bar') {\r\n    ChartComponent = BarChart\r\n  } else {\r\n    ChartComponent = ComposedChart\r\n  }\r\n  \r\n  const htmlItems = (items || []).map((item, i) => {\r\n    const props = {\r\n      type: \"monotone\",\r\n      dataKey: item.key,\r\n      stackId: \"a\",\r\n      name: item.name || item.key,\r\n      fill: item.color || COLORS[i % COLORS.length],\r\n      stroke: item.color || COLORS[i % COLORS.length],\r\n      dot: item.dot || false,\r\n      key: 'item-' + i,\r\n      unit: item.unit,\r\n      strokeWidth: item.strokeWidth,\r\n      yAxisId: item.yAxisId\r\n    }\r\n    if (item.type === 'Line' || type === 'Line') {\r\n      return <Line {...props} isAnimationActive={false} />\r\n    }\r\n    return <Bar {...props} isAnimationActive={false} />\r\n  })\r\n\r\n  const csvFields = items.map(item => ({ key: item.key, name: item.name }))\r\n\r\n  return <ChartWrapper title={title} loading={loading} data={data} csvFields={csvFields}>\r\n    <ResponsiveContainer width=\"100%\" height={height}>\r\n      {React.createElement(ChartComponent, { data, syncId }, [\r\n        <CartesianGrid strokeDasharray=\"10 10\" key=\"a\" />,\r\n        <XAxis dataKey={xaxisDataKey} tickFormatter={xaxisTickFormatter} minTickGap={30} key=\"b\" />,\r\n        <YAxis domain={yaxisDomain} dataKey={yaxisDataKey} tickFormatter={yaxisTickFormatter} key=\"c\" />,\r\n        (\r\n          rightYaxisDataKey ?\r\n            <YAxis dataKey={rightYaxisDataKey} tickFormatter={yaxisTickFormatter} orientation=\"right\" yAxisId=\"right\" key=\"c2\" />\r\n            : null\r\n        ),\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n          key=\"d\"\r\n        />,\r\n        <Legend key=\"e\" />,\r\n        ...htmlItems,\r\n        children\r\n      ])}\r\n    </ResponsiveContainer>\r\n    {description && (\r\n      <div className=\"chart-description\">\r\n        {description}\r\n      </div>\r\n    )}\r\n  </ChartWrapper>\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line\r\n} from 'recharts';\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS\r\n} from '../helpers'\r\n\r\nexport default function VolumeChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n    xaxisTickFormatter,\r\n    yaxisTickFormatter,\r\n    tooltipFormatter,\r\n    tooltipLabelFormatter\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint SLP'},\r\n    {key: 'burn', name: 'Burn SLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ]\r\n\r\n  return <ChartWrapper title=\"Volume\" loading={loading} csvFields={csvFields} data={data}>\r\n    <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n      <ComposedChart data={data} syncId=\"syncA\">\r\n        <CartesianGrid strokeDasharray=\"10 10\" />\r\n        <XAxis dataKey=\"timestamp\" tickFormatter={xaxisTickFormatter} minTickGap={30} />\r\n        <YAxis dataKey=\"all\" interval=\"preserveStartEnd\" tickCount={7} tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n        />\r\n        <Legend />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint SLP\" fill={COLORS[1]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn SLP\" fill={COLORS[2]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n        <Line isAnimationActive={false} type=\"monotone\" dot={false} strokeWidth={3} stroke={COLORS[0]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  </ChartWrapper>\r\n}","import { useMemo, useState, useEffect } from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql, HttpLink } from \"@apollo/client\";\r\nimport { chain, sumBy, sortBy, maxBy, minBy } from \"lodash\";\r\nimport fetch from \"cross-fetch\";\r\nimport * as ethers from \"ethers\";\r\n\r\nimport { getAddress, OPTIMISM } from \"./addresses\";\r\n\r\nconst { JsonRpcProvider } = ethers.providers;\r\n\r\nimport RewardReader from \"../abis/RewardReader.json\";\r\nimport SlpManager from \"../abis/SlpManager.json\";\r\nimport Token from \"../abis/v1/Token.json\";\r\n\r\nconst providers = {\r\n  optimism: new JsonRpcProvider(\"https://rpc.ankr.com/optimism\"),\r\n};\r\n\r\nfunction getProvider(chainName) {\r\n  if (!(chainName in providers)) {\r\n    throw new Error(`Unknown chain ${chainName}`);\r\n  }\r\n  return providers[\"optimism\"];\r\n}\r\n\r\nfunction getChainId(chainName) {\r\n  const chainId = {\r\n    optimism: OPTIMISM,\r\n  }[chainName];\r\n  if (!chainId) {\r\n    throw new Error(`Unknown chain ${chainName}`);\r\n  }\r\n  return chainId;\r\n}\r\n\r\nconst DEFAULT_GROUP_PERIOD = 86400;\r\nconst NOW_TS = parseInt(Date.now() / 1000);\r\nconst FIRST_DATE_TS = parseInt(+new Date(2022, 5, 1) / 1000);\r\n\r\nfunction fillNa(arr, keys) {\r\n  const prevValues = {};\r\n  if (!keys && arr.length > 0) {\r\n    keys = Object.keys(arr[0]);\r\n    delete keys.timestamp;\r\n    delete keys.id;\r\n  }\r\n  for (const el of arr) {\r\n    for (const key of keys) {\r\n      if (!el[key]) {\r\n        if (prevValues[key]) {\r\n          el[key] = prevValues[key];\r\n        }\r\n      } else {\r\n        prevValues[key] = el[key];\r\n      }\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport async function queryEarnData(chainName, account) {\r\n  const provider = getProvider(chainName);\r\n  const chainId = getChainId(chainName);\r\n  const rewardReader = new ethers.Contract(\r\n    getAddress(chainId, \"RewardReader\"),\r\n    RewardReader.abi,\r\n    provider\r\n  );\r\n  const slpContract = new ethers.Contract(\r\n    getAddress(chainId, \"SLP\"),\r\n    Token.abi,\r\n    provider\r\n  );\r\n  const slpManager = new ethers.Contract(\r\n    getAddress(chainId, \"SlpManager\"),\r\n    SlpManager.abi,\r\n    provider\r\n  );\r\n\r\n  let depositTokens;\r\n  let rewardTrackersForDepositBalances;\r\n  let rewardTrackersForStakingInfo;\r\n\r\n  if (chainId === OPTIMISM) {\r\n    depositTokens = [\r\n      getAddress(OPTIMISM, \"SKULL\"),\r\n      getAddress(OPTIMISM, \"ES_SKULL\"),\r\n      getAddress(OPTIMISM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"BN_SKULL\"),\r\n      getAddress(OPTIMISM, \"SLP\"),\r\n    ];\r\n    rewardTrackersForDepositBalances = [\r\n      getAddress(OPTIMISM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"FEE_SLP_TRACKER\"),\r\n    ];\r\n    rewardTrackersForStakingInfo = [\r\n      getAddress(OPTIMISM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(OPTIMISM, \"STAKED_SLP_TRACKER\"),\r\n      getAddress(OPTIMISM, \"FEE_SLP_TRACKER\"),\r\n    ];\r\n  }\r\n\r\n  const [balances, stakingInfo, slpTotalSupply, slpAum, skullPrice] =\r\n    await Promise.all([\r\n      rewardReader.getDepositBalances(\r\n        account,\r\n        depositTokens,\r\n        rewardTrackersForDepositBalances\r\n      ),\r\n      rewardReader\r\n        .getStakingInfo(account, rewardTrackersForStakingInfo)\r\n        .then((info) => {\r\n          return rewardTrackersForStakingInfo.map((_, i) => {\r\n            return info.slice(i * 5, (i + 1) * 5);\r\n          });\r\n        }),\r\n      slpContract.totalSupply(),\r\n      slpManager.getAumInUsdm(true),\r\n      fetch(\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=metavault-trade&vs_currencies=usd\"\r\n      ).then(async (res) => {\r\n        const j = await res.json();\r\n        return j[\"metavault-trade\"][\"usd\"];\r\n      }),\r\n    ]);\r\n\r\n  const slpPrice = slpAum / 1e18 / (slpTotalSupply / 1e18);\r\n  const now = new Date();\r\n\r\n  return {\r\n    SLP: {\r\n      stakedSLP: balances[5] / 1e18,\r\n      pendingETH: stakingInfo[4][0] / 1e18,\r\n      pendingEsSKULL: stakingInfo[3][0] / 1e18,\r\n      slpPrice,\r\n    },\r\n    SKULL: {\r\n      stakedSKULL: balances[0] / 1e18,\r\n      stakedEsSKULL: balances[1] / 1e18,\r\n      pendingETH: stakingInfo[2][0] / 1e18,\r\n      pendingEsSKULL: stakingInfo[0][0] / 1e18,\r\n      skullPrice,\r\n    },\r\n    timestamp: parseInt(now / 1000),\r\n    datetime: now.toISOString(),\r\n  };\r\n}\r\n\r\nexport const tokenDecimals = {\r\n  \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\": 18, // WOP\r\n  \"0x74b23882a30290451A17c44f4F05243b6b58C76d\": 18, // WETH\r\n  \"0x321162Cd933E2Be498Cd2267a90534A804051b11\": 8, // BTC\r\n  \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\": 6, // USDC\r\n  \"0x049d68029688eAbF473097a2fC38ef61633A3C7A\": 6, // USDT\r\n  \"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\": 18, // DAI\r\n};\r\n\r\nexport const tokenSymbols = {\r\n  // Optimism\r\n  \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\": \"WOP\",\r\n  \"0x74b23882a30290451A17c44f4F05243b6b58C76d\": \"WETH\",\r\n  \"0x321162Cd933E2Be498Cd2267a90534A804051b11\": \"WBTC\",\r\n  \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\": \"USDC\",\r\n  \"0x049d68029688eAbF473097a2fC38ef61633A3C7A\": \"USDT\",\r\n  \"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\": \"DAI\",\r\n};\r\n\r\nfunction getTokenDecimals(token) {\r\n  return tokenDecimals[token] || 18;\r\n}\r\n\r\nconst knownSwapSources = {\r\n  optimism: {\r\n    [getAddress(OPTIMISM, \"Router\")]: \"SKULL\",\r\n    [getAddress(OPTIMISM, \"OrderBook\")]: \"SKULL\",\r\n    [getAddress(OPTIMISM, \"PositionManager\")]: \"SKULL\",\r\n    // [getAddress(OPTIMISM, \"OrderExecutor\")]: \"SKULL\",\r\n    [getAddress(OPTIMISM, \"FastPriceFeed\")]: \"SKULL\",\r\n    [getAddress(OPTIMISM, \"PositionExecutorUpKeep\")]: \"SKULL\",\r\n    [getAddress(OPTIMISM, \"PositionRouter\")]: \"SKULL\",\r\n  },\r\n};\r\n\r\nconst defaultFetcher = (url) => fetch(url).then((res) => res.json());\r\nexport function useRequest(url, defaultValue, fetcher = defaultFetcher) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  const [data, setData] = useState(defaultValue);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await fetcher(url);\r\n      setData(data);\r\n    } catch (ex) {\r\n      console.error(ex);\r\n      setError(ex);\r\n    }\r\n    setLoading(false);\r\n  }, [url]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useCoingeckoPrices(symbol, { from = FIRST_DATE_TS } = {}) {\r\n  // token ids https://api.coingecko.com/api/v3/coins\r\n  const _symbol = {\r\n    BTC: \"bitcoin\",\r\n    ETH: \"ethereum\",\r\n    OP: \"optimism\",\r\n    MATIC: \"matic-network\",\r\n    WBTC: \"wrapped-bitcoin\",\r\n    USDC: \"usd-coin\",\r\n    USDT: \"tether\",\r\n    DAI: \"dai\",\r\n  }[symbol];\r\n\r\n  const now = Date.now() / 1000;\r\n  const days = Math.ceil(now / 86400) - Math.ceil(from / 86400) - 1;\r\n\r\n  const url = `https://api.coingecko.com/api/v3/coins/${_symbol}/market_chart?vs_currency=usd&days=${days}&interval=daily`;\r\n\r\n  const [res, loading, error] = useRequest(url);\r\n\r\n  const data = useMemo(() => {\r\n    if (!res || res.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const ret = res.prices.map((item) => {\r\n      // -1 is for shifting to previous day\r\n      // because CG uses first price of the day, but for SLP we store last price of the day\r\n      const timestamp = item[0] - 1;\r\n      const groupTs = parseInt(timestamp / 1000 / 86400) * 86400;\r\n      return {\r\n        timestamp: groupTs,\r\n        value: item[1],\r\n      };\r\n    });\r\n    return ret;\r\n  }, [res]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nfunction getImpermanentLoss(change) {\r\n  return (2 * Math.sqrt(change)) / (1 + change) - 1;\r\n}\r\n\r\nfunction getChainSubgraph(chainName) {\r\n  // return \"chimpydev/stats\";\r\n  return \"chimpydev/core\";\r\n}\r\n\r\nexport function useGraph(\r\n  querySource,\r\n  { subgraph = null, subgraphUrl = null, chainName = \"optimism\" } = {}\r\n) {\r\n  const query = gql(querySource);\r\n\r\n  if (!subgraphUrl) {\r\n    if (!subgraph) {\r\n      subgraph = getChainSubgraph(chainName);\r\n    }\r\n    subgraphUrl = `https://api.thegraph.com/subgraphs/name/${subgraph}`;\r\n  }\r\n\r\n  const client = new ApolloClient({\r\n    link: new HttpLink({ uri: subgraphUrl, fetch }),\r\n    cache: new InMemoryCache(),\r\n  });\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, [querySource, setLoading]);\r\n\r\n  useEffect(() => {\r\n    client\r\n      .query({ query })\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((ex) => {\r\n        console.warn(\r\n          \"Subgraph request failed error: %s subgraphUrl: %s\",\r\n          ex.message,\r\n          subgraphUrl\r\n        );\r\n        setError(ex);\r\n        setLoading(false);\r\n      });\r\n  }, [querySource, setData, setError, setLoading]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useLastBlock(chainName = \"optimism\") {\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    providers[chainName]\r\n      .getBlock()\r\n      .then(setData)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useLastSubgraphBlock(chainName = \"optimism\") {\r\n  const [data, loading, error] = useGraph(\r\n    `{\r\n    _meta {\r\n      block {\r\n        number\r\n      }\r\n    } \r\n  }`,\r\n    {\r\n      chainName,\r\n    }\r\n  );\r\n  const [block, setBlock] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    providers[chainName].getBlock(data._meta.block.number).then((block) => {\r\n      setBlock(block);\r\n    });\r\n  }, [data, setBlock]);\r\n\r\n  return [block, loading, error];\r\n}\r\n\r\nexport function useTradersData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const [closedPositionsData, loading, error] = useGraph(\r\n    `{\r\n    tradingStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      profit\r\n      loss\r\n      profitCumulative\r\n      lossCumulative\r\n      longOpenInterest\r\n      shortOpenInterest\r\n    }\r\n  }`,\r\n    { chainName }\r\n  );\r\n  const [feesData] = useFeesData({ from, to, chainName });\r\n  const marginFeesByTs = useMemo(() => {\r\n    if (\r\n      !feesData ||\r\n      !closedPositionsData ||\r\n      (closedPositionsData && !closedPositionsData.tradingStats.length)\r\n    ) {\r\n      return {};\r\n    }\r\n\r\n    let feesCumulative = 0;\r\n    return feesData.reduce((memo, { timestamp, margin: fees }) => {\r\n      feesCumulative += fees;\r\n      memo[timestamp] = {\r\n        fees,\r\n        feesCumulative,\r\n      };\r\n      return memo;\r\n    }, {});\r\n  }, [feesData]);\r\n\r\n  let ret = null;\r\n  const data =\r\n    closedPositionsData && closedPositionsData.tradingStats.length > 0\r\n      ? sortBy(closedPositionsData.tradingStats, (i) => i.timestamp).map(\r\n          (dataItem) => {\r\n            const longOpenInterest = dataItem.longOpenInterest / 1e30;\r\n            const shortOpenInterest = dataItem.shortOpenInterest / 1e30;\r\n            const openInterest = longOpenInterest + shortOpenInterest;\r\n\r\n            const fees = marginFeesByTs[dataItem.timestamp]?.fees || 0;\r\n            const feesCumulative =\r\n              marginFeesByTs[dataItem.timestamp]?.feesCumulative || 0;\r\n\r\n            const profit = dataItem.profit / 1e30;\r\n            const loss = dataItem.loss / 1e30;\r\n            const profitCumulative = dataItem.profitCumulative / 1e30;\r\n            const lossCumulative = dataItem.lossCumulative / 1e30;\r\n            const pnlCumulative = profitCumulative - lossCumulative;\r\n            const pnl = profit - loss;\r\n            return {\r\n              longOpenInterest,\r\n              shortOpenInterest,\r\n              openInterest,\r\n              profit,\r\n              loss: -loss,\r\n              profitCumulative,\r\n              lossCumulative: -lossCumulative,\r\n              pnl,\r\n              pnlCumulative,\r\n              timestamp: dataItem.timestamp,\r\n            };\r\n          }\r\n        )\r\n      : null;\r\n\r\n  if (data) {\r\n    const maxProfit = maxBy(data, (item) => item.profit).profit;\r\n    const maxLoss = minBy(data, (item) => item.loss).loss;\r\n    const maxProfitLoss = Math.max(maxProfit, -maxLoss);\r\n\r\n    const maxPnl = maxBy(data, (item) => item.pnl).pnl;\r\n    const minPnl = minBy(data, (item) => item.pnl).pnl;\r\n    const maxCumulativePnl = maxBy(\r\n      data,\r\n      (item) => item.pnlCumulative\r\n    ).pnlCumulative;\r\n    const minCumulativePnl = minBy(\r\n      data,\r\n      (item) => item.pnlCumulative\r\n    ).pnlCumulative;\r\n\r\n    const profitCumulative = data[data.length - 1].profitCumulative;\r\n    const lossCumulative = data[data.length - 1].lossCumulative;\r\n    const stats = {\r\n      maxProfit,\r\n      maxLoss,\r\n      maxProfitLoss,\r\n      profitCumulative,\r\n      lossCumulative,\r\n      maxCumulativeProfitLoss: Math.max(profitCumulative, -lossCumulative),\r\n\r\n      maxAbsOfPnlAndCumulativePnl: Math.max(\r\n        Math.abs(maxPnl),\r\n        Math.abs(maxCumulativePnl),\r\n        Math.abs(minPnl),\r\n        Math.abs(minCumulativePnl)\r\n      ),\r\n    };\r\n\r\n    ret = {\r\n      data,\r\n      stats,\r\n    };\r\n  }\r\n\r\n  return [ret, loading];\r\n}\r\n\r\nfunction getSwapSourcesFragment(skip = 0, from, to) {\r\n  return `\r\n    hourlyVolumeBySources(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      source\r\n      swap\r\n    }\r\n  `;\r\n}\r\nexport function useSwapSources({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const query = `{\r\n    a: ${getSwapSourcesFragment(0, from, to)}\r\n    b: ${getSwapSourcesFragment(1000, from, to)}\r\n    c: ${getSwapSourcesFragment(2000, from, to)}\r\n    d: ${getSwapSourcesFragment(3000, from, to)}\r\n    e: ${getSwapSourcesFragment(4000, from, to)}\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  let total = 0;\r\n  let data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    const { a, b, c, d, e } = graphData;\r\n    const all = [...a, ...b, ...c, ...d, ...e];\r\n\r\n    const totalVolumeBySource = a.reduce((acc, item) => {\r\n      const source = knownSwapSources[chainName][item.source] || item.source;\r\n      if (!acc[source]) {\r\n        acc[source] = 0;\r\n      }\r\n      acc[source] += item.swap / 1e30;\r\n      return acc;\r\n    }, {});\r\n    const topVolumeSources = new Set(\r\n      Object.entries(totalVolumeBySource)\r\n        .sort((a, b) => b[1] - a[1])\r\n        .map((item) => item[0])\r\n        .slice(0, 30)\r\n    );\r\n\r\n    let ret = chain(all)\r\n      .groupBy((item) => parseInt(item.timestamp / 86400) * 86400)\r\n      .map((values, timestamp) => {\r\n        let all = 0;\r\n        const retItem = {\r\n          timestamp: Number(timestamp),\r\n          ...values.reduce((memo, item) => {\r\n            let source =\r\n              knownSwapSources[chainName][item.source] || item.source;\r\n            if (!topVolumeSources.has(source)) {\r\n              source = \"Other\";\r\n            }\r\n            if (item.swap != 0) {\r\n              const volume = item.swap / 1e30;\r\n              memo[source] = memo[source] || 0;\r\n              memo[source] += volume;\r\n              all += volume;\r\n            }\r\n            return memo;\r\n          }, {}),\r\n        };\r\n\r\n        retItem.all = all;\r\n\r\n        return retItem;\r\n      })\r\n      .sortBy((item) => item.timestamp)\r\n      .value();\r\n\r\n    return ret;\r\n  }, [graphData]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nfunction getServerHostname(chainName) {\r\n  return process.env.RAZZLE_SKULL_API_URL;\r\n}\r\n\r\nexport function useTotalVolumeFromServer() {\r\n  const [data, loading] = useRequest(getServerHostname() + \"/total_volume\");\r\n\r\n  return useMemo(() => {\r\n    if (!data) {\r\n      return [data, loading];\r\n    }\r\n\r\n    const total = data.reduce((memo, item) => {\r\n      return memo + parseInt(item.data.volume) / 1e30;\r\n    }, 0);\r\n    return [total, loading];\r\n  }, [data, loading]);\r\n}\r\n\r\nexport async function getStatsFromSubgraph(graphClient, chainName=\"optimism\"){\r\n  const queryString = `{\r\n    totalVolumes: volumeStats(where: {period: \"total\"}) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n    deltaVolumes: volumeStats(\r\n      first:1\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: \"daily\"}\r\n    ) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n  \ttotalFees: feeStats(where: {period: \"total\"}) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n\t\t}\r\n    deltaFees: feeStats(\r\n      first:1\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: \"daily\"}\r\n    ) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n  }`;\r\n\r\n  const query = gql(queryString);\r\n  const { data } = await graphClient.query({query})\r\n  const statsProps = [\"totalVolumes\", \"deltaVolumes\", \"totalFees\", \"deltaFees\"]\r\n  const methodProps = [\"swap\", \"mint\", \"burn\", \"margin\", \"liquidation\"]\r\n  const result = {}\r\n  console.log(data);\r\n  statsProps.forEach((statsProp)=>{\r\n    result[statsProp] = {}\r\n    let total = 0;\r\n    methodProps.forEach((methodProp)=>{\r\n      const statValue = parseInt(data[statsProp][0][methodProp]) / 1e30;\r\n      console.log(statValue);\r\n      result[statsProp][methodProp] = statValue\r\n      total += statValue\r\n    })\r\n    result[statsProp].total = total;\r\n  })\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nexport function useVolumeDataFromServer({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const [data, loading] = useRequest(\r\n    `${getServerHostname(chainName)}/daily_volume`,\r\n    null,\r\n    async (url) => {\r\n      let after;\r\n      const ret = [];\r\n      while (true) {\r\n        const res = await (\r\n          await fetch(url + (after ? `?after=${after}` : \"\"))\r\n        ).json();\r\n        if (res.length === 0) return ret;\r\n        for (const item of res) {\r\n          if (item.data.timestamp < from) {\r\n            return ret;\r\n          }\r\n          ret.push(item);\r\n        }\r\n        after = res[res.length - 1].id;\r\n      }\r\n    }\r\n  );\r\n\r\n  const ret = useMemo(() => {\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    const tmp = data.reduce((memo, item) => {\r\n      const timestamp = item.data.timestamp;\r\n      if (timestamp < from || timestamp > to) {\r\n        return memo;\r\n      }\r\n\r\n      let type;\r\n      if (item.data.action === \"Swap\") {\r\n        type = \"swap\";\r\n      } else if (item.data.action === \"SellUSDM\") {\r\n        type = \"burn\";\r\n      } else if (item.data.action === \"BuyUSDM\") {\r\n        type = \"mint\";\r\n      } else if (item.data.action.includes(\"LiquidatePosition\")) {\r\n        type = \"liquidation\";\r\n      } else {\r\n        type = \"margin\";\r\n      }\r\n      const volume = Number(item.data.volume) / 1e30;\r\n      memo[timestamp] = memo[timestamp] || {};\r\n      memo[timestamp][type] = memo[timestamp][type] || 0;\r\n      memo[timestamp][type] += volume;\r\n      return memo;\r\n    }, {});\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return Object.keys(tmp)\r\n      .sort()\r\n      .map((timestamp) => {\r\n        const item = tmp[timestamp];\r\n        let all = 0;\r\n\r\n        let movingAverageAll;\r\n        const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD;\r\n        if (movingAverageTs in cumulativeByTs) {\r\n          movingAverageAll =\r\n            (cumulative - cumulativeByTs[movingAverageTs]) /\r\n            MOVING_AVERAGE_DAYS;\r\n        }\r\n\r\n        PROPS.forEach((prop) => {\r\n          if (item[prop]) all += item[prop];\r\n        });\r\n        cumulative += all;\r\n        cumulativeByTs[timestamp] = cumulative;\r\n        return {\r\n          timestamp,\r\n          all,\r\n          cumulative,\r\n          movingAverageAll,\r\n          ...item,\r\n        };\r\n      });\r\n  }, [data, from, to]);\r\n\r\n  return [ret, loading];\r\n}\r\n\r\nexport function useUsersData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const query = `{\r\n    userStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      uniqueCount\r\n      uniqueSwapCount\r\n      uniqueMarginCount\r\n      uniqueMintBurnCount\r\n      uniqueCountCumulative\r\n      uniqueSwapCountCumulative\r\n      uniqueMarginCountCumulative\r\n      uniqueMintBurnCountCumulative\r\n      actionCount\r\n      actionSwapCount\r\n      actionMarginCount\r\n      actionMintBurnCount\r\n      timestamp\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const prevUniqueCountCumulative = {};\r\n  const data = graphData\r\n    ? sortBy(graphData.userStats, \"timestamp\").map((item) => {\r\n        const newCountData = [\"\", \"Swap\", \"Margin\", \"MintBurn\"].reduce(\r\n          (memo, type) => {\r\n            memo[`new${type}Count`] = prevUniqueCountCumulative[type]\r\n              ? item[`unique${type}CountCumulative`] -\r\n                prevUniqueCountCumulative[type]\r\n              : item[`unique${type}Count`];\r\n            prevUniqueCountCumulative[type] =\r\n              item[`unique${type}CountCumulative`];\r\n            return memo;\r\n          },\r\n          {}\r\n        );\r\n        const oldCount = item.uniqueCount - newCountData.newCount;\r\n        const oldPercent = ((oldCount / item.uniqueCount) * 100).toFixed(1);\r\n        return {\r\n          all: item.uniqueCount,\r\n          uniqueSum:\r\n            item.uniqueSwapCount +\r\n            item.uniqueMarginCount +\r\n            item.uniqueMintBurnCount,\r\n          oldCount,\r\n          oldPercent,\r\n          ...newCountData,\r\n          ...item,\r\n        };\r\n      })\r\n    : null;\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useFundingRateData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const query = `{\r\n    fundingRates(\r\n      first: 1000,\r\n      orderBy: timestamp,\r\n      orderDirection: desc,\r\n      where: { period: \"daily\", id_gte: ${from}, id_lte: ${to} }\r\n    ) {\r\n      id,\r\n      token,\r\n      timestamp,\r\n      startFundingRate,\r\n      startTimestamp,\r\n      endFundingRate,\r\n      endTimestamp\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    const groups = graphData.fundingRates.reduce((memo, item) => {\r\n      const symbol = tokenSymbols[item.token];\r\n      memo[item.timestamp] = memo[item.timestamp] || {\r\n        timestamp: item.timestamp,\r\n      };\r\n      const group = memo[item.timestamp];\r\n      const timeDelta =\r\n        parseInt((item.endTimestamp - item.startTimestamp) / 3600) * 3600;\r\n\r\n      let fundingRate = 0;\r\n      if (item.endFundingRate && item.startFundingRate) {\r\n        const fundingDelta = item.endFundingRate - item.startFundingRate;\r\n        const divisor = timeDelta / 86400;\r\n        fundingRate = (fundingDelta / divisor / 10000) * 365;\r\n      }\r\n      group[symbol] = fundingRate;\r\n      return memo;\r\n    }, {});\r\n\r\n    return fillNa(sortBy(Object.values(groups), \"timestamp\"), [\r\n      \"OP\",\r\n      \"ETH\",\r\n      \"USDC\",\r\n      \"USDT\",\r\n      \"BTC\",\r\n      \"DAI\",\r\n    ]);\r\n  }, [graphData]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nconst MOVING_AVERAGE_DAYS = 7;\r\nconst MOVING_AVERAGE_PERIOD = 86400 * MOVING_AVERAGE_DAYS;\r\n\r\nexport function useVolumeData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const timestampProp = \"timestamp\";\r\n  const query = `{\r\n    volumeStats(\r\n      first: 1000,\r\n      orderBy: timestamp,\r\n      orderDirection: desc\r\n      where: { period: daily, timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      ${PROPS.join(\"\\n\")}\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    let ret = sortBy(graphData.volumeStats, timestampProp).map((item) => {\r\n      const ret = { timestamp: item[timestampProp] };\r\n      let all = 0;\r\n      PROPS.forEach((prop) => {\r\n        ret[prop] = item[prop] / 1e30;\r\n        all += ret[prop];\r\n      });\r\n      ret.all = all;\r\n      return ret;\r\n    });\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return ret.map((item) => {\r\n      cumulative += item.all;\r\n\r\n      let movingAverageAll;\r\n      const movingAverageTs = item.timestamp - MOVING_AVERAGE_PERIOD;\r\n      if (movingAverageTs in cumulativeByTs) {\r\n        movingAverageAll =\r\n          (cumulative - cumulativeByTs[movingAverageTs]) / MOVING_AVERAGE_DAYS;\r\n      }\r\n\r\n      return {\r\n        movingAverageAll,\r\n        cumulative,\r\n        ...item,\r\n      };\r\n    });\r\n  }, [graphData]);\r\n\r\n  let total;\r\n\r\n  if(data&&data.length)\r\n    total = data[data.length-1].cumulative;\r\n\r\n\r\n\r\n  return [data,total, loading, error];\r\n}\r\n\r\nexport function useFeesData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const feesQuery = `{\r\n    feeStats(\r\n      first: 1000\r\n      orderBy: id\r\n      orderDirection: desc\r\n      where: { period: daily, timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      id\r\n      margin\r\n      marginAndLiquidation\r\n      swap\r\n      mint\r\n      burn\r\n      timestamp\r\n    }\r\n  }`;\r\n\r\n  let [feesData, loading, error] = useGraph(feesQuery, { chainName });\r\n\r\n  const feesChartData = useMemo(() => {\r\n    if (!feesData || (feesData && feesData.feeStats.length === 0)) {\r\n      return null;\r\n    }\r\n\r\n    let chartData = sortBy(feesData.feeStats, \"id\").map((item) => {\r\n      const ret = { timestamp: item.timestamp || item.id };\r\n\r\n      PROPS.forEach((prop) => {\r\n        if (item[prop]) {\r\n          ret[prop] = item[prop] / 1e30;\r\n        }\r\n      });\r\n\r\n      ret.liquidation = item.marginAndLiquidation / 1e30 - item.margin / 1e30;\r\n      ret.all = PROPS.reduce((memo, prop) => memo + ret[prop], 0);\r\n      return ret;\r\n    });\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return chain(chartData)\r\n      .groupBy((item) => item.timestamp)\r\n      .map((values, timestamp) => {\r\n        const all = sumBy(values, \"all\");\r\n        cumulative += all;\r\n\r\n        let movingAverageAll;\r\n        const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD;\r\n        if (movingAverageTs in cumulativeByTs) {\r\n          movingAverageAll =\r\n            (cumulative - cumulativeByTs[movingAverageTs]) /\r\n            MOVING_AVERAGE_DAYS;\r\n        }\r\n\r\n        const ret = {\r\n          timestamp: Number(timestamp),\r\n          all,\r\n          cumulative,\r\n          movingAverageAll,\r\n        };\r\n        PROPS.forEach((prop) => {\r\n          ret[prop] = sumBy(values, prop);\r\n        });\r\n        cumulativeByTs[timestamp] = cumulative;\r\n        return ret;\r\n      })\r\n      .value()\r\n      .filter((item) => item.timestamp >= from);\r\n  }, [feesData]);\r\n\r\n  return [feesChartData, loading, error];\r\n}\r\n\r\nexport function useAumPerformanceData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  groupPeriod,\r\n}) {\r\n  const [feesData, feesLoading] = useFeesData({ from, to, groupPeriod });\r\n  const [slpData, slpLoading] = useSlpData({ from, to, groupPeriod });\r\n  const [volumeData, volumeLoading] = useVolumeData({ from, to, groupPeriod });\r\n\r\n  const dailyCoef = 86400 / groupPeriod;\r\n\r\n  const data = useMemo(() => {\r\n    if (!feesData || !slpData || !volumeData) {\r\n      return null;\r\n    }\r\n\r\n    const ret = feesData.map((feeItem, i) => {\r\n      const slpItem = slpData[i];\r\n      const volumeItem = volumeData[i];\r\n      let apr =\r\n        feeItem?.all && slpItem?.aum\r\n          ? (feeItem.all / slpItem.aum) * 100 * 365 * dailyCoef\r\n          : null;\r\n      if (apr > 10000) {\r\n        apr = null;\r\n      }\r\n      let usage =\r\n        volumeItem?.all && slpItem?.aum\r\n          ? (volumeItem.all / slpItem.aum) * 100 * dailyCoef\r\n          : null;\r\n      if (usage > 10000) {\r\n        usage = null;\r\n      }\r\n\r\n      return {\r\n        timestamp: feeItem.timestamp,\r\n        apr,\r\n        usage,\r\n      };\r\n    });\r\n    const averageApr =\r\n      ret.reduce((memo, item) => item.apr + memo, 0) / ret.length;\r\n    ret.forEach((item) => (item.averageApr = averageApr));\r\n    const averageUsage =\r\n      ret.reduce((memo, item) => item.usage + memo, 0) / ret.length;\r\n    ret.forEach((item) => (item.averageUsage = averageUsage));\r\n    return ret;\r\n  }, [feesData, slpData, volumeData]);\r\n\r\n  return [data, feesLoading || slpLoading || volumeLoading];\r\n}\r\n\r\nexport function useSlpData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const query = `{\r\n    mvlpStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: daily, timestamp_gte: ${from}, timestamp_lte: ${to}}\r\n    ) {\r\n      timestamp\r\n      aumInUsdm\r\n      mvlpSupply\r\n      distributedUsd\r\n      distributedEth\r\n    }\r\n  }`;\r\n  let [data, loading, error] = useGraph(query, { chainName });\r\n\r\n  let cumulativeDistributedUsdPerSlp = 0;\r\n  let cumulativeDistributedEthPerSlp = 0;\r\n  const slpChartData = useMemo(() => {\r\n    if (!data || (data && data.mvlpStats.length === 0)) {\r\n      return null;\r\n    }\r\n\r\n    const getTimestamp = (item) => item.timestamp;\r\n\r\n    let prevSlpSupply;\r\n    let prevAum;\r\n\r\n    let ret = sortBy(data.mvlpStats, (item) => item.timestamp)\r\n      .filter((item) => item.timestamp % 86400 === 0)\r\n      .reduce((memo, item) => {\r\n        const last = memo[memo.length - 1];\r\n\r\n        const aum = Number(item.aumInUsdm) / 1e18;\r\n        const mvlpSupply = Number(item.mvlpSupply) / 1e18;\r\n\r\n        const distributedUsd = Number(item.distributedUsd) / 1e30;\r\n        const distributedUsdPerSlp = distributedUsd / mvlpSupply || 0;\r\n        cumulativeDistributedUsdPerSlp += distributedUsdPerSlp;\r\n\r\n        const distributedEth = Number(item.distributedEth) / 1e18;\r\n        const distributedEthPerSlp = distributedEth / mvlpSupply || 0;\r\n        cumulativeDistributedEthPerSlp += distributedEthPerSlp;\r\n\r\n        const slpPrice = aum / mvlpSupply;\r\n        const timestamp = parseInt(item.timestamp);\r\n\r\n        const newItem = {\r\n          timestamp,\r\n          aum,\r\n          mvlpSupply,\r\n          slpPrice,\r\n          cumulativeDistributedEthPerSlp,\r\n          cumulativeDistributedUsdPerSlp,\r\n          distributedUsdPerSlp,\r\n          distributedEthPerSlp,\r\n        };\r\n\r\n        if (last && last.timestamp === timestamp) {\r\n          memo[memo.length - 1] = newItem;\r\n        } else {\r\n          memo.push(newItem);\r\n        }\r\n\r\n        return memo;\r\n      }, [])\r\n      .map((item) => {\r\n        let { mvlpSupply, aum } = item;\r\n        if (!mvlpSupply) {\r\n          mvlpSupply = prevSlpSupply;\r\n        }\r\n        if (!aum) {\r\n          aum = prevAum;\r\n        }\r\n        item.mvlpSupplyChange = prevSlpSupply\r\n          ? ((mvlpSupply - prevSlpSupply) / prevSlpSupply) * 100\r\n          : 0;\r\n        if (item.mvlpSupplyChange > 1000) item.mvlpSupplyChange = 0;\r\n        item.aumChange = prevAum ? ((aum - prevAum) / prevAum) * 100 : 0;\r\n        if (item.aumChange > 1000) item.aumChange = 0;\r\n        prevSlpSupply = mvlpSupply;\r\n        prevAum = aum;\r\n        return item;\r\n      });\r\n\r\n    ret = fillNa(ret);\r\n    return ret;\r\n  }, [data]);\r\n\r\n  return [slpChartData, loading, error];\r\n}\r\n\r\nexport function useSlpPerformanceData(\r\n  slpData,\r\n  feesData,\r\n  { from = FIRST_DATE_TS, chainName = \"optimism\" } = {}\r\n) {\r\n  const [btcPrices] = useCoingeckoPrices(\"BTC\", { from });\r\n  const [ethPrices] = useCoingeckoPrices(\"ETH\", { from });\r\n  const [maticPrices] = useCoingeckoPrices(\"OP\", { from });\r\n\r\n  const slpPerformanceChartData = useMemo(() => {\r\n    if (!btcPrices || !ethPrices || !slpData || !feesData) {\r\n      return null;\r\n    }\r\n\r\n    const slpDataById = slpData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item;\r\n      return memo;\r\n    }, {});\r\n\r\n    const feesDataById = feesData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item;\r\n      return memo;\r\n    });\r\n\r\n    let BTC_WEIGHT = 0.15;\r\n    let ETH_WEIGHT = 0.2;\r\n    let OP_WEIGHT = 0.1;\r\n\r\n\r\n    let prevEthPrice = 1200;\r\n    let prevMaticPrice = 0.4;\r\n\r\n    const STABLE_WEIGHT = 0.5;\r\n    const SLP_START_PRICE =\r\n      slpDataById[btcPrices[0].timestamp]?.slpPrice || 1.19;\r\n\r\n    const btcFirstPrice = btcPrices[0]?.value;\r\n    const ethFirstPrice = ethPrices[0]?.value;\r\n    const maticFirstPrice = ( maticPrices && maticPrices[0] && maticPrices[0].value ) || prevMaticPrice;\r\n\r\n    const indexBtcCount = (SLP_START_PRICE * BTC_WEIGHT) / btcFirstPrice;\r\n    const indexEthCount = (SLP_START_PRICE * ETH_WEIGHT) / ethFirstPrice;\r\n    const indexMaticCount = (SLP_START_PRICE * OP_WEIGHT) / maticFirstPrice;\r\n\r\n    const lpBtcCount = (SLP_START_PRICE * 0.5) / btcFirstPrice;\r\n    const lpEthCount = (SLP_START_PRICE * 0.5) / ethFirstPrice;\r\n    const lpMaticCount = (SLP_START_PRICE * 0.5) / maticFirstPrice;\r\n\r\n    const ret = [];\r\n    let cumulativeFeesPerSlp = 0;\r\n    let cumulativeEsskullRewardsPerSlp = 0;\r\n    let lastSlpPrice = 0;\r\n\r\n    for (let i = 0; i < btcPrices.length; i++) {\r\n      const btcPrice = btcPrices[i].value;\r\n      const ethPrice = ethPrices[i]?.value || prevEthPrice;\r\n      const maticPrice = ( maticPrices && maticPrices[i] && maticPrices[i].value ) || prevMaticPrice;\r\n      prevMaticPrice = maticPrice;\r\n      prevEthPrice = ethPrice;\r\n\r\n      const timestampGroup = parseInt(btcPrices[i].timestamp / 86400) * 86400;\r\n      const slpItem = slpDataById[timestampGroup];\r\n      const slpPrice = slpItem?.slpPrice ?? lastSlpPrice;\r\n      lastSlpPrice = slpPrice;\r\n      const mvlpSupply = slpDataById[timestampGroup]?.mvlpSupply;\r\n      const dailyFees = feesDataById[timestampGroup]?.all;\r\n\r\n      const syntheticPrice =\r\n        indexBtcCount * btcPrice +\r\n        indexEthCount * ethPrice +\r\n        indexMaticCount * maticPrice +\r\n        SLP_START_PRICE * STABLE_WEIGHT;\r\n\r\n      const lpBtcPrice =\r\n        (lpBtcCount * btcPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(btcPrice / btcFirstPrice));\r\n      const lpEthPrice =\r\n        (lpEthCount * ethPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(ethPrice / ethFirstPrice));\r\n      const lpMaticPrice =\r\n        (lpMaticCount * maticPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(maticPrice / maticFirstPrice));\r\n\r\n      if (dailyFees && mvlpSupply) {\r\n        const INCREASED_SLP_REWARDS_TIMESTAMP = 1635714000;\r\n        const SLP_REWARDS_SHARE =\r\n          timestampGroup >= INCREASED_SLP_REWARDS_TIMESTAMP ? 0.7 : 0.5;\r\n        const collectedFeesPerSlp =\r\n          (dailyFees / mvlpSupply) * SLP_REWARDS_SHARE;\r\n        cumulativeFeesPerSlp += collectedFeesPerSlp;\r\n\r\n        cumulativeEsskullRewardsPerSlp += (slpPrice * 0.8) / 365;\r\n      }\r\n\r\n      let slpPlusFees = slpPrice;\r\n      if (slpPrice && mvlpSupply && cumulativeFeesPerSlp) {\r\n        slpPlusFees = slpPrice + cumulativeFeesPerSlp;\r\n      }\r\n\r\n      let slpApr;\r\n      let slpPlusDistributedUsd;\r\n      let slpPlusDistributedEth;\r\n      if (slpItem) {\r\n        if (slpItem.cumulativeDistributedUsdPerSlp) {\r\n          slpPlusDistributedUsd =\r\n            slpPrice + slpItem.cumulativeDistributedUsdPerSlp;\r\n          // slpApr = slpItem.distributedUsdPerSlp / slpPrice * 365 * 100 // incorrect?\r\n        }\r\n        if (slpItem.cumulativeDistributedEthPerSlp) {\r\n          slpPlusDistributedEth =\r\n            slpPrice + slpItem.cumulativeDistributedEthPerSlp * ethPrice;\r\n        }\r\n      }\r\n\r\n      ret.push({\r\n        timestamp: btcPrices[i].timestamp,\r\n        syntheticPrice,\r\n        lpBtcPrice,\r\n        lpEthPrice,\r\n        lpMaticPrice,\r\n        slpPrice,\r\n        btcPrice,\r\n        ethPrice,\r\n        slpPlusFees,\r\n        slpPlusDistributedUsd,\r\n        slpPlusDistributedEth,\r\n\r\n        performanceLpEth: ((slpPrice / lpEthPrice) * 100).toFixed(1),\r\n        performanceLpEthCollectedFees: (\r\n          (slpPlusFees / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceLpEthDistributedUsd: (\r\n          (slpPlusDistributedUsd / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceLpEthDistributedEth: (\r\n          (slpPlusDistributedEth / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        performanceLpBtcCollectedFees: (\r\n          (slpPlusFees / lpBtcPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        performanceSynthetic: ((slpPrice / syntheticPrice) * 100).toFixed(1),\r\n        performanceSyntheticCollectedFees: (\r\n          (slpPlusFees / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceSyntheticDistributedUsd: (\r\n          (slpPlusDistributedUsd / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceSyntheticDistributedEth: (\r\n          (slpPlusDistributedEth / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        slpApr,\r\n      });\r\n    }\r\n\r\n    return ret;\r\n  }, [btcPrices, ethPrices, slpData, feesData]);\r\n\r\n  return [slpPerformanceChartData];\r\n}\r\n\r\nexport function useReferralsData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"optimism\",\r\n} = {}) {\r\n  const query = `{\r\n    globalStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      volume\r\n      volumeCumulative\r\n      totalRebateUsd\r\n      totalRebateUsdCumulative\r\n      discountUsd\r\n      discountUsdCumulative\r\n      referrersCount\r\n      referrersCountCumulative\r\n      referralCodesCount\r\n      referralCodesCountCumulative\r\n      referralsCount\r\n      referralsCountCumulative\r\n      timestamp\r\n    }\r\n  }`;\r\n\r\n  const subgraph = process.env.RAZZLE_REFERRAL_SUBGRAPH_URL;\r\n  const [graphData, loading, error] = useGraph(query, { subgraph });\r\n\r\n  const data = graphData\r\n    ? sortBy(graphData.globalStats, \"timestamp\").map((item) => {\r\n        const totalRebateUsd = item.totalRebateUsd / 1e30;\r\n        const discountUsd = item.discountUsd / 1e30;\r\n        return {\r\n          ...item,\r\n          volume: item.volume / 1e30,\r\n          volumeCumulative: item.volumeCumulative / 1e30,\r\n          totalRebateUsd,\r\n          totalRebateUsdCumulative: item.totalRebateUsdCumulative / 1e30,\r\n          discountUsd,\r\n          referrerRebateUsd: totalRebateUsd - discountUsd,\r\n          discountUsdCumulative: item.discountUsdCumulative / 1e30,\r\n          referralCodesCount: parseInt(item.referralCodesCount),\r\n          referralCodesCountCumulative: parseInt(\r\n            item.referralCodesCountCumulative\r\n          ),\r\n          referrersCount: parseInt(item.referrersCount),\r\n          referrersCountCumulative: parseInt(item.referrersCountCumulative),\r\n          referralsCount: parseInt(item.referralsCount),\r\n          referralsCountCumulative: parseInt(item.referralsCountCumulative),\r\n        };\r\n      })\r\n    : null;\r\n\r\n  return [data, loading, error];\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/Comfortaa-Bold.2df2dd0e.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Comfortaa-Light.a32b6e45.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Comfortaa-Medium.cca5f204.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Comfortaa-Regular.26795cfa.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Comfortaa-SemiBold.170d22d9.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Philosopher-Bold.a3aed8ba.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Philosopher-BoldItalic.fa16e091.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Philosopher-Italic.b9e3037c.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Philosopher-Regular.af6ea627.ttf\";","import Logger from 'console-log-level'\r\nimport { ethers } from 'ethers'\r\nimport strftime from 'strftime'\r\nimport chalk from 'chalk'\r\n\r\nconst { BigNumber } = ethers\r\n\r\nexport const CHART_HEIGHT = 400\r\nexport const YAXIS_WIDTH = 65\r\n\r\nexport const GREEN = '#22c761'\r\nexport const RED = '#f93333'\r\nexport const COLORS = [\r\n  '#ee64b8',\r\n  GREEN,\r\n  '#ff8d00',\r\n  '#00bfea',\r\n  '#8884ff',\r\n  '#ab6100',\r\n  '#c90000',\r\n  '#7b7b7b',\r\n  '#6464ff',\r\n  'purple',\r\n  'darkgreen',\r\n  RED\r\n]\r\n\r\nexport const COINCOLORS = [\r\n  '#627EEA',\r\n  '#FF9800',\r\n  '#FF007A',\r\n  '#2A5ADA',\r\n  '#2775CA',\r\n  '#26A17B',\r\n  '#9895F3',\r\n  '#8C8C8C',\r\n  '#F4B731',\r\n  'purple',\r\n  'darkgreen',\r\n  RED,\r\n  '#F0B90B',\r\n  '#FE88B1'\r\n]\r\n\r\nconst levelColor = {\r\n  'debug': 'grey',\r\n  'error': 'red',\r\n  'warn': 'orange',\r\n  'info': 'greenBright'\r\n}\r\nexport function getLogger(ns) {\r\n  return Logger({\r\n    level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',\r\n    prefix: level => {\r\n      const prefix = `[${ns}] ${level.toUpperCase()}`\r\n      return (chalk[levelColor[level]] || chalk.white)(prefix)\r\n    }\r\n  })\r\n}\r\n\r\nconst logger = getLogger('helpers')\r\n\r\nconst numberFmt0 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst numberFmt1 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 1 })\r\nconst numberFmt2 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2 })\r\nconst currencyFmt0 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst currencyFmt1 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 1 })\r\nconst currencyFmt2 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 2 })\r\n\r\nexport function fillPeriods(arr, { period, from, to, interpolate = true, extrapolate = false }) {\r\n  let i = 0\r\n  let prevTimestamp = from ? from - period : arr[0].timestamp\r\n  let prevPeriodStep = Math.floor(prevTimestamp / period)\r\n  let prevItem\r\n  const ret = []\r\n\r\n  while (i < arr.length) {\r\n    const item = arr[i]\r\n    const periodStep = Math.floor(item.timestamp / period)\r\n\r\n    if (periodStep - 1 > prevPeriodStep) {\r\n      const diff = periodStep - prevPeriodStep\r\n      let j = 1\r\n      while (j < diff) {\r\n        let newItem = { timestamp: (prevPeriodStep + j) * period }\r\n        if (interpolate) {\r\n          newItem = { ...prevItem, ...newItem }\r\n        }\r\n        ret.push(newItem)\r\n        j++\r\n      }\r\n    }\r\n\r\n    ret.push(item)\r\n\r\n    if (to && i === arr.length - 1) {\r\n      const lastPeriodStep = Math.floor(to / period)\r\n      if (lastPeriodStep > periodStep) {\r\n        const diff = lastPeriodStep - periodStep\r\n        let j = 0\r\n        while (j < diff) {\r\n          let newItem = { timestamp: (periodStep + j + 1) * period }\r\n          if (extrapolate) {\r\n            newItem = { ...item, ...newItem }\r\n          }\r\n          ret.push(newItem)\r\n          j++\r\n        }\r\n      }\r\n    }\r\n\r\n    prevItem = item\r\n    prevPeriodStep = periodStep\r\n    i++\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nfunction _getNumberFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return numberFmt2\r\n  } else if (absValue < 1000) {\r\n    return numberFmt1\r\n  } else {\r\n    return numberFmt0\r\n  }\r\n}\r\n\r\nfunction _getCurrencyFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return currencyFmt2\r\n  } else if (absValue < 1000) {\r\n    return currencyFmt1\r\n  } else {\r\n    return currencyFmt0\r\n  }\r\n}\r\n\r\nexport const formatNumber = (value, opts = {}) => {\r\n  const currency = !!opts.currency\r\n  const compact = !!opts.compact\r\n\r\n  if (currency && !compact) {\r\n    return _getCurrencyFmt(value).format(value)\r\n  }\r\n\r\n  const display = compact ? compactNumber(value) : _getNumberFmt(value).format(value)\r\n  if (currency) {\r\n    return `$${display}`\r\n  }\r\n  return display\r\n}\r\n\r\nexport const compactNumber = value => {\r\n  const abs = Math.abs(value)\r\n  if (abs >= 1e9) {\r\n    return `${(value / 1e9).toFixed(abs < 1e10 ? 2 : 1)}B`\r\n  }\r\n  if (abs >= 1e6) {\r\n    return `${(value / 1e6).toFixed(abs < 1e7 ? 2 : 1)}M`\r\n  }\r\n  if (abs >= 1e3) {\r\n    return `${(value / 1e3).toFixed(abs < 1e4 ? 2 : 1)}K`\r\n  }\r\n  return `${value.toFixed(1)}`\r\n}\r\n\r\nexport const tooltipLabelFormatter = (label, args) => {\r\n  if (!label) {\r\n    return\r\n  }\r\n\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n  }\r\n  const item = args && args[0] && args[0].payload && args[0]\r\n  const dateFmtString = '%d.%m'\r\n  const date = strftime(dateFmtString, label)\r\n  const all = item && (item.payload.all)\r\n  if (all) {\r\n    if (item && item.unit === '%') {\r\n      return date\r\n    }\r\n    return `${date}, ${formatNumber(all, {currency: true, compact: true})}`\r\n  }\r\n  return date\r\n}\r\n\r\nexport const yaxisFormatterPercent = value => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const yaxisFormatterNumber = value => {\r\n  return compactNumber(value)\r\n}\r\n\r\nexport const yaxisFormatter = (value, ...args) => {\r\n  return formatNumber(value, { currency: true, compact: true })\r\n}\r\n\r\nexport const tooltipFormatterNumber = (value, name, item) => {\r\n  return formatNumber(value)\r\n}\r\n\r\nexport const tooltipFormatterPercent = (value, name, item) => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const tooltipFormatter = (value, name, item) => {\r\n  if (item && item.unit === '%') {\r\n    return value.toFixed(2)\r\n  }\r\n  return formatNumber(value, { currency: true })\r\n}\r\n\r\nexport const tooltipLabelFormatterUnits = (label, args) => {\r\n  if (!label) {\r\n    return label\r\n  }\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n    if (!label.getDate()) {\r\n      return label\r\n    }\r\n  }\r\n  const date = strftime('%d.%m', label)\r\n\r\n  const item = args && args[0]\r\n  if (item && item.unit === '%') {\r\n    return date\r\n  }\r\n\r\n  const all = item && (item.payload.all)\r\n\r\n  if (label.constructor !== Date) {\r\n    return all ? `${label}, total: ${all}` : label\r\n  }\r\n\r\n  return all ? `${date}, total: ${all}` : date\r\n}\r\n\r\nexport function tsToIso(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, -5)\r\n}\r\n\r\nexport function tsToIsoDate(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, 10)\r\n}\r\n\r\nexport function urlWithParams(url, params) {\r\n  const paramsStr = Object.entries(params)\r\n    .reduce((memo, [key, value]) => {\r\n      if (value) memo.push(`${key}=${encodeURIComponent(value)}`)\r\n      return memo\r\n    }, [])\r\n    .join('&')\r\n  return `${url}?${paramsStr}`\r\n}\r\n\r\nexport function getProvider(chainId) {\r\n  return new ethers.providers.JsonRpcProvider(\"https://rpc.ankr.com/optimism\", chainId)\r\n}\r\n\r\nexport function findNearest(arr, needle, getter = el => el) {\r\n\tlet prevEl\r\n\tfor (const el of arr) {\r\n\t\tif (getter(el) > needle) {\r\n\t\t\tif (prevEl && getter(el) - needle > needle - getter(prevEl)) {\r\n\t\t\t\treturn prevEl\r\n\t\t\t} else {\r\n\t\t\t\treturn el\r\n\t\t\t}\r\n\t\t}\r\n\t\tprevEl = el\r\n\t}\r\n\treturn prevEl\r\n}\r\n\r\nasync function callWithRetry(func, args, maxTries = 10) {\r\n  let i = 0\r\n  while (true) {\r\n    try {\r\n      return await func(...args)\r\n    } catch (ex) {\r\n      i++\r\n      if (i == maxTries) {\r\n        throw ex\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function queryProviderLogs({ fromBlock, toBlock, address, backwards }) {\r\n  logger.info(`query logs fromBlock=%s toBlock=%s blocks length=%s backwards=%s`,\r\n  \tfromBlock,\r\n  \ttoBlock,\r\n  \ttoBlock - fromBlock,\r\n  \tbackwards\r\n  )\r\n  const allResult = []\r\n  const MAX = 1000\r\n\r\n  let chunkFromBlock\r\n  let chunkToBlock\r\n\r\n  if (backwards) {\r\n  \tchunkToBlock = toBlock\r\n  \tchunkFromBlock = Math.max(fromBlock, toBlock - MAX)\r\n  } else {\r\n\t  chunkFromBlock = fromBlock\r\n\t  chunkToBlock = Math.min(toBlock, fromBlock + MAX)\r\n  }\r\n\r\n  let i = 0\r\n  while (true) {\r\n    logger.info(`requesting ${i} chunk ${chunkFromBlock}-${chunkToBlock}...`)\r\n    let result = await callWithRetry(provider.getLogs.bind(provider), [{\r\n      fromBlock: chunkFromBlock,\r\n      toBlock: chunkToBlock,\r\n      address\r\n    }])\r\n    if (backwards) {\r\n    \tresult = result.reverse()\r\n    }\r\n    allResult.push(...result)\r\n    i++\r\n\r\n    if (!backwards && chunkToBlock === toBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n    if (backwards && chunkFromBlock === fromBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n\r\n    if (backwards) {\r\n\t    chunkToBlock = chunkFromBlock - 1\r\n\t    chunkFromBlock = Math.max(fromBlock, chunkFromBlock - MAX)\r\n    } else {\r\n\t    chunkFromBlock = chunkToBlock + 1\r\n\t    chunkToBlock = Math.min(toBlock, chunkToBlock + MAX)\r\n    }\r\n  }\r\n\r\n  return allResult\r\n}\r\n\r\nexport function LogRecord(row) {\r\n  return {\r\n    ...row,\r\n    args: JSON.parse(row.args).map(el => {\r\n      if (el && el.type === 'BigNumber') {\r\n        return BigNumber.from(el.hex)\r\n      }\r\n      return el\r\n    })\r\n  }\r\n}\r\n\r\nexport function UsdmSupplyRecord(row) {\r\n  return {\r\n    ...row,\r\n    supply: BigNumber.from(JSON.parse(row.supply).hex)\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/anzor-logo.d2fc9a5f.png\";","import * as http from 'http'\r\n\r\nlet app = require('./server').default;\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./server', function() {\r\n    console.log('🔁  HMR Reloading `./server`...');\r\n    try {\r\n      app = require('./server').default;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n  console.info('✅  Server-side HMR Enabled!');\r\n}\r\n\r\nconst port = process.env.PORT || 3105;\r\nfunction cb(err, port) {\r\n  if (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n  console.log(`> Started server on port ${port}`);\r\n}\r\n\r\nhttp.createServer(app).listen(port, err => cb(err, port))\r\n","import { getLogger } from \"./helpers\";\r\nconst logger = getLogger(\"app\");\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === \"production\";\r\n\r\nfunction _logRequest(req, res) {\r\n  const time = Date.now() - req.start;\r\n  const method = res.statusCode < 400 ? \"info\" : \"warn\";\r\n  logger[method](\r\n    \"request %s %s handled statusCode: %s in time: %sms referer: %s ip: %s\",\r\n    req.method,\r\n    req.originalUrl,\r\n    res.statusCode,\r\n    time,\r\n    req.get(\"referer\"),\r\n    req.ip\r\n  );\r\n}\r\n\r\nexport function requestLogger(req, res, next) {\r\n  req.start = Date.now();\r\n  res.on(\"close\", (evt) => {\r\n    _logRequest(req, res);\r\n  });\r\n  next();\r\n}\r\n\r\nexport function csp(req, res, next) {\r\n  const csp = {\r\n    \"default-src\": [\"'self'\"],\r\n    \"style-src\": [\"'self'\"],\r\n    \"connect-src\": [\r\n      \"https://api.thegraph.com\",\r\n      \"https://api.coingecko.com\",\r\n      \"https://stats.masonjar.finance/api\",\r\n      \"https://masonjar.finance\",\r\n      \"masonjar.finance\",\r\n    ]\r\n  };\r\n\r\n  if (!IS_PRODUCTION) {\r\n    csp[\"default-src\"].push(\"localhost:3114\")\r\n    csp[\"style-src\"].push(\"'unsafe-inline'\")\r\n    csp[\"connect-src\"].push(\"localhost:3114\", \"ws://localhost:3114\")\r\n  }\r\n  \r\n  const cspString = Object.entries(csp).map(([key, value]) => `${key} ${value.join(' ')}`).join('; ')\r\n  res.set(\"Content-Security-Policy\", cspString)\r\n  next();\r\n}\r\n","import { ethers } from 'ethers'\r\nimport React from 'react';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport { renderToString } from 'react-dom/server';\r\nimport fetch from 'cross-fetch';\r\nimport sizeof from 'object-sizeof'\r\n\r\nimport App from './App';\r\nimport { ApolloClient, InMemoryCache, gql, HttpLink } from '@apollo/client'\r\nimport { getLogger } from './helpers'\r\nimport { addresses, OPTIMISM } from './addresses'\r\nimport { queryEarnData, getStatsFromSubgraph } from './dataProvider'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\r\n\r\nconst cssLinksFromAssets = (assets, entrypoint) => {\r\n  return assets[entrypoint] ? assets[entrypoint].css ?\r\n  assets[entrypoint].css.map(asset=>\r\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\r\n  return assets[entrypoint] ? assets[entrypoint].js ?\r\n  assets[entrypoint].js.map(asset=>\r\n    `<script src=\"${asset}\"${extra}></script>`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst { formatUnits} = ethers.utils\r\n\r\nconst logger = getLogger('routes')\r\n\r\nconst apolloOptions = {\r\n  query: {\r\n    fetchPolicy: 'no-cache'\r\n  },\r\n  watchQuery: {\r\n    fetchPolicy: 'no-cache'\r\n  }\r\n}\r\n\r\nconst optimismGraphClient = new ApolloClient({\r\n  link: new HttpLink({ uri: process.env.RAZZLE_SUBGRAPH_URL, fetch }),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: apolloOptions\r\n})\r\n\r\nconst cachedPrices = {\r\n  sorted: {\r\n    [OPTIMISM]: {},\r\n  },\r\n  byKey: {\r\n    [OPTIMISM]: {},\r\n  }\r\n}\r\nfunction putPricesIntoCache(prices, chainId, entitiesKey) {\r\n  if (!prices || !chainId || !entitiesKey) {\r\n    throw new Error('Invalid arguments')\r\n  }\r\n  let ret = true\r\n  const precision = entitiesKey === \"chainlinkPrices\" ? 1e8 : 1e30\r\n  const changedTokens = new Set([])\r\n  const byKeyNs = cachedPrices.byKey\r\n  byKeyNs[chainId][entitiesKey] = byKeyNs[chainId][entitiesKey] || {}\r\n  for (const price of prices) {\r\n    const token = price.token.toLowerCase()\r\n    const timestamp = price.timestamp\r\n    byKeyNs[chainId][entitiesKey][token] = byKeyNs[chainId][entitiesKey][token] || {}\r\n    byKeyNs[chainId][entitiesKey][token][timestamp] = Number(price.value) / precision\r\n    changedTokens.add(token)\r\n  }\r\n\r\n  const sortedNs = cachedPrices.sorted\r\n  sortedNs[chainId][entitiesKey] = sortedNs[chainId][entitiesKey] || {}\r\n  for (const token of changedTokens) {\r\n    sortedNs[chainId][entitiesKey][token] = Object.entries(byKeyNs[chainId][entitiesKey][token])\r\n      .map(([timestamp, price]) => [Number(timestamp), price])\r\n      .sort((a, b) => a[0] - b[0])\r\n  }\r\n\r\n  if (!IS_PRODUCTION) {\r\n    console.time('sizeof call')\r\n    const size = sizeof(cachedPrices) / 1024 / 1024\r\n    console.timeEnd('sizeof call')\r\n    let pricesCount = 0\r\n    for (const chainId of Object.keys(cachedPrices.sorted)) {\r\n      for (const entitiesKey of Object.keys(cachedPrices.sorted[chainId])) {\r\n        for (const prices of Object.values(cachedPrices.sorted[chainId][entitiesKey])) {\r\n          pricesCount += prices.length\r\n        }\r\n      }\r\n    }\r\n    logger.debug('Estimated price cache size: %s MB, prices count: %s', size, pricesCount)\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nclass TtlCache {\r\n  constructor(ttl = 60, maxKeys) {\r\n    this._cache = {}\r\n    this._ttl = ttl\r\n    this._maxKeys = maxKeys\r\n    this._logger = getLogger('routes.TtlCache')\r\n  }\r\n\r\n  get(key) {\r\n    this._logger.debug('get key %s', key)\r\n    return this._cache[key]\r\n  }\r\n\r\n  set(key, value) {\r\n    this._cache[key] = value\r\n\r\n    const keys = Object.keys(this._cache)\r\n    if (this._maxKeys && keys.length >= this._maxKeys) {\r\n      for (let i = 0; i <= keys.length - this._maxKeys; i++) {\r\n        this._logger.debug('delete key %s (max keys)', key)\r\n        delete this._cache[keys[i]]\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this._logger.debug('delete key %s (ttl)', key)\r\n      delete this._cache[key]\r\n    }, this._ttl * 1000)\r\n\r\n    if (!IS_PRODUCTION) {\r\n      console.time('sizeof call')\r\n      const size = sizeof(this._cache) / 1024 / 1024\r\n      console.timeEnd('sizeof call')\r\n      this._logger.debug('TtlCache cache size %s MB', size)\r\n    }\r\n  }\r\n}\r\nconst ttlCache = new TtlCache(60, 100)\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nasync function precacheOldPrices(chainId, entitiesKey) {\r\n  logger.info('precache old prices into memory for %s...', chainId)\r\n\r\n  const baseRetryTimeout = 10000\r\n  let oldestTimestamp = parseInt(Date.now() / 1000)\r\n  let i = 0\r\n  let retryTimeout = baseRetryTimeout\r\n  let failCount = 0\r\n  while (i < 100) {\r\n    try {\r\n      const prices = await loadPrices({ before: oldestTimestamp, chainId, entitiesKey })\r\n      if (prices.length === 0) {\r\n        logger.info('All old prices loaded for chain: %s %s', chainId, entitiesKey)\r\n        break\r\n      }\r\n\r\n      if (!putPricesIntoCache(prices, chainId, entitiesKey)) {\r\n        logger.info('putPricesIntoCache returned false for chain: %s %s. stop', chainId, entitiesKey)\r\n        break\r\n      }\r\n      oldestTimestamp = prices[prices.length - 1].timestamp - 1\r\n      failCount = 0\r\n      retryTimeout = baseRetryTimeout\r\n    } catch (ex) {\r\n      failCount++\r\n      logger.warn('Old prices load failed')\r\n      logger.error(ex)\r\n      if (failCount > 10) {\r\n        logger.warn('too many load failures for chainId: %s %s. retry in %s seconds',\r\n          chainId, entitiesKey, retryTimeout / 1000)\r\n        await sleep(retryTimeout)\r\n        retryTimeout *= 2\r\n      }\r\n      await sleep(500)\r\n    }\r\n    i++\r\n  }\r\n}\r\nif (!process.env.DISABLE_PRICES) {\r\n  precacheOldPrices(OPTIMISM, \"chainlinkPrices\")\r\n  precacheOldPrices(OPTIMISM, \"fastPrices\")\r\n}\r\n\r\n\r\nlet newestPriceTimestamp = parseInt(Date.now() / 1000) - 60 * 5\r\nasync function precacheNewPrices(chainId, entitiesKey) {\r\n  logger.info('Precache new prices into memory chainId: %s %s...', chainId, entitiesKey)\r\n\r\n  try {\r\n    const after = newestPriceTimestamp - 60 * 15 // 15 minutes before last update.\r\n    const prices = await loadPrices({ after, chainId, entitiesKey })\r\n    if (prices.length > 0) {\r\n      logger.info('Loaded %s prices since %s chainId: %s %s',\r\n        prices.length,\r\n        toReadable(after),\r\n        chainId,\r\n        entitiesKey\r\n      )\r\n      if (putPricesIntoCache(prices, chainId, entitiesKey)) {\r\n        newestPriceTimestamp = prices[0].timestamp\r\n      } else {\r\n        logger.warn('Prices were not saved')\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    logger.warn('New prices load failed chainId: %s %s', chainId, entitiesKey)\r\n    logger.error(ex)\r\n  }\r\n\r\n  setTimeout(precacheNewPrices, 1000 * 60 * 1, chainId, entitiesKey)\r\n}\r\nif (!process.env.DISABLE_PRICES) {\r\n  precacheNewPrices(OPTIMISM, \"chainlinkPrices\")\r\n  precacheNewPrices(OPTIMISM, \"fastPrices\")\r\n}\r\n\r\nasync function loadPrices({ before, after, chainId, entitiesKey } = {}) {\r\n  if (!chainId) {\r\n    throw new Error('loadPrices requires chainId')\r\n  }\r\n  if (!entitiesKey) {\r\n    throw new Error('loadPrices requires entitiesKey')\r\n  }\r\n  if (!before) {\r\n    before = parseInt(Date.now() / 1000) + 86400 * 365\r\n  }\r\n  if (!after) {\r\n    after = 0\r\n  }\r\n  logger.info('loadPrices %s chainId: %s before: %s, after: %s',\r\n    entitiesKey,\r\n    chainId,\r\n    toReadable(before),\r\n    after && toReadable(after)\r\n  )\r\n\r\n  const fragment = (skip) => {\r\n     return `${entitiesKey}(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {\r\n        timestamp_lte: ${before}\r\n        timestamp_gte: ${after}\r\n        period: any\r\n      }\r\n    ) { value, timestamp, token }\\n`\r\n  }\r\n  const queryString = `{\r\n    p0: ${fragment(0)}\r\n    p1: ${fragment(1000)}\r\n    p2: ${fragment(2000)}\r\n    p3: ${fragment(3000)}\r\n    p4: ${fragment(4000)}\r\n    p5: ${fragment(5000)}\r\n  }`\r\n  const query = gql(queryString)\r\n\r\n  const graphClient = optimismGraphClient;\r\n  const { data } = await graphClient.query({query})\r\n  const prices = [\r\n    ...data.p0,\r\n    ...data.p1,\r\n    ...data.p2,\r\n    ...data.p3,\r\n    ...data.p4,\r\n    ...data.p5\r\n  ]\r\n\r\n  if (prices.length) {\r\n    logger.debug('Loaded %s prices (%s – %s) for chain %s %s',\r\n      prices.length,\r\n      toReadable(prices[prices.length - 1].timestamp),\r\n      toReadable(prices[0].timestamp),\r\n      chainId,\r\n      entitiesKey,\r\n    )\r\n  }\r\n\r\n  return prices\r\n}\r\n\r\nfunction toReadable(ts) {\r\n  return (new Date(ts * 1000).toISOString()).replace('T', ' ').replace('.000Z', '')\r\n}\r\n\r\nfunction getPriceRange(sortedPrices, from, to, inbound = false) {\r\n  const indexFrom = binSearchPrice(sortedPrices, from, inbound)\r\n  const indexTo = binSearchPrice(sortedPrices, to, !inbound) + 1\r\n\r\n  return [\r\n    sortedPrices.slice(indexFrom, indexTo),\r\n    sortedPrices[0][0]\r\n  ]\r\n}\r\n\r\nfunction binSearchPrice(prices, timestamp, gt = true) {\r\n  let left = 0\r\n  let right = prices.length - 1\r\n  let mid\r\n  while (left + 1 < right) {\r\n    mid = Math.floor((left + right) / 2)\r\n    if (prices[mid][0] < timestamp) {\r\n      left = mid\r\n    } else {\r\n      right = mid\r\n    }\r\n  }\r\n  const ret = gt ? right : left\r\n  return ret\r\n}\r\n\r\nfunction getPrices(from, to, preferableChainId = OPTIMISM, preferableSource = \"chainlink\", symbol) {\r\n  const start = Date.now()\r\n\r\n  if (preferableSource !== \"chainlink\" && preferableSource !== \"fast\") {\r\n    throw createHttpError(400, `Invalid preferableSource ${preferableSource}. Valid options are: chainlink, fast`)\r\n  }\r\n\r\n  const validSymbols = new Set(['OP', 'BTC', 'ETH'])\r\n  if (!validSymbols.has(symbol)) {\r\n    throw createHttpError(400, `Invalid symbol ${symbol}`)\r\n  }\r\n  preferableChainId = Number(preferableChainId)\r\n  const validSources = new Set([OPTIMISM])\r\n  if (!validSources.has(preferableChainId)) {\r\n    throw createHttpError(400, `Invalid preferableChainId ${preferableChainId}. Valid options are ${OPTIMISM}`)\r\n  }\r\n\r\n  const tokenAddress = addresses[preferableChainId][symbol]?.toLowerCase()\r\n  if (!tokenAddress || !cachedPrices.byKey[preferableChainId].chainlinkPrices\r\n    || !cachedPrices.byKey[preferableChainId].chainlinkPrices[tokenAddress]\r\n  ) {\r\n    return []\r\n  }\r\n\r\n  const cacheKey = `${from}:${to}:${preferableChainId}:${preferableSource}:${symbol}`\r\n  const fromCache = ttlCache.get(cacheKey)\r\n  if (fromCache) {\r\n    logger.debug('from cache')\r\n    return fromCache\r\n  }\r\n\r\n  const entitiesKey = preferableSource === \"chainlink\" ? \"chainlinkPrices\" : \"fastPrices\"\r\n\r\n  const sortedPrices = (\r\n    cachedPrices.sorted[preferableChainId]\r\n    && cachedPrices.sorted[preferableChainId][entitiesKey]\r\n    && cachedPrices.sorted[preferableChainId][entitiesKey][tokenAddress]\r\n  ) || []\r\n\r\n  let [prices, firstTimestamp] = getPriceRange(sortedPrices, from, to)\r\n\r\n  if (preferableSource === \"fast\" && firstTimestamp > from) {\r\n    // there is no enough fast price data. upfill it with chainlink prices\r\n    const otherSortedPrices = (\r\n      cachedPrices.sorted[preferableChainId]\r\n      && cachedPrices.sorted[preferableChainId].chainlinkPrices\r\n      && cachedPrices.sorted[preferableChainId].chainlinkPrices[tokenAddress]\r\n    ) || []\r\n    const [chainlinkPrices] = getPriceRange(otherSortedPrices, from, firstTimestamp, true)\r\n\r\n    prices = [...chainlinkPrices, ...prices]\r\n  }\r\n\r\n  ttlCache.set(cacheKey, prices)\r\n\r\n  logger.debug('getPrices took %sms cacheKey %s', Date.now() - start, cacheKey)\r\n\r\n  return prices\r\n}\r\n\r\nconst periodsMap = {\r\n  '5m': 60 * 5,\r\n  '15m': 60 * 15,\r\n  '1h': 60 * 60,\r\n  '4h': 60 * 60 * 4,\r\n  '1d': 60 * 60 * 24,\r\n  '1w': 60 * 60 * 24 * 7\r\n}\r\n\r\nfunction getCandles(prices, period) {\r\n  const periodTime = periodsMap[period]\r\n\r\n  if (prices.length < 2) {\r\n    return []\r\n  }\r\n\r\n  const candles = []\r\n  const first = prices[0]\r\n  let prevTsGroup = Math.floor(first[0] / periodTime) * periodTime\r\n  let prevPrice = first[1]\r\n  let prevTs = first[0]\r\n  let o = prevPrice\r\n  let h = prevPrice\r\n  let l = prevPrice\r\n  let c = prevPrice\r\n  for (let i = 1; i < prices.length; i++) {\r\n    const [ts, price] = prices[i]\r\n    const tsGroup = ts - (ts % periodTime)\r\n\r\n    if (prevTs > ts) {\r\n      logger.warn(`Invalid order prevTs: ${prevTs} (${toReadable(prevTs)}) ts: ${ts} (${toReadable(ts)})`)\r\n      continue\r\n    }\r\n\r\n    if (prevTsGroup !== tsGroup) {\r\n      candles.push({ t: prevTsGroup, o, h, l, c })\r\n      o = c\r\n      h = o > c ? o : c\r\n      l = o < c ? o : c\r\n    }\r\n    c = price\r\n    h = h > price ? h : price\r\n    l = l < price ? l : price\r\n    prevTsGroup = tsGroup\r\n    prevTs = ts\r\n  }\r\n\r\n  return candles\r\n}\r\n\r\nfunction getFromAndTo(req) {\r\n  const granularity = 60 // seconds\r\n  let from = Number(req.query.from) || Math.round(Date.now() / 1000) - 86400 * 90\r\n  from = Math.floor(from / granularity) * granularity\r\n  let to = Number(req.query.to) || Math.round(Date.now() / 1000)\r\n  to = Math.ceil(to / granularity) * granularity\r\n\r\n  return [from, to]\r\n}\r\n\r\nfunction createHttpError(code, message) {\r\n  const error = new Error(message)\r\n  error.code = code\r\n  return error\r\n}\r\n\r\nexport default function routes(app) {\r\n\r\n  app.get('/api/total_volumes', async (req, res, next) => {\r\n    const queryString = `\r\n    {\r\n      volumeStats (where : {period:\"total\"}){\r\n        id\r\n        swap\r\n        mint\r\n        margin\r\n        burn\r\n        liquidation\r\n        period\r\n      }\r\n    }\r\n    `\r\n    const query = gql(queryString);\r\n\r\n    const graphClient = optimismGraphClient;\r\n    const { data } = await graphClient.query({query})\r\n    \r\n    try {\r\n      const stats = data.volumeStats[0]\r\n      const statsResponse = {\r\n        swap: parseInt(stats.swap) / 1e30,\r\n        mint: parseInt(stats.mint) / 1e30,\r\n        burn: parseInt(stats.burn) / 1e30,\r\n        margin: parseInt(stats.margin) / 1e30,\r\n        liquidation: parseInt(stats.liquidation) / 1e30\r\n      };\r\n\r\n      statsResponse.total = statsResponse.swap + statsResponse.mint + statsResponse.burn + statsResponse.margin + statsResponse.liquidation;\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(statsResponse)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/stats', async (req, res, next) => {\r\n\r\n    try {\r\n      const stats = await getStatsFromSubgraph(optimismGraphClient);\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(stats)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/total_volumes_delta', async (req, res, next) => {\r\n    const queryString = `\r\n    {\r\n      volumeStats (first:1 orderBy: timestamp orderDirection: desc where : {period:\"daily\"}){\r\n        id\r\n        swap\r\n        mint\r\n        margin\r\n        burn\r\n        liquidation\r\n        period\r\n      }\r\n    }\r\n    `\r\n    const query = gql(queryString);\r\n\r\n    const graphClient = optimismGraphClient;\r\n    const { data } = await graphClient.query({query})\r\n    \r\n    try {\r\n      const stats = data.volumeStats[0]\r\n      const statsResponse = {\r\n        swap: parseInt(stats.swap) / 1e30,\r\n        mint: parseInt(stats.mint) / 1e30,\r\n        burn: parseInt(stats.burn) / 1e30,\r\n        margin: parseInt(stats.margin) / 1e30,\r\n        liquidation: parseInt(stats.liquidation) / 1e30\r\n      };\r\n\r\n      statsResponse.total = statsResponse.swap + statsResponse.mint + statsResponse.burn + statsResponse.margin + statsResponse.liquidation;\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(statsResponse)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/earn/:account', async (req, res, next) => {\r\n    const chainName = req.query.chain || 'optimism'\r\n    const validChainNames = new Set(['optimism'])\r\n    if (!validChainNames.has(chainName)) {\r\n      next(createHttpError(400, `Valid chains are: ${Array.from(validChainNames)}`))\r\n      return\r\n    }\r\n    try {\r\n      const earnData = await queryEarnData(chainName, req.params.account)\r\n      res.send(earnData)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/skull-supply', async (req, res) => {\r\n    const apiResponse = await fetch('https://stats.masonjar.finance/api/total_supply')\r\n    const data = (await apiResponse.text()).toString()\r\n    res.set('Content-Type', 'text/plain')\r\n    res.send(formatUnits(data))\r\n  })\r\n\r\n  app.get('/api/chart/:symbol', async (req, res, next) => {\r\n    const [from, to] = getFromAndTo(req)\r\n\r\n    let prices\r\n    try {\r\n      prices = getPrices(from, to, req.query.preferableChainId, req.query.preferableSource, req.params.symbol)\r\n    } catch (ex) {\r\n      next(ex)\r\n      return\r\n    }\r\n\r\n    res.set('Cache-Control', 'max-age=60')\r\n    res.send(prices)\r\n  })\r\n\r\n  app.get('/api/candles/:symbol', async (req, res, next) => {\r\n    const [from, to] = getFromAndTo(req)\r\n\r\n    let prices\r\n    try {\r\n      prices = getPrices(from, to, req.query.preferableChainId, req.query.preferableSource, req.params.symbol)\r\n    } catch (ex) {\r\n      next(ex)\r\n      return\r\n    }\r\n\r\n    const period = req.query.period?.toLowerCase()\r\n    if (!period || !periodsMap[period]) {\r\n      next(createHttpError(400, `Invalid period. Valid periods are ${Object.keys(periodsMap)}`))\r\n      return\r\n    }\r\n\r\n    const candles = getCandles(prices, period)\r\n    let updatedAt\r\n    if (prices.length) {\r\n      updatedAt = prices[prices.length - 1][0]\r\n    }\r\n\r\n    res.set('Cache-Control', 'max-age=60')\r\n    res.send({\r\n      prices: candles,\r\n      period,\r\n      updatedAt\r\n    })\r\n  })\r\n\r\n  const cssAssetsTag = cssLinksFromAssets(assets, 'client')\r\n  const jsAssetsTag = jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')\r\n\r\n  app.get('/*', (req, res, next) => {\r\n    if (res.headersSent) {\r\n      next()\r\n      return\r\n    }\r\n\r\n    const context = {};\r\n    const markup = renderToString(\r\n      <StaticRouter context={context} location={req.url}>\r\n        <App />\r\n      </StaticRouter>\r\n    );\r\n    res.set('Content-Type', 'text/html')\r\n\r\n    res.status(200).send(\r\n      `<!doctype html>\r\n          <html lang=\"\">\r\n          <head>\r\n              <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n              <meta charset=\"utf-8\" />\r\n              <title>Mason Jar Statistics</title>\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n              <link rel=\"icon\" type=\"image/png\" href=\"/favicon.png\" />\r\n              ${cssAssetsTag}\r\n          </head>\r\n          <body>\r\n              <div id=\"root\">${markup}</div>\r\n              ${jsAssetsTag}\r\n          </body>\r\n      </html>`\r\n    );\r\n    next()\r\n  });\r\n\r\n  app.use('/api', function (err, req, res, next) {\r\n    res.set('Content-Type', 'text/plain')\r\n    const statusCode = Number(err.code) || 500\r\n    let response = ''\r\n    if (IS_PRODUCTION) {\r\n      if (err.code === 400) {\r\n        response = err.message\r\n      }\r\n    } else {\r\n      response = err.stack\r\n    }\r\n    res.status(statusCode)\r\n    res.send(response)\r\n  })\r\n}","import express from 'express';\r\n\r\nimport routes from './routes'\r\nimport { requestLogger, csp } from './middlewares'\r\n\r\nconst app = express();\r\n// app.set('trust proxy', true)\r\n\r\napp\r\n  .disable('x-powered-by')\r\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\r\n  .use(require('cors')())\r\n  .use(requestLogger)\r\n  // .use(csp)\r\n  .use((req, res, next) => {\r\n    res.set('X-Content-Type-Options', 'nosniff')\r\n    res.set('X-Frame-Options', 'DENY')\r\n    res.set('Referrer-Policy', 'same-origin')\r\n    next()\r\n  })\r\n\r\napp.get('/ping', (req, res, next) => {\r\n  res.send('ok')\r\n  next()\r\n});\r\n\r\nroutes(app)\r\n\r\nexport default app;\r\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport * as ethers from \"ethers\";\r\nimport moment from \"moment\";\r\nimport { RiLoader5Fill } from \"react-icons/ri\";\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatter,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  formatNumber,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS\r\n} from \"../helpers\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie,\r\n} from \"recharts\";\r\n\r\nimport ChartWrapper from \"../components/ChartWrapper\";\r\nimport VolumeChart from \"../components/VolumeChart\";\r\nimport FeesChart from \"../components/FeesChart\";\r\nimport GenericChart from \"../components/GenericChart\";\r\n\r\nimport {\r\n  useVolumeData,\r\n  useTotalVolumeFromServer,\r\n  useVolumeDataFromServer,\r\n  useFeesData,\r\n  useSlpData,\r\n  useAumPerformanceData,\r\n  useCoingeckoPrices,\r\n  useSlpPerformanceData,\r\n  useTradersData,\r\n  useSwapSources,\r\n  useFundingRateData,\r\n  useUsersData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock,\r\n} from \"../dataProvider\";\r\n\r\nconst { BigNumber } = ethers;\r\nconst { formatUnits } = ethers.utils;\r\nconst NOW = Math.floor(Date.now() / 1000);\r\n\r\nfunction Optimism(props) {\r\n  const DEFAULT_GROUP_PERIOD = 86400;\r\n  const [groupPeriod, setGroupPeriod] = useState(DEFAULT_GROUP_PERIOD);\r\n\r\n  const [fromValue, setFromValue] = useState();\r\n  const [toValue, setToValue] = useState();\r\n\r\n  const { mode } = props;\r\n\r\n  const setDateRange = useCallback(\r\n    (range) => {\r\n      setFromValue(\r\n        new Date(Date.now() - range * 1000).toISOString().slice(0, 10)\r\n      );\r\n      setToValue(undefined);\r\n    },\r\n    [setFromValue, setToValue]\r\n  );\r\n\r\n  const from = fromValue ? +new Date(fromValue) / 1000 : undefined;\r\n  const to = toValue ? +new Date(toValue) / 1000 : NOW;\r\n\r\n  const params = { from, to, groupPeriod };\r\n\r\n  const [fundingRateData, fundingRateLoading] = useFundingRateData(params);\r\n  // const [volumeData, volumeLoading] = useVolumeDataFromServer(params);\r\n  const [volumeData, totalVolume, volumeLoading] = useVolumeData(params);\r\n  //const [totalVolume] = useTotalVolumeFromServer();\r\n  const totalVolumeDelta = useMemo(() => {\r\n    if (!volumeData || volumeData.length == 0) {\r\n      return null;\r\n    }\r\n    return volumeData[volumeData.length - 1].all;\r\n  }, [volumeData]);\r\n\r\n  const [feesData, feesLoading] = useFeesData(params);\r\n  const [totalFees, totalFeesDelta] = useMemo(() => {\r\n    if (!feesData) {\r\n      return [];\r\n    }\r\n    const total = feesData[feesData.length - 1]?.cumulative;\r\n    const delta = total - feesData[feesData.length - 2]?.cumulative;\r\n    return [total, delta];\r\n  }, [feesData]);\r\n\r\n  const [slpData, slpLoading] = useSlpData(params);\r\n  const [totalAum, totalAumDelta] = useMemo(() => {\r\n    if (!slpData) {\r\n      return [];\r\n    }\r\n    const total = slpData[slpData.length - 1]?.aum;\r\n    const delta = total - slpData[slpData.length - 2]?.aum;\r\n    return [total, delta];\r\n  }, [slpData]);\r\n\r\n  const [aumPerformanceData, aumPerformanceLoading] =\r\n    useAumPerformanceData(params);\r\n\r\n  const [slpPerformanceData, slpPerformanceLoading] = useSlpPerformanceData(\r\n    slpData,\r\n    feesData,\r\n    params\r\n  );\r\n\r\n  const [tradersData, tradersLoading] = useTradersData(params);\r\n  const [openInterest, openInterestDelta] = useMemo(() => {\r\n    if (!tradersData) {\r\n      return [];\r\n    }\r\n    const total = tradersData.data[tradersData.data.length - 1]?.openInterest;\r\n    const delta =\r\n      total - tradersData.data[tradersData.data.length - 2]?.openInterest;\r\n    return [total, delta];\r\n  }, [tradersData]);\r\n  const [swapSources, swapSourcesLoading] = useSwapSources(params);\r\n  const swapSourcesKeys = Object.keys(\r\n    (swapSources || []).reduce((memo, el) => {\r\n      Object.keys(el).forEach((key) => {\r\n        if (key === \"all\" || key === \"timestamp\") return;\r\n        memo[key] = true;\r\n      });\r\n      return memo;\r\n    }, {})\r\n  );\r\n\r\n  const [usersData, usersLoading] = useUsersData(params);\r\n  const [totalUsers, totalUsersDelta] = useMemo(() => {\r\n    if (!usersData) {\r\n      return [null, null];\r\n    }\r\n    const total = usersData[usersData.length - 1]?.uniqueCountCumulative;\r\n    const prevTotal = usersData[usersData.length - 2]?.uniqueCountCumulative;\r\n    const delta = total && prevTotal ? total - prevTotal : null;\r\n    return [total, delta];\r\n  }, [usersData]);\r\n\r\n  const [lastSubgraphBlock] = useLastSubgraphBlock();\r\n  const [lastBlock] = useLastBlock();\r\n\r\n  const isObsolete =\r\n    lastSubgraphBlock &&\r\n    lastBlock &&\r\n    lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600;\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false);\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem(\"experiment\"));\r\n  }, [setIsExperiment]);\r\n\r\n  const showForm = false;\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Analytics / Optimism</h1>\r\n      {lastSubgraphBlock && lastBlock && (\r\n        <p\r\n          className={cx(\"page-description\", { warning: isObsolete })}\r\n          style={{ marginTop: \"-1rem\" }}\r\n        >\r\n          {isObsolete && \"Data is obsolete. \"}\r\n          Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n          &nbsp;at block{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://optimistic.etherscan.io/block/${lastSubgraphBlock.number}`}\r\n          >\r\n            {lastSubgraphBlock.number}\r\n          </a>\r\n        </p>\r\n      )}\r\n      {showForm && (\r\n        <div className=\"form\">\r\n          <p>\r\n            <label>Period</label>\r\n            <input\r\n              type=\"date\"\r\n              value={fromValue}\r\n              onChange={(evt) => setFromValue(evt.target.value)}\r\n            />\r\n            &nbsp;—&nbsp;\r\n            <input\r\n              type=\"date\"\r\n              value={toValue}\r\n              onChange={(evt) => setToValue(evt.target.value)}\r\n            />\r\n            <button onClick={(evt) => setDateRange(86400 * 29)}>30 days</button>\r\n            <button onClick={(evt) => setDateRange(86400 * 6)}>7 days</button>\r\n          </p>\r\n        </div>\r\n      )}\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {totalVolume ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Volume</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalVolume, { currency: true })}\r\n                {totalVolumeDelta && (\r\n                  <span\r\n                    className=\"total-stat-delta plus\"\r\n                    title=\"Change since previous day\"\r\n                  >\r\n                    +\r\n                    {formatNumber(totalVolumeDelta, {\r\n                      currency: true,\r\n                      compact: true,\r\n                    })}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : volumeLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Volume</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalFees ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Fees</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalFees, { currency: true })}\r\n                <span\r\n                  className=\"total-stat-delta plus\"\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  +\r\n                  {formatNumber(totalFeesDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : feesLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Fees</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalAum ? (\r\n            <>\r\n              <div className=\"total-stat-label\">SLP Pool</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalAum, { currency: true })}\r\n                <span\r\n                  className={cx(\r\n                    \"total-stat-delta\",\r\n                    totalAumDelta > 0 ? \"plus\" : \"minus\"\r\n                  )}\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  {totalAumDelta > 0 ? \"+\" : \"\"}\r\n                  {formatNumber(totalAumDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalUsers ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Users</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalUsers)}\r\n                <span\r\n                  className=\"total-stat-delta plus\"\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  +{formatNumber(totalUsersDelta)}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : usersLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Users</div>\r\n              <div className=\"total-stat-value\">{formatNumber(0)}</div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {openInterest ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Open Interest</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(openInterest, { currency: true })}\r\n                <span\r\n                  className={cx(\r\n                    \"total-stat-delta\",\r\n                    openInterestDelta > 0 ? \"plus\" : \"minus\"\r\n                  )}\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  {openInterestDelta > 0 ? \"+\" : \"\"}\r\n                  {formatNumber(openInterestDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : tradersLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Open Interest</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <VolumeChart\r\n            data={volumeData}\r\n            loading={volumeLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            yaxisTickFormatter={yaxisFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n            tooltipFormatter={tooltipFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <FeesChart\r\n            data={feesData}\r\n            loading={feesLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            yaxisTickFormatter={yaxisFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n            tooltipFormatter={tooltipFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"SKULL & Slp Supply\"\r\n            loading={slpLoading}\r\n            data={slpData}\r\n            csvFields={[{ key: \"aum\" }, { key: \"mvlpSupply\" }]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"aum\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  unit=\"$\"\r\n                  dot={false}\r\n                  dataKey=\"aum\"\r\n                  stackId=\"a\"\r\n                  name=\"SKULL\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  dataKey=\"mvlpSupply\"\r\n                  stackId=\"a\"\r\n                  name=\"SLP Supply\"\r\n                  stroke={COLORS[1]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>\r\n\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Slp Performance\"\r\n            loading={slpLoading}\r\n            data={slpPerformanceData}\r\n            csvFields={[\r\n              { key: \"syntheticPrice\" },\r\n              { key: \"slpPrice\" },\r\n              { key: \"slpPlusFees\" },\r\n              { key: \"lpBtcPrice\" },\r\n              { key: \"lpEthPrice\" },\r\n              { key: \"performanceSyntheticCollectedFees\" },\r\n              { key: \"indexBtcCount\" },\r\n              { key: \"indexEthCount\" },\r\n              { key: \"indexAvaxCount\" },\r\n              { key: \"indexStableCount\" },\r\n              { key: \"BTC_WEIGHT\" },\r\n              { key: \"ETH_WEIGHT\" },\r\n              { key: \"OP_WEIGHT\" },\r\n              { key: \"STABLE_WEIGHT\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  domain={[80, 180]}\r\n                  unit=\"%\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceLpBtcCollectedFees\"\r\n                  name=\"% LP BTC-USDC (w/ fees)\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceLpEthCollectedFees\"\r\n                  name=\"% LP ETH-USDC (w/ fees)\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  name=\"% Index (w/ fees)\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{ color: COLORS[0] }}>% of Index (with fees)</span>{\" \"}\r\n                is SLP with fees / Index Price * 100. Index is a basket of 25%\r\n                BTC, 25% ETH, 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n                <br />\r\n                <span style={{ color: COLORS[4] }}>\r\n                  % of LP ETH-USDC (with fees)\r\n                </span>{\" \"}\r\n                is SLP Price with fees / LP ETH-USDC * 100\r\n                <br />\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Slp Price Comparison\"\r\n            loading={slpLoading}\r\n            data={slpPerformanceData}\r\n            csvFields={[\r\n              { key: \"syntheticPrice\" },\r\n              { key: \"slpPrice\" },\r\n              { key: \"slpPlusFees\" },\r\n              { key: \"lpBtcPrice\" },\r\n              { key: \"lpEthPrice\" },\r\n              { key: \"performanceSyntheticCollectedFees\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  domain={[60, 210]}\r\n                  unit=\"%\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"slpPrice\"\r\n                  domain={[0.4, 1.7]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceLpBtcCollectedFees\"\r\n                  name=\"% LP BTC-USDC (w/ fees)\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceLpEthCollectedFees\"\r\n                  name=\"% LP ETH-USDC (w/ fees)\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  name=\"% Index (w/ fees)\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"syntheticPrice\"\r\n                  name=\"Index Price\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"slpPrice\"\r\n                  name=\"Slp Price\"\r\n                  stroke={COLORS[1]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"slpPlusFees\"\r\n                  name=\"Slp w/ fees\"\r\n                  stroke={COLORS[3]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"lpBtcPrice\"\r\n                  name=\"LP BTC-USDC\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"lpEthPrice\"\r\n                  name=\"LP ETH-USDC\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{ color: COLORS[3] }}>Slp with fees</span> is\r\n                based on SLP share of fees received\r\n                {/* based on SLP share of fees received and excluding esSKULL rewards */}\r\n                <br />\r\n                <span style={{ color: COLORS[0] }}>\r\n                  % of Index (with fees)\r\n                </span>{\" \"}\r\n                is Slp with fees / Index Price * 100\r\n                <br />\r\n                <span style={{ color: COLORS[4] }}>\r\n                  % of LP ETH-USDC (with fees)\r\n                </span>{\" \"}\r\n                is Slp Price with fees / LP ETH-USDC * 100\r\n                <br />\r\n                <span style={{ color: COLORS[2] }}>Index Price</span> is 25%\r\n                BTC, 25% ETH, 50% USDC\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        {isExperiment && (\r\n          <div className=\"chart-cell experiment\">\r\n            <ChartWrapper title=\"Performance vs. Index\" loading={slpLoading}>\r\n              <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n                <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                  <CartesianGrid strokeDasharray=\"10 10\" />\r\n                  <XAxis\r\n                    dataKey=\"timestamp\"\r\n                    tickFormatter={tooltipLabelFormatter}\r\n                    minTickGap={30}\r\n                  />\r\n                  <YAxis\r\n                    dataKey=\"performanceSyntheticCollectedFees\"\r\n                    domain={[80, 120]}\r\n                    unit=\"%\"\r\n                    tickFormatter={yaxisFormatterNumber}\r\n                    width={YAXIS_WIDTH}\r\n                  />\r\n                  <Tooltip\r\n                    formatter={tooltipFormatterNumber}\r\n                    labelFormatter={tooltipLabelFormatter}\r\n                    contentStyle={{ textAlign: \"left\" }}\r\n                  />\r\n                  <Legend />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticCollectedFees\"\r\n                    name=\"Collected Fees\"\r\n                    stroke={COLORS[0]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticDistributedUsd\"\r\n                    name=\"Distributed Usd\"\r\n                    stroke={COLORS[1]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticDistributedEth\"\r\n                    name=\"Distributed Eth\"\r\n                    stroke={COLORS[2]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSynthetic\"\r\n                    name=\"No Fees\"\r\n                    stroke={COLORS[3]}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </ChartWrapper>\r\n          </div>\r\n        )}\r\n        {isExperiment && (\r\n          <div className=\"chart-cell experiment\">\r\n            <ChartWrapper title=\"Performance vs. ETH LP\" loading={slpLoading}>\r\n              <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n                <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                  <CartesianGrid strokeDasharray=\"10 10\" />\r\n                  <XAxis\r\n                    dataKey=\"timestamp\"\r\n                    tickFormatter={tooltipLabelFormatter}\r\n                    minTickGap={30}\r\n                  />\r\n                  <YAxis\r\n                    dataKey=\"performanceLpEthCollectedFees\"\r\n                    domain={[80, 120]}\r\n                    unit=\"%\"\r\n                    tickFormatter={yaxisFormatterNumber}\r\n                    width={YAXIS_WIDTH}\r\n                  />\r\n                  <Tooltip\r\n                    formatter={tooltipFormatterNumber}\r\n                    labelFormatter={tooltipLabelFormatter}\r\n                    contentStyle={{ textAlign: \"left\" }}\r\n                  />\r\n                  <Legend />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthCollectedFees\"\r\n                    name=\"Collected Fees\"\r\n                    stroke={COLORS[0]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthDistributedUsd\"\r\n                    name=\"Distributed Usd\"\r\n                    stroke={COLORS[1]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthDistributedEth\"\r\n                    name=\"Distributed Eth\"\r\n                    stroke={COLORS[2]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEth\"\r\n                    name=\"No Fees\"\r\n                    stroke={COLORS[3]}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </ChartWrapper>\r\n          </div>\r\n        )}\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Net PnL\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[\r\n              { key: \"pnl\", name: \"Net PnL\" },\r\n              { key: \"pnlCumulative\", name: \"Cumulative PnL\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer\r\n              width=\"100%\"\r\n              syncId=\"tradersId\"\r\n              height={CHART_HEIGHT}\r\n            >\r\n              <ComposedChart data={tradersData?.data}>\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxAbsOfPnlAndCumulativePnl * 1.05,\r\n                    tradersData?.stats.maxAbsOfPnlAndCumulativePnl * 1.05,\r\n                  ]}\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill={mode == \"dark\" ? \"#FFFFFF\" : \"#000000\"}\r\n                  dot={false}\r\n                  dataKey=\"pnl\"\r\n                  name=\"Net PnL\"\r\n                >\r\n                  {(tradersData?.data || []).map((item, i) => {\r\n                    return (\r\n                      <Cell\r\n                        key={`cell-${i}`}\r\n                        fill={item.pnl > 0 ? \"#22c761\" : \"#f93333\"}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Bar>\r\n                <Line\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  stroke={COLORS[4]}\r\n                  dataKey=\"pnlCumulative\"\r\n                  name=\"Cumulative PnL\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Profit vs. Loss\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[\r\n              { key: \"profit\" },\r\n              { key: \"loss\" },\r\n              { key: \"profitCumulative\" },\r\n              { key: \"lossCumulative\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer\r\n              width=\"100%\"\r\n              syncId=\"tradersId\"\r\n              height={CHART_HEIGHT}\r\n            >\r\n              <ComposedChart data={tradersData?.data} barGap={0}>\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxProfitLoss * 1.05,\r\n                    tradersData?.stats.maxProfitLoss * 1.05,\r\n                  ]}\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxCumulativeProfitLoss * 1.1,\r\n                    tradersData?.stats.maxCumulativeProfitLoss * 1.1,\r\n                  ]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Area\r\n                  yAxisId=\"right\"\r\n                  type=\"monotone\"\r\n                  stroke={0}\r\n                  fill=\"#22c761\"\r\n                  fillOpacity=\"0.4\"\r\n                  dataKey=\"profitCumulative\"\r\n                  name=\"Cumulative Profit\"\r\n                />\r\n                <Area\r\n                  yAxisId=\"right\"\r\n                  type=\"monotone\"\r\n                  stroke={0}\r\n                  fill=\"#f93333\"\r\n                  fillOpacity=\"0.4\"\r\n                  dataKey=\"lossCumulative\"\r\n                  name=\"Cumulative Loss\"\r\n                />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill=\"#22c761\"\r\n                  dot={false}\r\n                  dataKey=\"profit\"\r\n                  name=\"Profit\"\r\n                />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill=\"#f93333\"\r\n                  dot={false}\r\n                  dataKey=\"loss\"\r\n                  name=\"Loss\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={fundingRateLoading}\r\n            title=\"Borrowing Rate Annualized\"\r\n            data={fundingRateData}\r\n            yaxisDataKey=\"ETH\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[\r\n              { key: \"OP\", color: \"#7C43DA\" },\r\n              { key: \"ETH\", color: \"#6185F5\" },\r\n              { key: \"BTC\", color: \"#F7931A\" },\r\n              { key: \"USDC\", color: \"#2775CA\" },\r\n              { key: \"USDT\", color: \"#67B18A\" },\r\n              { key: \"DAI\", color: \"#FAC044\" },\r\n            ]}\r\n            type=\"Line\"\r\n            yaxisDomain={[0, 90 /* ~87% is a maximum yearly borrow rate */]}\r\n            isCoinChart={true}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={tradersLoading}\r\n            title=\"Open Interest\"\r\n            data={tradersData?.data.map((item) => ({\r\n              all: item.openInterest,\r\n              ...item,\r\n            }))}\r\n            yaxisDataKey=\"openInterest\"\r\n            items={[\r\n              { key: \"shortOpenInterest\", name: \"Short\", color: \"#f93333\" },\r\n              { key: \"longOpenInterest\", name: \"Long\", color: \"#22c761\" },\r\n            ]}\r\n            type=\"Bar\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={aumPerformanceLoading}\r\n            title=\"SKULL Performance Annualized\"\r\n            data={aumPerformanceData}\r\n            yaxisDataKey=\"apr\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[{ key: \"apr\", name: \"APR\", color: COLORS[0] }]}\r\n            description=\"Formula = Daily Fees / SLP Pool * 365 days * 100\"\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={aumPerformanceLoading}\r\n            title=\"SKULL Daily Usage\"\r\n            data={aumPerformanceData}\r\n            yaxisDataKey=\"usage\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[{ key: \"usage\", name: \"Daily Usage\", color: COLORS[4] }]}\r\n            description=\"Formula = Daily Volume / SLP Pool * 100\"\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"Unique Users\"\r\n            data={usersData}\r\n            yaxisDataKey=\"uniqueSum\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"uniqueSwapCount\", name: \"Swaps\" },\r\n              { key: \"uniqueMarginCount\", name: \"Margin trading\" },\r\n              { key: \"uniqueMintBurnCount\", name: \"Mint & Burn SLP\" },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"New Users\"\r\n            data={usersData?.map((item) => ({ ...item, all: item.newCount }))}\r\n            yaxisDataKey=\"newCount\"\r\n            rightYaxisDataKey=\"uniqueCountCumulative\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"newSwapCount\", name: \"Swap\" },\r\n              { key: \"newMarginCount\", name: \"Margin trading\" },\r\n              { key: \"newMintBurnCount\", name: \"Mint & Burn\" },\r\n              {\r\n                key: \"uniqueCountCumulative\",\r\n                name: \"Cumulative\",\r\n                type: \"Line\",\r\n                yAxisId: \"right\",\r\n                strokeWidth: 2,\r\n                color: COLORS[4],\r\n              },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"New vs. Existing Users\"\r\n            data={usersData?.map((item) => ({\r\n              ...item,\r\n              all: item.uniqueCount,\r\n            }))}\r\n            yaxisDataKey=\"uniqueCount\"\r\n            rightYaxisDataKey=\"oldPercent\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"newCount\", name: \"New\" },\r\n              { key: \"oldCount\", name: \"Existing\" },\r\n              {\r\n                key: \"oldPercent\",\r\n                name: \"Existing %\",\r\n                yAxisId: \"right\",\r\n                type: \"Line\",\r\n                strokeWidth: 2,\r\n                color: COLORS[4],\r\n                unit: \"%\",\r\n              },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"User Actions\"\r\n            data={(usersData || []).map((item) => ({\r\n              ...item,\r\n              all: item.actionCount,\r\n            }))}\r\n            yaxisDataKey=\"actionCount\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"actionSwapCount\", name: \"Swaps\" },\r\n              { key: \"actionMarginCount\", name: \"Margin trading\" },\r\n              { key: \"actionMintBurnCount\", name: \"Mint & Burn SLP\" },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={swapSourcesLoading}\r\n            title=\"Swap Sources\"\r\n            data={swapSources}\r\n            items={swapSourcesKeys.map((key) => ({ key }))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Optimism;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport moment from 'moment'\r\nimport { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatterNumber,\r\n  formatNumber,\r\n  COLORS\r\n} from '../helpers'\r\n\r\nimport GenericChart from '../components/GenericChart'\r\n\r\nimport {\r\n  useReferralsData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock\r\n} from '../dataProvider'\r\n\r\nconst NOW = Math.floor(Date.now() / 1000)\r\n\r\nfunction Referrals(props) {\r\n  const [fromValue, setFromValue] = useState()\r\n  const [toValue, setToValue] = useState()\r\n\r\n\r\n  const from = fromValue ? +new Date(fromValue) / 1000 : undefined\r\n  const to = toValue ? +new Date(toValue) / 1000 : NOW\r\n  const params = { from, to, chainName: props.match?.params?.chainName || 'optimism' }\r\n\r\n  const [referralsData, referralsLoading] = useReferralsData(params)\r\n  const stats = useMemo(() => {\r\n    if (!referralsData) {\r\n      return null\r\n    }\r\n    const totalVolume = referralsData[referralsData.length - 1]?.volumeCumulative\r\n    const prevTotalVolume = referralsData[referralsData.length - 2]?.volumeCumulative\r\n    const totalVolumeDelta = totalVolume && prevTotalVolume ? totalVolume - prevTotalVolume : null\r\n\r\n    const totalDiscountUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalDiscountUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalDiscountUsdDelta = totalDiscountUsd && prevTotalDiscountUsd ? totalDiscountUsd - prevTotalDiscountUsd : null\r\n\r\n    const totalReferrerRebateUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalReferrerRebateUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalReferrerRebateUsdDelta = totalReferrerRebateUsd && prevTotalReferrerRebateUsd ? totalReferrerRebateUsd - prevTotalReferrerRebateUsd : null\r\n\r\n    const totalReferrersCount = referralsData[referralsData.length - 1]?.referrersCountCumulative\r\n    const prevTotalReferrersCount = referralsData[referralsData.length - 2]?.referrersCountCumulative\r\n    const totalReferrersCountDelta = totalReferrersCount && prevTotalReferrersCount ? totalReferrersCount - prevTotalReferrersCount : null\r\n\r\n    const totalReferralsCount = referralsData[referralsData.length - 1]?.referralsCountCumulative\r\n    const prevTotalReferralsCount = referralsData[referralsData.length - 2]?.referralsCountCumulative\r\n    const totalReferralsCountDelta = totalReferralsCount && prevTotalReferralsCount ? totalReferralsCount - prevTotalReferralsCount : null\r\n\r\n    return {\r\n      totalVolume,\r\n      totalVolumeDelta,\r\n      totalDiscountUsd,\r\n      totalDiscountUsdDelta,\r\n      totalReferrerRebateUsd,\r\n      totalReferrerRebateUsdDelta,\r\n      totalReferrersCount,\r\n      totalReferrersCountDelta,\r\n      totalReferralsCount,\r\n      totalReferralsCountDelta\r\n    }\r\n  }, [referralsData])\r\n\r\n  const [lastSubgraphBlock] = useLastSubgraphBlock()\r\n  const [lastBlock] = useLastBlock()\r\n\r\n  const isObsolete = lastSubgraphBlock && lastBlock && lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false)\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem('experiment'))\r\n  }, [setIsExperiment])\r\n\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Analytics / Referrals</h1>\r\n      {lastSubgraphBlock && lastBlock &&\r\n        <p className={cx('page-description', { warning: isObsolete })} style={{ marginTop: '-1rem' }}>\r\n          {isObsolete && \"Data is obsolete. \"}\r\n          Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n          &nbsp;at block <a target=\"_blank\" rel=\"noreferrer\" href={`https://arbiscan.io/block/${lastSubgraphBlock.number}`}>{lastSubgraphBlock.number}</a>\r\n        </p>\r\n      }\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referral Volume</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalVolume, {currency: true})}\r\n              {stats.totalVolumeDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalVolumeDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Traders Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalDiscountUsd, {currency: true})}\r\n              {stats.totalDiscountUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalDiscountUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalReferrerRebateUsd, {currency: true})}\r\n              {stats.totalReferrerRebateUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalReferrerRebateUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Registered</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferrersCount}\r\n              {stats.totalReferrersCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferrersCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referrals Registrations</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferralsCount}\r\n              {stats.totalReferralsCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferralsCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Volume\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"volume\"\r\n              rightYaxisDataKey=\"volumeCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'volume', name: 'Daily', unit: '$' },\r\n                {\r\n                  key: 'volumeCumulative',\r\n                  name: 'Cumulative',\r\n                  type: 'Line',\r\n                  yAxisId: 'right',\r\n                  strokeWidth: 2,\r\n                  color: COLORS[4],\r\n                  unit: '$'\r\n                }\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Volume generated by registered referrals\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Rebates\"\r\n              data={referralsData?.map(item => ({ all: item.totalRebateUsd.toFixed(2), ...item }))}\r\n              yaxisDataKey=\"totalRebateUsd\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'discountUsd', name: 'Discount', unit: '$' },\r\n                { key: 'referrerRebateUsd', name: 'Rebates', unit: '$' }\r\n              ]}\r\n              type=\"Bar\"\r\n              description=\"Rebates go to Affiliates, Discount go to Traders\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Registered Affiliates\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referrersCount\"\r\n              rightYaxisDataKey=\"referrersCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referrersCount', type: 'Bar', name: 'Daily'},\r\n                {\r\n                  key: 'referrersCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Affiliates',\r\n                  color: COLORS[4]\r\n                },\r\n              ]}\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Registrations\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referralsCount\"\r\n              rightYaxisDataKey=\"referralsCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referralsCount', type: 'Bar', name: 'Daily'},\r\n                {\r\n                  key: 'referralsCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Referrals',\r\n                  color: COLORS[4]\r\n                },\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Traders registrations with referral code\"\r\n            />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Referrals;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport * as strftime from 'strftime'\r\n\r\nimport { urlWithParams, tsToIso } from '../helpers'\r\nimport { useRequest } from '../dataProvider'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart\r\n} from 'recharts';\r\n\r\nconst { BigNumber } = ethers\r\nconst { formatUnits} = ethers.utils\r\n\r\n\r\nfunction Trading() {\r\n  const [from, setFrom] = useState(tsToIso(Date.now() - 86400000 * 3))\r\n  const [to, setTo] = useState()\r\n\r\n  const fromTs = +new Date(from) / 1000\r\n  const toTs = to ?? +new Date(to) / 1000\r\n\r\n  const params = {from: fromTs, to: toTs}\r\n  const [btcData] = useRequest(urlWithParams(`/api/prices/BTC`, params), [])\r\n  const [ethData] = useRequest(urlWithParams(`/api/prices/ETH`, params), [])\r\n  const [bnbData] = useRequest(urlWithParams(`/api/prices/BNB`, params), [])\r\n\r\n  const assetChartData = useMemo(() => {\r\n    const all = {}\r\n    const options = [\r\n      ['BTC', btcData],\r\n      ['ETH', ethData],\r\n      ['BNB', bnbData]\r\n    ]\r\n\r\n    options.forEach(([name, assetData]) => {\r\n      if (!assetData || assetData.length === 0) {\r\n        return\r\n      }\r\n      let maxPrice = 0\r\n      let minPrice = Infinity\r\n      all[name] = {\r\n        data: assetData.map(item => {\r\n          const price = item.price / 1e8\r\n          if (price > maxPrice) {\r\n            maxPrice = price\r\n          }\r\n          if (price < minPrice) {\r\n            minPrice = price\r\n          }\r\n          return {\r\n            date: new Date(item.timestamp * 1000),\r\n            price: price,\r\n            poolAmount: item.poolAmount\r\n          }\r\n        })\r\n      }\r\n      all[name].maxPrice = maxPrice\r\n      all[name].minPrice = minPrice\r\n    })\r\n\r\n    return all\r\n  }, [btcData, ethData, bnbData])\r\n\r\n  const [pnlData] = useRequest(urlWithParams('/api/marginPnl', params), [])\r\n  const pnlChartData = useMemo(() => {\r\n    return pnlData.map(item => {\r\n      if (!item.metrics) {\r\n        return {\r\n          date: new Date(item.timestamp * 1000)\r\n        }\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        net: item.metrics.net,\r\n        profits: item.metrics.profits,\r\n        loss: item.metrics.loss,\r\n        long: item.metrics.long,\r\n        short: item.metrics.short,\r\n      } \r\n    })\r\n  }, [pnlData])\r\n  const pnlMin = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].loss : 0\r\n  const pnlMax = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].profits : 0\r\n\r\n  const [liquidationsData] = useRequest(urlWithParams('api/liquidations', {from: fromTs, to: toTs}), [])\r\n  const liquidationsChartData = useMemo(() => {\r\n    let cum = 0\r\n    let longCum = 0\r\n    let shortCum = 0\r\n    return liquidationsData.map(item => {\r\n      const collateral = item.collateral || 0\r\n      cum += collateral\r\n      if (item.isLong) {\r\n        longCum += collateral\r\n      } else {\r\n        shortCum += collateral\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        collateral: cum,\r\n        long: longCum,\r\n        short: shortCum\r\n      }\r\n    })\r\n  }, [liquidationsData])\r\n\r\n  const [feesData] = useRequest(urlWithParams('/api/fees', { disableGrouping: 1, ...params }), [])\r\n  const feesChartData = useMemo(() => {\r\n    const cum = {}\r\n    return feesData.map(item => {\r\n      cum[item.type] = (cum[item.type] || 0) + item.value\r\n      const all = Object.values(cum).reduce((sum, value) => sum + value)\r\n      return {\r\n        ...cum,\r\n        all,\r\n        date: new Date(item.timestamp * 1000)\r\n      }\r\n    })\r\n  }, [feesData])\r\n\r\n  const [swapSourcesData] = useRequest(urlWithParams('/api/swapSources', { period: 3600, rawSource: 1, ...params }), [])\r\n  const swapSourcesFilteredKeys = useMemo(() => {\r\n    if (swapSourcesData.length === 0) {\r\n      return []\r\n    }\r\n    const count = {}\r\n    swapSourcesData.forEach(item => {\r\n      if (!item.metrics) {\r\n        return\r\n      }\r\n      Object.keys(item.metrics).forEach(key => {\r\n        count[key] = (count[key] || 0) + 1\r\n      })\r\n    })\r\n\r\n    return Object.keys(count).filter(key => count[key] > 1)\r\n  }, [swapSourcesData])\r\n  const swapSourcesChartData = useMemo(() => {\r\n    if (swapSourcesFilteredKeys.length === 0) {\r\n      return []\r\n    }\r\n\r\n    let cum = {}\r\n    return swapSourcesData.map(item => {\r\n      let all = 0\r\n      swapSourcesFilteredKeys.forEach(key => {\r\n        if (item.metrics && item.metrics[key]) {\r\n          cum[key] = (cum[key] || 0) + item.metrics[key]\r\n          all += cum[key]\r\n        }\r\n      })\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        all,\r\n        ...cum\r\n      }\r\n    })\r\n  }, [swapSourcesData, swapSourcesFilteredKeys])\r\n\r\n  const COLORS = ['red', 'green', 'blue', 'lightblue', 'purple', 'pink', 'brown', 'orange']\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>\r\n          <label>From</label>\r\n          <input type=\"datetime-local\" value={from} onChange={evt => setFrom(evt.target.value)} />\r\n        </p>\r\n        <p>\r\n          <label>To</label>\r\n          <input type=\"datetime-local\" value={to} onChange={evt => setTo(evt.target.value)} />\r\n        </p>\r\n      </div>     \r\n      {Object.entries(assetChartData).map(([name, {data, maxPrice, minPrice}]) => {\r\n        return <div key={name}>\r\n          <h2>{name}</h2>\r\n          <ResponsiveContainer width=\"100%\" height={600}>\r\n            <ComposedChart\r\n              data={data}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"10 10\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis\r\n                yAxisId=\"left\"\r\n                dataKey=\"price\"\r\n                domain={[Math.round(minPrice * 0.99), Math.round(maxPrice * 1.01)]}\r\n              />\r\n              <YAxis yAxisId=\"right\" orientation=\"right\" dataKey=\"poolAmount\" />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Area isAnimationActive={false} strokeWidth={0} yAxisId=\"right\" dataKey=\"poolAmount\" name=\"Pool\" dot={false} fill=\"#627EEA\" />\r\n              <Line isAnimationActive={false} yAxisId=\"left\" dataKey=\"price\" name=\"Chainlink Price\" dot={false} stroke=\"#666\" strokeWidth={2} />\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      })}\r\n\r\n      <h2>Liquidated Collateral</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={liquidationsChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"collateral\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"long\" name=\"Long\" dot={false} strokeWidth={0} stroke=\"purple\" fill=\"purple\" />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"short\" name=\"Short\" dot={false} stroke=\"green\" strokeWidth={0} fill=\"green\" />\r\n          <Line isAnimationActive={false} dataKey=\"collateral\" name=\"All\" dot={false} stroke=\"black\" strokeWidth={2} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Global PnL</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={pnlChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis domain={[pnlMin * 1.5, pnlMax * 0.50]} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} dataKey=\"profits\" name=\"Profits\" dot={false} strokeWidth={0} fill=\"lightblue\" />\r\n          <Area isAnimationActive={false} dataKey=\"loss\" name=\"Loss\" dot={false} stroke=\"pink\" strokeWidth={0} fill=\"pink\" />\r\n          <Line isAnimationActive={false} dataKey=\"net\" name=\"Net\" dot={false} stroke=\"#000\" strokeWidth={2} />\r\n          <Line isAnimationActive={false} dataKey=\"long\" name=\"Longs Net\" dot={false} stroke=\"green\" strokeWidth={1} />\r\n          <Line isAnimationActive={false} dataKey=\"short\" name=\"Shorts Net\" dot={false} stroke=\"red\" strokeWidth={1} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Fees</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart syncId=\"syncId\" data={feesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"swap\" stackId=\"a\" name=\"Swap\" stroke=\"#FE88B1\" fill=\"#FE88B1\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"mint\" stackId=\"a\" name=\"Mint USDG\" stroke=\"#C9DB74\" fill=\"#C9DB74\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"burn\" stackId=\"a\" name=\"Burn USDG\" stroke=\"#ab6100\" fill=\"#ab6100\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" stroke=\"#c90000\" fill=\"#c90000\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" stroke=\"#5D69B1\" fill=\"#5D69B1\" />\r\n          <Line isAnimationActive={false} dot={false} dataKey=\"all\" name=\"Total\" stroke=\"#000\" />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Swap volumes by recipient</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <LineChart syncId=\"syncId\" data={swapSourcesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          {swapSourcesFilteredKeys.map((key, i) => {\r\n            return <Line dataKey={key} dot={false} stroke={COLORS[i % COLORS.length]} />\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Trading","module.exports = require(\"@apollo/client\");","module.exports = require(\"@babel/code-frame\");","module.exports = require(\"chalk\");","module.exports = require(\"classnames\");","module.exports = require(\"console-log-level\");","module.exports = require(\"cors\");","module.exports = require(\"cross-fetch\");","module.exports = require(\"ethers\");","module.exports = require(\"express\");","module.exports = require(\"framer-motion\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jest-message-util\");","module.exports = require(\"lodash\");","module.exports = require(\"moment\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-icons/fa\");","module.exports = require(\"react-icons/fi\");","module.exports = require(\"react-icons/ri\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"recharts\");","module.exports = require(\"strftime\");","module.exports = require(\"webpack/hot/log-apply-result\");"],"mappingsyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AAaA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AAEA;AAsBA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;AC1HA;AAEA;AAYA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAKA;AAMA;AACA;AACA;AAEA;AACA;AAQA;AAQA;AAOA;AAEA;AAUA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAGA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAIA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAGA;AAGA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAIA;AAKA;AAKA;AACA;AAIA;AAIA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;;;;;;;;;;;ACt2CA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAeA;AAihXA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjnpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAEA;AAeA;AAsBA;AACA;AACA;AACA;AAEA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxnCA;AAEA;AACA;AACA;AAEA;AAQA;AAEA;AAMA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1PA;AACA;AAGA;AACA;AAEA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzRA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}