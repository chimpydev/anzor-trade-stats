{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"recharts\"","webpack:///external \"react\"","webpack:///./node_modules/css-loader/dist/runtime/getUrl.js","webpack:///external \"react-icons/ri\"","webpack:///external \"lodash\"","webpack:///external \"ethers\"","webpack:///external \"@apollo/client\"","webpack:///external \"react-router-dom\"","webpack:///external \"classnames\"","webpack:///external \"cross-fetch\"","webpack:///external \"strftime\"","webpack:///./src/img/anzor-logo.png","webpack:///external \"framer-motion\"","webpack:///external \"moment\"","webpack:///external \"express\"","webpack:///external \"object-sizeof\"","webpack:///external \"chalk\"","webpack:///./src/fonts/relative/relative-book-pro.eot","webpack:///./src/fonts/relative/relative-bold-pro.eot","webpack:///external \"http\"","webpack:///external \"react-dom/server\"","webpack:///external \"console-log-level\"","webpack:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/fonts/relative/relative-book-pro.woff2","webpack:///./src/fonts/relative/relative-book-pro.woff","webpack:///./src/fonts/relative/relative-book-pro.ttf","webpack:///./src/fonts/relative/relative-bold-pro.woff2","webpack:///./src/fonts/relative/relative-bold-pro.woff","webpack:///./src/fonts/relative/relative-bold-pro.ttf","webpack:///./src/fonts/inter/Inter-Black.woff2","webpack:///./src/fonts/inter/Inter-Black.woff","webpack:///./src/fonts/inter/Inter-Bold.woff2","webpack:///./src/fonts/inter/Inter-Bold.woff","webpack:///./src/fonts/inter/Inter-ExtraBold.woff2","webpack:///./src/fonts/inter/Inter-ExtraBold.woff","webpack:///./src/fonts/inter/Inter-Light.woff2","webpack:///./src/fonts/inter/Inter-Light.woff","webpack:///./src/fonts/inter/Inter-SemiBold.woff2","webpack:///./src/fonts/inter/Inter-SemiBold.woff","webpack:///./src/fonts/inter/Inter-Medium.woff2","webpack:///./src/fonts/inter/Inter-Medium.woff","webpack:///./src/fonts/inter/Inter-Thin.woff2","webpack:///./src/fonts/inter/Inter-Thin.woff","webpack:///./src/fonts/inter/Inter-Regular.woff2","webpack:///./src/fonts/inter/Inter-Regular.woff","webpack:///./src/fonts/inter/Inter-ExtraLight.woff2","webpack:///./src/fonts/inter/Inter-ExtraLight.woff","webpack:///./src/fonts/SkullFont.ttf","webpack:///external \"react-icons/fa\"","webpack:///external \"react-icons/fi\"","webpack:///./src/index.js","webpack:///./src/App.css","webpack:///external \"cors\"","webpack:///./src/helpers.js","webpack:///./src/components/CsvLink.js","webpack:///./src/components/ChartWrapper.js","webpack:///./src/components/VolumeChart.js","webpack:///./src/components/FeesChart.js","webpack:///./src/components/GenericChart.js","webpack:///./src/addresses.js","webpack:///./src/dataProvider.js","webpack:///./src/views/Fantom.js","webpack:///./src/views/Referrals.js","webpack:///./src/views/Trading.js","webpack:///./src/App.js","webpack:///./src/routes.js","webpack:///./src/middlewares.js","webpack:///./src/server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","url","options","default","test","slice","hash","needQuotes","concat","replace","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","iterator","_s","_e","_arr","_n","_d","next","done","push","length","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","constructor","from","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","item","_item","content","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","map","source","sourceRoot","join","cssWithMappingToString","list","this","mediaQuery","dedupe","alreadyImportedModules","id","app","http","listen","process","port","console","error","log","cb","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","___CSS_LOADER_URL_REPLACEMENT_10___","___CSS_LOADER_URL_REPLACEMENT_11___","___CSS_LOADER_URL_REPLACEMENT_12___","___CSS_LOADER_URL_REPLACEMENT_13___","___CSS_LOADER_URL_REPLACEMENT_14___","___CSS_LOADER_URL_REPLACEMENT_15___","___CSS_LOADER_URL_REPLACEMENT_16___","___CSS_LOADER_URL_REPLACEMENT_17___","___CSS_LOADER_URL_REPLACEMENT_18___","___CSS_LOADER_URL_REPLACEMENT_19___","___CSS_LOADER_URL_REPLACEMENT_20___","___CSS_LOADER_URL_REPLACEMENT_21___","___CSS_LOADER_URL_REPLACEMENT_22___","___CSS_LOADER_URL_REPLACEMENT_23___","___CSS_LOADER_URL_REPLACEMENT_24___","___CSS_LOADER_URL_REPLACEMENT_25___","___CSS_LOADER_URL_REPLACEMENT_26___","___CSS_LOADER_URL_REPLACEMENT_27___","___CSS_LOADER_URL_REPLACEMENT_28___","BigNumber","ethers","CHART_HEIGHT","YAXIS_WIDTH","COLORS","levelColor","getLogger","Logger","level","prefix","toUpperCase","chalk","white","numberFmt0","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","numberFmt1","numberFmt2","currencyFmt0","style","currency","currencyFmt1","currencyFmt2","formatNumber","opts","compact","absValue","Math","abs","_getCurrencyFmt","format","display","compactNumber","_getNumberFmt","toFixed","tooltipLabelFormatter","label","args","Date","payload","date","strftime","all","unit","yaxisFormatterPercent","yaxisFormatterNumber","yaxisFormatter","tooltipFormatterNumber","tooltipFormatterPercent","tooltipFormatter","tooltipLabelFormatterUnits","getDate","urlWithParams","params","entries","reduce","memo","formatTimestamp","timestamp","CsvLink","fields","onClick","useCallback","evt","preventDefault","csvUrl","csvHeader","field","csvBody","getCsvUrl","start","end","fileName","aElement","document","createElement","href","download","body","appendChild","click","removeChild","title","className","size","ChartWrapper","props","loading","csvFields","children","VolumeChart","chartHeight","yaxisWidth","xaxisTickFormatter","yaxisTickFormatter","width","height","syncId","strokeDasharray","dataKey","tickFormatter","minTickGap","interval","tickCount","orientation","yAxisId","formatter","labelFormatter","contentStyle","textAlign","isAnimationActive","type","stackId","fill","dot","strokeWidth","stroke","FeesChart","GenericChart","description","yaxisDataKey","yaxisDomain","xaxisDataKey","tooltipLabelFormatter_","tooltipFormatter_","items","rightYaxisDataKey","isCoinChart","ChartComponent","LineChart","BarChart","ComposedChart","htmlItems","color","React","domain","addresses","SKULL","ES_SKULL","SLP","BN_SKULL","STAKED_SKULL_TRACKER","STAKED_SLP_TRACKER","BONUS_SKULL_TRACKER","FEE_SKULL_TRACKER","FEE_SLP_TRACKER","FTM","BTC","ETH","RewardReader","SlpManager","Router","OrderBook","PositionManager","FastPriceFeed","PositionRouter","PositionExecutorUpKeep","getAddress","chainId","Error","JsonRpcProvider","providers","fantom","NOW_TS","parseInt","now","FIRST_DATE_TS","fillNa","keys","prevValues","el","async","queryEarnData","chainName","account","provider","getProvider","getChainId","rewardReader","abi","slpContract","Token","slpManager","depositTokens","rewardTrackersForDepositBalances","rewardTrackersForStakingInfo","balances","stakingInfo","slpTotalSupply","slpAum","skullPrice","Promise","getDepositBalances","getStakingInfo","then","info","_","totalSupply","getAumInUsdm","fetch","res","json","slpPrice","stakedSLP","pendingETH","pendingEsSKULL","stakedSKULL","stakedEsSKULL","datetime","toISOString","tokenSymbols","knownSwapSources","defaultFetcher","useRequest","defaultValue","fetcher","setLoading","useState","setError","setData","useEffect","ex","useCoingeckoPrices","symbol","_symbol","MATIC","WBTC","USDC","USDT","DAI","ceil","useMemo","prices","getImpermanentLoss","change","sqrt","useGraph","querySource","subgraph","subgraphUrl","query","gql","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","catch","warn","message","useLastBlock","getBlock","finally","useLastSubgraphBlock","block","setBlock","_meta","number","getSwapSourcesFragment","skip","to","MOVING_AVERAGE_DAYS","MOVING_AVERAGE_PERIOD","useVolumeData","PROPS","split","graphData","ret","sortBy","volumeStats","forEach","prop","cumulative","cumulativeByTs","movingAverageAll","movingAverageTs","total","useFeesData","feesQuery","feesData","feeStats","chartData","liquidation","marginAndLiquidation","margin","chain","groupBy","values","sumBy","Number","filter","useSlpData","cumulativeDistributedUsdPerSlp","cumulativeDistributedEthPerSlp","slpStats","prevSlpSupply","prevAum","last","aum","aumInUsdm","slpSupply","distributedUsdPerSlp","distributedUsd","distributedEthPerSlp","distributedEth","newItem","slpSupplyChange","aumChange","formatUnits","NOW","floor","Fantom","groupPeriod","setGroupPeriod","fromValue","setFromValue","toValue","setToValue","range","undefined","fundingRateData","fundingRateLoading","groups","fundingRates","token","group","timeDelta","endTimestamp","startTimestamp","fundingRate","endFundingRate","startFundingRate","useFundingRateData","volumeData","totalVolume","volumeLoading","totalVolumeDelta","feesLoading","totalFees","totalFeesDelta","slpData","slpLoading","totalAum","totalAumDelta","aumPerformanceData","aumPerformanceLoading","dailyCoef","feeItem","slpItem","volumeItem","apr","usage","averageApr","averageUsage","useAumPerformanceData","slpPerformanceData","slpPerformanceLoading","btcPrices","ethPrices","maticPrices","slpDataById","feesDataById","prevEthPrice","prevMaticPrice","SLP_START_PRICE","btcFirstPrice","ethFirstPrice","maticFirstPrice","indexBtcCount","indexEthCount","indexMaticCount","lpBtcCount","lpEthCount","lpMaticCount","cumulativeFeesPerSlp","cumulativeEsskullRewardsPerSlp","lastSlpPrice","btcPrice","ethPrice","maticPrice","timestampGroup","dailyFees","syntheticPrice","lpBtcPrice","lpEthPrice","lpMaticPrice","slpApr","slpPlusDistributedUsd","slpPlusDistributedEth","slpPlusFees","performanceLpEth","performanceLpEthCollectedFees","performanceLpEthDistributedUsd","performanceLpEthDistributedEth","performanceLpBtcCollectedFees","performanceSynthetic","performanceSyntheticCollectedFees","performanceSyntheticDistributedUsd","performanceSyntheticDistributedEth","useSlpPerformanceData","tradersData","tradersLoading","closedPositionsData","marginFeesByTs","tradingStats","feesCumulative","fees","dataItem","longOpenInterest","shortOpenInterest","openInterest","profit","loss","profitCumulative","lossCumulative","pnl","pnlCumulative","maxProfit","maxBy","maxLoss","minBy","maxProfitLoss","max","maxPnl","minPnl","maxCumulativePnl","minCumulativePnl","stats","maxCumulativeProfitLoss","maxAbsOfPnlAndCumulativePnl","useTradersData","openInterestDelta","swapSources","swapSourcesLoading","a","b","e","totalVolumeBySource","acc","swap","topVolumeSources","Set","sort","retItem","has","volume","useSwapSources","swapSourcesKeys","usersData","usersLoading","prevUniqueCountCumulative","userStats","newCountData","oldCount","uniqueCount","newCount","oldPercent","uniqueSum","uniqueSwapCount","uniqueMarginCount","uniqueMintBurnCount","useUsersData","totalUsers","totalUsersDelta","uniqueCountCumulative","prevTotal","lastSubgraphBlock","lastBlock","isObsolete","isExperiment","setIsExperiment","window","localStorage","getItem","cx","warning","marginTop","moment","fromNow","target","barGap","fillOpacity","actionCount","Referrals","match","referralsData","referralsLoading","env","RAZZLE_REFERRAL_SUBGRAPH_URL","globalStats","totalRebateUsd","discountUsd","volumeCumulative","totalRebateUsdCumulative","referrerRebateUsd","discountUsdCumulative","referralCodesCount","referralCodesCountCumulative","referrersCount","referrersCountCumulative","referralsCount","referralsCountCumulative","useReferralsData","prevTotalVolume","totalDiscountUsd","prevTotalDiscountUsd","totalDiscountUsdDelta","totalReferrerRebateUsd","prevTotalReferrerRebateUsd","totalReferrerRebateUsdDelta","totalReferrersCount","prevTotalReferrersCount","totalReferrersCountDelta","totalReferralsCount","prevTotalReferralsCount","totalReferralsCountDelta","rel","Trading","setFrom","ts","getTimezoneOffset","setTo","fromTs","toTs","btcData","ethData","bnbData","assetChartData","assetData","maxPrice","minPrice","Infinity","price","poolAmount","pnlData","pnlChartData","metrics","net","profits","long","short","pnlMin","pnlMax","liquidationsData","liquidationsChartData","cum","longCum","shortCum","collateral","isLong","disableGrouping","feesChartData","sum","swapSourcesData","period","rawSource","swapSourcesFilteredKeys","count","swapSourcesChartData","onChange","round","AppHeaderLinks","small","clickCloseIcon","exact","activeClassName","src","darkLogoIcon","alt","App","setMode","isDrawerVisible","setIsDrawerVisible","targetMode","querySelector","backgroundColor","div","initial","animate","exit","variants","hidden","opacity","visible","transition","duration","textDecoration","alignItems","fontSize","fontWeight","x","path","render","component","assets","utils","logger","fantomGraphClient","RAZZLE_SUBGRAPH_URL","defaultOptions","fetchPolicy","watchQuery","cachedPrices","sorted","byKey","putPricesIntoCache","entitiesKey","precision","changedTokens","byKeyNs","toLowerCase","add","sortedNs","ttlCache","ttl","maxKeys","_cache","_ttl","_maxKeys","_logger","debug","set","setTimeout","sleep","ms","resolve","precacheOldPrices","oldestTimestamp","retryTimeout","failCount","loadPrices","before","DISABLE_PRICES","newestPriceTimestamp","precacheNewPrices","after","toReadable","fragment","queryString","graphClient","p0","p1","p2","p3","p4","p5","getPriceRange","sortedPrices","inbound","indexFrom","binSearchPrice","indexTo","gt","mid","left","right","getPrices","preferableChainId","preferableSource","createHttpError","tokenAddress","chainlinkPrices","cacheKey","fromCache","firstTimestamp","otherSortedPrices","periodsMap","getFromAndTo","req","code","express","disable","use","static","on","time","method","statusCode","originalUrl","ip","_logRequest","send","statsResponse","mint","burn","methodProps","result","statsProp","methodProp","statValue","getStatsFromSubgraph","validChainNames","earnData","apiResponse","text","candles","periodTime","first","prevTsGroup","prevPrice","prevTs","h","tsGroup","getCandles","updatedAt","cssAssetsTag","entrypoint","css","asset","cssLinksFromAssets","jsAssetsTag","extra","js","jsScriptTagsFromAssets","headersSent","markup","renderToString","context","location","status","response","routes"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 54);\n","module.exports = require(\"recharts\");","module.exports = require(\"react\");","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","module.exports = require(\"react-icons/ri\");","module.exports = require(\"lodash\");","module.exports = require(\"ethers\");","module.exports = require(\"@apollo/client\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"classnames\");","module.exports = require(\"cross-fetch\");","module.exports = require(\"strftime\");","module.exports = __webpack_public_path__ + \"static/media/anzor-logo.d2fc9a5f.png\";","module.exports = require(\"framer-motion\");","module.exports = require(\"moment\");","module.exports = require(\"express\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"chalk\");","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.6c6fdee7.eot\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.d785e2df.eot\";","module.exports = require(\"http\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"console-log-level\");","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.99b8a3eb.woff2\";","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.fc1b5057.woff\";","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.c52403f4.ttf\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.27c9225c.woff2\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.b64cc288.woff\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.cb95c2b7.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Black.edf1baa0.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Black.1ede3792.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Bold.231f444d.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Bold.a0e8358d.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-ExtraBold.27153fbc.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-ExtraBold.5bcb7989.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Light.46884d02.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Light.4217570c.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-SemiBold.920533dd.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-SemiBold.0b003282.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Medium.943a6775.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Medium.6b5a42f0.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Thin.273c722a.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Thin.b9326ea9.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Regular.a90c493e.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Regular.ea2c76b5.woff\";","module.exports = __webpack_public_path__ + \"static/media/Inter-ExtraLight.096d2525.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Inter-ExtraLight.89a33fa2.woff\";","module.exports = __webpack_public_path__ + \"static/media/SkullFont.32862168.ttf\";","module.exports = require(\"react-icons/fa\");","module.exports = require(\"react-icons/fi\");","import * as http from 'http'\r\n\r\nlet app = require('./server').default;\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./server', function() {\r\n    console.log('🔁  HMR Reloading `./server`...');\r\n    try {\r\n      app = require('./server').default;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n  console.info('✅  Server-side HMR Enabled!');\r\n}\r\n\r\nconst port = process.env.PORT || 3105;\r\nfunction cb(err, port) {\r\n  if (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n  console.log(`> Started server on port ${port}`);\r\n}\r\n\r\nhttp.createServer(app).listen(port, err => cb(err, port))\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./fonts/relative/relative-book-pro.eot\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"./fonts/relative/relative-book-pro.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_2___ from \"./fonts/relative/relative-book-pro.woff\";\nimport ___CSS_LOADER_URL_IMPORT_3___ from \"./fonts/relative/relative-book-pro.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_4___ from \"./fonts/relative/relative-bold-pro.eot\";\nimport ___CSS_LOADER_URL_IMPORT_5___ from \"./fonts/relative/relative-bold-pro.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_6___ from \"./fonts/relative/relative-bold-pro.woff\";\nimport ___CSS_LOADER_URL_IMPORT_7___ from \"./fonts/relative/relative-bold-pro.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_8___ from \"./fonts/inter/Inter-Black.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_9___ from \"./fonts/inter/Inter-Black.woff\";\nimport ___CSS_LOADER_URL_IMPORT_10___ from \"./fonts/inter/Inter-Bold.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_11___ from \"./fonts/inter/Inter-Bold.woff\";\nimport ___CSS_LOADER_URL_IMPORT_12___ from \"./fonts/inter/Inter-ExtraBold.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_13___ from \"./fonts/inter/Inter-ExtraBold.woff\";\nimport ___CSS_LOADER_URL_IMPORT_14___ from \"./fonts/inter/Inter-Light.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_15___ from \"./fonts/inter/Inter-Light.woff\";\nimport ___CSS_LOADER_URL_IMPORT_16___ from \"./fonts/inter/Inter-SemiBold.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_17___ from \"./fonts/inter/Inter-SemiBold.woff\";\nimport ___CSS_LOADER_URL_IMPORT_18___ from \"./fonts/inter/Inter-Medium.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_19___ from \"./fonts/inter/Inter-Medium.woff\";\nimport ___CSS_LOADER_URL_IMPORT_20___ from \"./fonts/inter/Inter-Thin.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_21___ from \"./fonts/inter/Inter-Thin.woff\";\nimport ___CSS_LOADER_URL_IMPORT_22___ from \"./fonts/inter/Inter-Regular.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_23___ from \"./fonts/inter/Inter-Regular.woff\";\nimport ___CSS_LOADER_URL_IMPORT_24___ from \"./fonts/inter/Inter-ExtraLight.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_25___ from \"./fonts/inter/Inter-ExtraLight.woff\";\nimport ___CSS_LOADER_URL_IMPORT_26___ from \"./fonts/SkullFont.ttf\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_12___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_10___);\nvar ___CSS_LOADER_URL_REPLACEMENT_13___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_11___);\nvar ___CSS_LOADER_URL_REPLACEMENT_14___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_12___);\nvar ___CSS_LOADER_URL_REPLACEMENT_15___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_13___);\nvar ___CSS_LOADER_URL_REPLACEMENT_16___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_14___);\nvar ___CSS_LOADER_URL_REPLACEMENT_17___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_15___);\nvar ___CSS_LOADER_URL_REPLACEMENT_18___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_16___);\nvar ___CSS_LOADER_URL_REPLACEMENT_19___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_17___);\nvar ___CSS_LOADER_URL_REPLACEMENT_20___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_18___);\nvar ___CSS_LOADER_URL_REPLACEMENT_21___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_19___);\nvar ___CSS_LOADER_URL_REPLACEMENT_22___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_20___);\nvar ___CSS_LOADER_URL_REPLACEMENT_23___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_21___);\nvar ___CSS_LOADER_URL_REPLACEMENT_24___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_22___);\nvar ___CSS_LOADER_URL_REPLACEMENT_25___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_23___);\nvar ___CSS_LOADER_URL_REPLACEMENT_26___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_24___);\nvar ___CSS_LOADER_URL_REPLACEMENT_27___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_25___);\nvar ___CSS_LOADER_URL_REPLACEMENT_28___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_26___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \"); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('woff2'), /* Super Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format('woff'), /* Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: bold;\\r\\n  font-weight: 500;\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \"); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") format('woff2'), /* Super Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \") format('woff'), /* Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \") format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_10___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_11___ + \") format('woff');\\r\\n  font-weight: 900;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_12___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_13___ + \") format('woff');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_14___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_15___ + \") format('woff');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_16___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_17___ + \") format('woff');\\r\\n  font-weight: 300;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_18___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_19___ + \") format('woff');\\r\\n  font-weight: 600;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_20___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_21___ + \") format('woff');\\r\\n  font-weight: 500;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_22___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_23___ + \") format('woff');\\r\\n  font-weight: 100;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_24___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_25___ + \") format('woff');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_26___ + \") format('woff2'),\\r\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_27___ + \") format('woff');\\r\\n  font-weight: 200;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: \\\"SkullFont\\\";\\r\\n  src: local(\\\"SkullFont\\\"),\\r\\n   url(\" + ___CSS_LOADER_URL_REPLACEMENT_28___ + \") format(\\\"truetype\\\");\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  /* background: #f6f9ff; */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Inter', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: 'Inter', monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #fcfcfc;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #000000;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n  /* color: #ffffff; */\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #181818;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 15px;\\r\\n  border: 1px solid #FFFFFF14;\\r\\n  background: #181818;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  box-sizing: border-box;\\r\\n  background: #b39a31;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #ffffff;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #000000;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  /* width: 87px; */\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n  font-family: \\\"SkullFont\\\";\\r\\n  letter-spacing: 3px;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #ffffff;\\r\\n  /* color: #000; */\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #fff;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #00000029!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #000000 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #ffffff;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #181818;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  margin: unset;\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  src: url('./fonts/relative/relative-book-pro.eot'); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url('./fonts/relative/relative-book-pro.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url('./fonts/relative/relative-book-pro.woff2') format('woff2'), /* Super Modern Browsers */\\r\\n       url('./fonts/relative/relative-book-pro.woff') format('woff'), /* Modern Browsers */\\r\\n       url('./fonts/relative/relative-book-pro.ttf') format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: bold;\\r\\n  font-weight: 500;\\r\\n  src: url('./fonts/relative/relative-bold-pro.eot'); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url('./fonts/relative/relative-bold-pro.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url('./fonts/relative/relative-bold-pro.woff2') format('woff2'), /* Super Modern Browsers */\\r\\n       url('./fonts/relative/relative-bold-pro.woff') format('woff'), /* Modern Browsers */\\r\\n       url('./fonts/relative/relative-bold-pro.ttf') format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Black.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Black.woff') format('woff');\\r\\n  font-weight: 900;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Bold.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Bold.woff') format('woff');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-ExtraBold.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-ExtraBold.woff') format('woff');\\r\\n  font-weight: bold;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Light.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Light.woff') format('woff');\\r\\n  font-weight: 300;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-SemiBold.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-SemiBold.woff') format('woff');\\r\\n  font-weight: 600;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Medium.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Medium.woff') format('woff');\\r\\n  font-weight: 500;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Thin.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Thin.woff') format('woff');\\r\\n  font-weight: 100;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-Regular.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-Regular.woff') format('woff');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inter';\\r\\n  src: url('./fonts/inter/Inter-ExtraLight.woff2') format('woff2'),\\r\\n      url('./fonts/inter/Inter-ExtraLight.woff') format('woff');\\r\\n  font-weight: 200;\\r\\n  font-style: normal;\\r\\n  font-display: swap;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: \\\"SkullFont\\\";\\r\\n  src: local(\\\"SkullFont\\\"),\\r\\n   url(\\\"./fonts/SkullFont.ttf\\\") format(\\\"truetype\\\");\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  /* background: #f6f9ff; */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Inter', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: 'Inter', monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #fcfcfc;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #000000;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n  /* color: #ffffff; */\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #181818;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 15px;\\r\\n  border: 1px solid #FFFFFF14;\\r\\n  background: #181818;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  box-sizing: border-box;\\r\\n  background: #b39a31;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #ffffff;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #000000;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  /* width: 87px; */\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n  font-family: \\\"SkullFont\\\";\\r\\n  letter-spacing: 3px;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #ffffff;\\r\\n  /* color: #000; */\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #ffffff;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #fff;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #FFFFFF0F;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #00000029!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #000000 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #ffffff;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #181818;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  margin: unset;\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = require(\"cors\");","import Logger from 'console-log-level'\r\nimport { ethers } from 'ethers'\r\nimport strftime from 'strftime'\r\nimport chalk from 'chalk'\r\n\r\nconst { BigNumber } = ethers\r\n\r\nexport const CHART_HEIGHT = 400\r\nexport const YAXIS_WIDTH = 65\r\n\r\nexport const GREEN = '#22c761'\r\nexport const RED = '#f93333'\r\nexport const COLORS = [\r\n  '#ee64b8',\r\n  GREEN,\r\n  '#ff8d00',\r\n  '#00bfea',\r\n  '#8884ff',\r\n  '#ab6100',\r\n  '#c90000',\r\n  '#7b7b7b',\r\n  '#6464ff',\r\n  'purple',\r\n  'darkgreen',\r\n  RED\r\n]\r\n\r\nexport const COINCOLORS = [\r\n  '#627EEA',\r\n  '#FF9800',\r\n  '#FF007A',\r\n  '#2A5ADA',\r\n  '#2775CA',\r\n  '#26A17B',\r\n  '#9895F3',\r\n  '#8C8C8C',\r\n  '#F4B731',\r\n  'purple',\r\n  'darkgreen',\r\n  RED,\r\n  '#F0B90B',\r\n  '#FE88B1'\r\n]\r\n\r\nconst levelColor = {\r\n  'debug': 'grey',\r\n  'error': 'red',\r\n  'warn': 'orange',\r\n  'info': 'greenBright'\r\n}\r\nexport function getLogger(ns) {\r\n  return Logger({\r\n    level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',\r\n    prefix: level => {\r\n      const prefix = `[${ns}] ${level.toUpperCase()}`\r\n      return (chalk[levelColor[level]] || chalk.white)(prefix)\r\n    }\r\n  })\r\n}\r\n\r\nconst logger = getLogger('helpers')\r\n\r\nconst numberFmt0 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst numberFmt1 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 1 })\r\nconst numberFmt2 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2 })\r\nconst currencyFmt0 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst currencyFmt1 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 1 })\r\nconst currencyFmt2 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 2 })\r\n\r\nexport function fillPeriods(arr, { period, from, to, interpolate = true, extrapolate = false }) {\r\n  let i = 0\r\n  let prevTimestamp = from ? from - period : arr[0].timestamp\r\n  let prevPeriodStep = Math.floor(prevTimestamp / period)\r\n  let prevItem\r\n  const ret = []\r\n\r\n  while (i < arr.length) {\r\n    const item = arr[i]\r\n    const periodStep = Math.floor(item.timestamp / period)\r\n\r\n    if (periodStep - 1 > prevPeriodStep) {\r\n      const diff = periodStep - prevPeriodStep\r\n      let j = 1\r\n      while (j < diff) {\r\n        let newItem = { timestamp: (prevPeriodStep + j) * period }\r\n        if (interpolate) {\r\n          newItem = { ...prevItem, ...newItem }\r\n        }\r\n        ret.push(newItem)\r\n        j++\r\n      }\r\n    }\r\n\r\n    ret.push(item)\r\n\r\n    if (to && i === arr.length - 1) {\r\n      const lastPeriodStep = Math.floor(to / period)\r\n      if (lastPeriodStep > periodStep) {\r\n        const diff = lastPeriodStep - periodStep\r\n        let j = 0\r\n        while (j < diff) {\r\n          let newItem = { timestamp: (periodStep + j + 1) * period }\r\n          if (extrapolate) {\r\n            newItem = { ...item, ...newItem }\r\n          }\r\n          ret.push(newItem)\r\n          j++\r\n        }\r\n      }\r\n    }\r\n\r\n    prevItem = item\r\n    prevPeriodStep = periodStep\r\n    i++\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nfunction _getNumberFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return numberFmt2\r\n  } else if (absValue < 1000) {\r\n    return numberFmt1\r\n  } else {\r\n    return numberFmt0\r\n  }\r\n}\r\n\r\nfunction _getCurrencyFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return currencyFmt2\r\n  } else if (absValue < 1000) {\r\n    return currencyFmt1\r\n  } else {\r\n    return currencyFmt0\r\n  }\r\n}\r\n\r\nexport const formatNumber = (value, opts = {}) => {\r\n  const currency = !!opts.currency\r\n  const compact = !!opts.compact\r\n\r\n  if (currency && !compact) {\r\n    return _getCurrencyFmt(value).format(value)\r\n  }\r\n\r\n  const display = compact ? compactNumber(value) : _getNumberFmt(value).format(value)\r\n  if (currency) {\r\n    return `$${display}`\r\n  }\r\n  return display\r\n}\r\n\r\nexport const compactNumber = value => {\r\n  const abs = Math.abs(value)\r\n  if (abs >= 1e9) {\r\n    return `${(value / 1e9).toFixed(abs < 1e10 ? 2 : 1)}B`\r\n  }\r\n  if (abs >= 1e6) {\r\n    return `${(value / 1e6).toFixed(abs < 1e7 ? 2 : 1)}M`\r\n  }\r\n  if (abs >= 1e3) {\r\n    return `${(value / 1e3).toFixed(abs < 1e4 ? 2 : 1)}K`\r\n  }\r\n  return `${value.toFixed(1)}`\r\n}\r\n\r\nexport const tooltipLabelFormatter = (label, args) => {\r\n  if (!label) {\r\n    return\r\n  }\r\n\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n  }\r\n  const item = args && args[0] && args[0].payload && args[0]\r\n  const dateFmtString = '%d.%m'\r\n  const date = strftime(dateFmtString, label)\r\n  const all = item && (item.payload.all)\r\n  if (all) {\r\n    if (item && item.unit === '%') {\r\n      return date\r\n    }\r\n    return `${date}, ${formatNumber(all, {currency: true, compact: true})}`\r\n  }\r\n  return date\r\n}\r\n\r\nexport const yaxisFormatterPercent = value => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const yaxisFormatterNumber = value => {\r\n  return compactNumber(value)\r\n}\r\n\r\nexport const yaxisFormatter = (value, ...args) => {\r\n  return formatNumber(value, { currency: true, compact: true })\r\n}\r\n\r\nexport const tooltipFormatterNumber = (value, name, item) => {\r\n  return formatNumber(value)\r\n}\r\n\r\nexport const tooltipFormatterPercent = (value, name, item) => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const tooltipFormatter = (value, name, item) => {\r\n  if (item && item.unit === '%') {\r\n    return value.toFixed(2)\r\n  }\r\n  return formatNumber(value, { currency: true })\r\n}\r\n\r\nexport const tooltipLabelFormatterUnits = (label, args) => {\r\n  if (!label) {\r\n    return label\r\n  }\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n    if (!label.getDate()) {\r\n      return label\r\n    }\r\n  }\r\n  const date = strftime('%d.%m', label)\r\n\r\n  const item = args && args[0]\r\n  if (item && item.unit === '%') {\r\n    return date\r\n  }\r\n\r\n  const all = item && (item.payload.all)\r\n\r\n  if (label.constructor !== Date) {\r\n    return all ? `${label}, total: ${all}` : label\r\n  }\r\n\r\n  return all ? `${date}, total: ${all}` : date\r\n}\r\n\r\nexport function tsToIso(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, -5)\r\n}\r\n\r\nexport function tsToIsoDate(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, 10)\r\n}\r\n\r\nexport function urlWithParams(url, params) {\r\n  const paramsStr = Object.entries(params)\r\n    .reduce((memo, [key, value]) => {\r\n      if (value) memo.push(`${key}=${encodeURIComponent(value)}`)\r\n      return memo\r\n    }, [])\r\n    .join('&')\r\n  return `${url}?${paramsStr}`\r\n}\r\n\r\nexport function getProvider(chainId) {\r\n  return new ethers.providers.JsonRpcProvider(\"https://rpc.ftm.tools/\", chainId)\r\n}\r\n\r\nexport function findNearest(arr, needle, getter = el => el) {\r\n\tlet prevEl\r\n\tfor (const el of arr) {\r\n\t\tif (getter(el) > needle) {\r\n\t\t\tif (prevEl && getter(el) - needle > needle - getter(prevEl)) {\r\n\t\t\t\treturn prevEl\r\n\t\t\t} else {\r\n\t\t\t\treturn el\r\n\t\t\t}\r\n\t\t}\r\n\t\tprevEl = el\r\n\t}\r\n\treturn prevEl\r\n}\r\n\r\nasync function callWithRetry(func, args, maxTries = 10) {\r\n  let i = 0\r\n  while (true) {\r\n    try {\r\n      return await func(...args)\r\n    } catch (ex) {\r\n      i++\r\n      if (i == maxTries) {\r\n        throw ex\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function queryProviderLogs({ fromBlock, toBlock, address, backwards }) {\r\n  logger.info(`query logs fromBlock=%s toBlock=%s blocks length=%s backwards=%s`,\r\n  \tfromBlock,\r\n  \ttoBlock,\r\n  \ttoBlock - fromBlock,\r\n  \tbackwards\r\n  )\r\n  const allResult = []\r\n  const MAX = 1000\r\n\r\n  let chunkFromBlock\r\n  let chunkToBlock\r\n\r\n  if (backwards) {\r\n  \tchunkToBlock = toBlock\r\n  \tchunkFromBlock = Math.max(fromBlock, toBlock - MAX)\r\n  } else {\r\n\t  chunkFromBlock = fromBlock\r\n\t  chunkToBlock = Math.min(toBlock, fromBlock + MAX)\r\n  }\r\n\r\n  let i = 0\r\n  while (true) {\r\n    logger.info(`requesting ${i} chunk ${chunkFromBlock}-${chunkToBlock}...`)\r\n    let result = await callWithRetry(provider.getLogs.bind(provider), [{\r\n      fromBlock: chunkFromBlock,\r\n      toBlock: chunkToBlock,\r\n      address\r\n    }])\r\n    if (backwards) {\r\n    \tresult = result.reverse()\r\n    }\r\n    allResult.push(...result)\r\n    i++\r\n\r\n    if (!backwards && chunkToBlock === toBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n    if (backwards && chunkFromBlock === fromBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n\r\n    if (backwards) {\r\n\t    chunkToBlock = chunkFromBlock - 1\r\n\t    chunkFromBlock = Math.max(fromBlock, chunkFromBlock - MAX)\r\n    } else {\r\n\t    chunkFromBlock = chunkToBlock + 1\r\n\t    chunkToBlock = Math.min(toBlock, chunkToBlock + MAX)\r\n    }\r\n  }\r\n\r\n  return allResult\r\n}\r\n\r\nexport function LogRecord(row) {\r\n  return {\r\n    ...row,\r\n    args: JSON.parse(row.args).map(el => {\r\n      if (el && el.type === 'BigNumber') {\r\n        return BigNumber.from(el.hex)\r\n      }\r\n      return el\r\n    })\r\n  }\r\n}\r\n\r\nexport function UsdmSupplyRecord(row) {\r\n  return {\r\n    ...row,\r\n    supply: BigNumber.from(JSON.parse(row.supply).hex)\r\n  }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { RiDownload2Fill } from 'react-icons/ri'\r\nimport strftime from 'strftime'\r\n\r\nfunction formatTimestamp(timestamp) {\r\n  return strftime('%Y-%m-%d', new Date(timestamp * 1000))\r\n}\r\n\r\nfunction getCsvUrl(data, fields) {\r\n  const csvHeader = 'Date,' + fields.map(field => field.name || field.key).join(',')\r\n  const csvBody = data.map(item => {\r\n    return formatTimestamp(item.timestamp) + ',' + fields.map(field => item[field.key]).join(',')\r\n  }).join('\\n')\r\n  const csv = csvHeader + '\\n' + csvBody\r\n  return `data:application/octet-stream,${encodeURIComponent(csv)}`\r\n}\r\n\r\nexport default function CsvLink({ data, fields, name = 'SKULL stats' }) {\r\n  const onClick = useCallback((evt) => {\r\n    evt.preventDefault()\r\n\r\n    const csvUrl = getCsvUrl(data, fields)\r\n    const start = formatTimestamp(data[0].timestamp)\r\n    const end = formatTimestamp(data[data.length - 1].timestamp)\r\n    const fileName = `${name}_${start}_${end}.csv`\r\n\r\n    const aElement = document.createElement('a')\r\n    aElement.href = csvUrl\r\n    aElement.download = fileName\r\n    document.body.appendChild(aElement)\r\n    aElement.click()\r\n    document.body.removeChild(aElement)\r\n  }, [data, fields, name])\r\n\r\n  if (!data || data.length === 0 || !fields) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <a title=\"Download CSV\" className=\"csv-link\" onClick={onClick}>\r\n      <RiDownload2Fill size=\"1em\" />\r\n    </a>\r\n  )\r\n}","import { RiLoader5Fill } from \"react-icons/ri\";\r\nimport CsvLink from \"./CsvLink\";\r\n\r\nexport default function ChartWrapper(props) {\r\n  const { title, loading, csvFields, data } = props;\r\n  return (\r\n    <>\r\n      <h3>\r\n        {title}\r\n        <CsvLink fields={csvFields} name={title} data={data} />\r\n      </h3>\r\n      {loading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line\r\n} from 'recharts';\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS\r\n} from '../helpers'\r\n\r\nexport default function VolumeChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n    xaxisTickFormatter,\r\n    yaxisTickFormatter,\r\n    tooltipFormatter,\r\n    tooltipLabelFormatter\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint SLP'},\r\n    {key: 'burn', name: 'Burn SLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ]\r\n\r\n  return <ChartWrapper title=\"Volume\" loading={loading} csvFields={csvFields} data={data}>\r\n    <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n      <ComposedChart data={data} syncId=\"syncA\">\r\n        <CartesianGrid strokeDasharray=\"10 10\" />\r\n        <XAxis dataKey=\"timestamp\" tickFormatter={xaxisTickFormatter} minTickGap={30} />\r\n        <YAxis dataKey=\"all\" interval=\"preserveStartEnd\" tickCount={7} tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n        />\r\n        <Legend />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint SLP\" fill={COLORS[1]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn SLP\" fill={COLORS[2]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n        <Line isAnimationActive={false} type=\"monotone\" dot={false} strokeWidth={3} stroke={COLORS[0]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  </ChartWrapper>\r\n}","import React from 'react'\r\n\r\nimport {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ComposedChart,\r\n  Line,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS\r\n} from '../helpers'\r\n\r\nexport default function FeesChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n    xaxisTickFormatter,\r\n    yaxisTickFormatter,\r\n    tooltipFormatter,\r\n    tooltipLabelFormatter\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint SLP'},\r\n    {key: 'burn', name: 'Burn SLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ]\r\n\r\n  return <ChartWrapper title=\"Fees\" loading={loading} csvFields={csvFields} data={data}>\r\n    <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n      <ComposedChart data={data} syncId=\"syncA\">\r\n        <CartesianGrid strokeDasharray=\"10 10\" />\r\n        <XAxis dataKey=\"timestamp\" tickFormatter={xaxisTickFormatter} minTickGap={30} />\r\n        <YAxis dataKey=\"all\" interval=\"preserveStartEnd\" tickCount={7} tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisTickFormatter} width={yaxisWidth} />\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n        />\r\n        <Legend />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint SLP\" fill={COLORS[1]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn SLP\" fill={COLORS[2]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n        <Bar isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n        <Line isAnimationActive={false} type=\"monotone\" strokeWidth={3} dot={false} stroke={COLORS[0]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n    <div className=\"chart-description\">\r\n      Collected fees. USD value is calculated with token price at the moment of swap, trade, minting or redeeming SLP\r\n    </div>\r\n  </ChartWrapper>\r\n}","import React from 'react'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie\r\n} from 'recharts';\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter as tooltipLabelFormatter_,\r\n  tooltipFormatter as tooltipFormatter_,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n  COINCOLORS\r\n} from '../helpers'\r\n\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nexport default function GenericChart(props) {\r\n  const {\r\n    loading,\r\n    title,\r\n    data,\r\n    description,\r\n    height = CHART_HEIGHT,\r\n    yaxisWidth = YAXIS_WIDTH,\r\n    yaxisDataKey = 'all',\r\n    yaxisTickFormatter = yaxisFormatter,\r\n    yaxisDomain,\r\n    xaxisDataKey = 'timestamp',\r\n    xaxisTickFormatter = tooltipLabelFormatter_,\r\n    tooltipFormatter = tooltipFormatter_,\r\n    tooltipLabelFormatter = tooltipLabelFormatter_,\r\n    items,\r\n    type,\r\n    syncId,\r\n    children,\r\n    rightYaxisDataKey,\r\n    isCoinChart\r\n  } = props\r\n\r\n  let ChartComponent\r\n  if (type === 'Line') {\r\n    ChartComponent = LineChart\r\n  } else if (type === 'Bar') {\r\n    ChartComponent = BarChart\r\n  } else {\r\n    ChartComponent = ComposedChart\r\n  }\r\n  \r\n  const htmlItems = (items || []).map((item, i) => {\r\n    const props = {\r\n      type: \"monotone\",\r\n      dataKey: item.key,\r\n      stackId: \"a\",\r\n      name: item.name || item.key,\r\n      fill: item.color || COLORS[i % COLORS.length],\r\n      stroke: item.color || COLORS[i % COLORS.length],\r\n      dot: item.dot || false,\r\n      key: 'item-' + i,\r\n      unit: item.unit,\r\n      strokeWidth: item.strokeWidth,\r\n      yAxisId: item.yAxisId\r\n    }\r\n    if (item.type === 'Line' || type === 'Line') {\r\n      return <Line {...props} isAnimationActive={false} />\r\n    }\r\n    return <Bar {...props} isAnimationActive={false} />\r\n  })\r\n\r\n  const csvFields = items.map(item => ({ key: item.key, name: item.name }))\r\n\r\n  return <ChartWrapper title={title} loading={loading} data={data} csvFields={csvFields}>\r\n    <ResponsiveContainer width=\"100%\" height={height}>\r\n      {React.createElement(ChartComponent, { data, syncId }, [\r\n        <CartesianGrid strokeDasharray=\"10 10\" key=\"a\" />,\r\n        <XAxis dataKey={xaxisDataKey} tickFormatter={xaxisTickFormatter} minTickGap={30} key=\"b\" />,\r\n        <YAxis domain={yaxisDomain} dataKey={yaxisDataKey} tickFormatter={yaxisTickFormatter} key=\"c\" />,\r\n        (\r\n          rightYaxisDataKey ?\r\n            <YAxis dataKey={rightYaxisDataKey} tickFormatter={yaxisTickFormatter} orientation=\"right\" yAxisId=\"right\" key=\"c2\" />\r\n            : null\r\n        ),\r\n        <Tooltip\r\n          formatter={tooltipFormatter}\r\n          labelFormatter={tooltipLabelFormatter}\r\n          contentStyle={{ textAlign: 'left' }}\r\n          key=\"d\"\r\n        />,\r\n        <Legend key=\"e\" />,\r\n        ...htmlItems,\r\n        children\r\n      ])}\r\n    </ResponsiveContainer>\r\n    {description && (\r\n      <div className=\"chart-description\">\r\n        {description}\r\n      </div>\r\n    )}\r\n  </ChartWrapper>\r\n}\r\n","\r\nexport const FANTOM = 250;\r\n\r\nexport const addresses = {\r\n\r\n  [FANTOM]: {\r\n    SKULL: \"0xfa5992A8A47aF7029e04eC6a95203AD3f301460b\", // DONE\r\n    ES_SKULL: \"0x2b402AeDd4ccC193DC2A50c281Fb8945ddaD9760\", // DONE\r\n    SLP: \"0xae904132587Db1c9177ED4755c32811407ebeAb4\", // DONE\r\n    BN_SKULL: \"0x94d05cd11F595C0a25fcdE6f5C762b50448f2cdc\", // DONE\r\n    STAKED_SKULL_TRACKER: \"0x6f0dcE2785241f72f10605b3644983e91D806732\", // DONE\r\n    STAKED_SLP_TRACKER: \"0x748E9EE6E878Eca5d7d97C7427066aaeF095C7E3\", // DONE\r\n    BONUS_SKULL_TRACKER: \"0x350FD63274e00DD45bc85B2745b24a5047473568\",\r\n    FEE_SKULL_TRACKER: \"0xF03C3b4449Cb25611A590566CF7DCe586ad2aedd\", // DONE\r\n    FEE_SLP_TRACKER: \"0x821D86F3860acb43bbA46f32231FDD11db2B2b0e\", // DONE\r\n    FTM: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\r\n    BTC: \"0x321162Cd933E2Be498Cd2267a90534A804051b11\", // 8 decimals wrapped btc\r\n    ETH: \"0x74b23882a30290451A17c44f4F05243b6b58C76d\", // 18 decimals wrapped eth\r\n    RewardReader: \"0x096aA9D819e465f5f8Bea83947fa43af67d8ac09\", // DONE\r\n    SlpManager: \"0x9A3CF1DF49Ab9A4C8c3C8DC5EEbd0e6A384F1B9d\", // DONE\r\n    Router: \"0xDC41E2dEe74Fc8237Af877811d089039DCa646Ac\", // DONE\r\n    OrderBook: \"0xe913547bC9e19C2d38215f7Ab2535cc89c25b096\", // DONE\r\n    PositionManager: \"0x493207B0b5616b0d2db041Bcc4C9013e12B1016f\", // DONE\r\n    FastPriceFeed: \"0x507d53E19341DDB1d40f3D1db468A31AFCdD8D28\", // DONE\r\n    PositionRouter: \"0x1CA2C9F35651B4660ebC0d5694dc081a50fA67f6\", // DONE\r\n    PositionExecutorUpKeep: \"\"\r\n  },\r\n};\r\n\r\nexport function getAddress(chainId, key) {\r\n  if (!chainId in addresses) {\r\n    throw new Error(`Unknown chain ${chainId}`);\r\n  }\r\n  if (!(key in addresses[chainId])) {\r\n    throw new Error(`Unknown address key ${key}`);\r\n  }\r\n  return addresses[chainId][key];\r\n}\r\n","import { useMemo, useState, useEffect } from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql, HttpLink } from \"@apollo/client\";\r\nimport { chain, sumBy, sortBy, maxBy, minBy } from \"lodash\";\r\nimport fetch from \"cross-fetch\";\r\nimport * as ethers from \"ethers\";\r\n\r\nimport { getAddress, FANTOM } from \"./addresses\";\r\n\r\nconst { JsonRpcProvider } = ethers.providers;\r\n\r\nimport RewardReader from \"../abis/RewardReader.json\";\r\nimport SlpManager from \"../abis/SlpManager.json\";\r\nimport Token from \"../abis/v1/Token.json\";\r\n\r\nconst providers = {\r\n  fantom: new JsonRpcProvider(\"https://rpc.ftm.tools/\"),\r\n};\r\n\r\nfunction getProvider(chainName) {\r\n  if (!(chainName in providers)) {\r\n    throw new Error(`Unknown chain ${chainName}`);\r\n  }\r\n  return providers[\"fantom\"];\r\n}\r\n\r\nfunction getChainId(chainName) {\r\n  const chainId = {\r\n    fantom: FANTOM,\r\n  }[chainName];\r\n  if (!chainId) {\r\n    throw new Error(`Unknown chain ${chainName}`);\r\n  }\r\n  return chainId;\r\n}\r\n\r\nconst DEFAULT_GROUP_PERIOD = 86400;\r\nconst NOW_TS = parseInt(Date.now() / 1000);\r\nconst FIRST_DATE_TS = parseInt(+new Date(2022, 5, 1) / 1000);\r\n\r\nfunction fillNa(arr, keys) {\r\n  const prevValues = {};\r\n  if (!keys && arr.length > 0) {\r\n    keys = Object.keys(arr[0]);\r\n    delete keys.timestamp;\r\n    delete keys.id;\r\n  }\r\n  for (const el of arr) {\r\n    for (const key of keys) {\r\n      if (!el[key]) {\r\n        if (prevValues[key]) {\r\n          el[key] = prevValues[key];\r\n        }\r\n      } else {\r\n        prevValues[key] = el[key];\r\n      }\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport async function queryEarnData(chainName, account) {\r\n  const provider = getProvider(chainName);\r\n  const chainId = getChainId(chainName);\r\n  const rewardReader = new ethers.Contract(\r\n    getAddress(chainId, \"RewardReader\"),\r\n    RewardReader.abi,\r\n    provider\r\n  );\r\n  const slpContract = new ethers.Contract(\r\n    getAddress(chainId, \"SLP\"),\r\n    Token.abi,\r\n    provider\r\n  );\r\n  const slpManager = new ethers.Contract(\r\n    getAddress(chainId, \"SlpManager\"),\r\n    SlpManager.abi,\r\n    provider\r\n  );\r\n\r\n  let depositTokens;\r\n  let rewardTrackersForDepositBalances;\r\n  let rewardTrackersForStakingInfo;\r\n\r\n  if (chainId === FANTOM) {\r\n    depositTokens = [\r\n      getAddress(FANTOM, \"SKULL\"),\r\n      getAddress(FANTOM, \"ES_SKULL\"),\r\n      getAddress(FANTOM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"BN_SKULL\"),\r\n      getAddress(FANTOM, \"SLP\"),\r\n    ];\r\n    rewardTrackersForDepositBalances = [\r\n      getAddress(FANTOM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"FEE_SLP_TRACKER\"),\r\n    ];\r\n    rewardTrackersForStakingInfo = [\r\n      getAddress(FANTOM, \"STAKED_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"BONUS_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"FEE_SKULL_TRACKER\"),\r\n      getAddress(FANTOM, \"STAKED_SLP_TRACKER\"),\r\n      getAddress(FANTOM, \"FEE_SLP_TRACKER\"),\r\n    ];\r\n  }\r\n\r\n  const [balances, stakingInfo, slpTotalSupply, slpAum, skullPrice] =\r\n    await Promise.all([\r\n      rewardReader.getDepositBalances(\r\n        account,\r\n        depositTokens,\r\n        rewardTrackersForDepositBalances\r\n      ),\r\n      rewardReader\r\n        .getStakingInfo(account, rewardTrackersForStakingInfo)\r\n        .then((info) => {\r\n          return rewardTrackersForStakingInfo.map((_, i) => {\r\n            return info.slice(i * 5, (i + 1) * 5);\r\n          });\r\n        }),\r\n      slpContract.totalSupply(),\r\n      slpManager.getAumInUsdm(true),\r\n      fetch(\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=metavault-trade&vs_currencies=usd\"\r\n      ).then(async (res) => {\r\n        const j = await res.json();\r\n        return j[\"metavault-trade\"][\"usd\"];\r\n      }),\r\n    ]);\r\n\r\n  const slpPrice = slpAum / 1e18 / (slpTotalSupply / 1e18);\r\n  const now = new Date();\r\n\r\n  return {\r\n    SLP: {\r\n      stakedSLP: balances[5] / 1e18,\r\n      pendingETH: stakingInfo[4][0] / 1e18,\r\n      pendingEsSKULL: stakingInfo[3][0] / 1e18,\r\n      slpPrice,\r\n    },\r\n    SKULL: {\r\n      stakedSKULL: balances[0] / 1e18,\r\n      stakedEsSKULL: balances[1] / 1e18,\r\n      pendingETH: stakingInfo[2][0] / 1e18,\r\n      pendingEsSKULL: stakingInfo[0][0] / 1e18,\r\n      skullPrice,\r\n    },\r\n    timestamp: parseInt(now / 1000),\r\n    datetime: now.toISOString(),\r\n  };\r\n}\r\n\r\nexport const tokenDecimals = {\r\n  \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\": 18, // WFTM\r\n  \"0x74b23882a30290451A17c44f4F05243b6b58C76d\": 18, // WETH\r\n  \"0x321162Cd933E2Be498Cd2267a90534A804051b11\": 8, // BTC\r\n  \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\": 6, // USDC\r\n  \"0x049d68029688eAbF473097a2fC38ef61633A3C7A\": 6, // USDT\r\n  \"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\": 18, // DAI\r\n};\r\n\r\nexport const tokenSymbols = {\r\n  // Fantom\r\n  \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\": \"WFTM\",\r\n  \"0x74b23882a30290451A17c44f4F05243b6b58C76d\": \"WETH\",\r\n  \"0x321162Cd933E2Be498Cd2267a90534A804051b11\": \"WBTC\",\r\n  \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\": \"USDC\",\r\n  \"0x049d68029688eAbF473097a2fC38ef61633A3C7A\": \"USDT\",\r\n  \"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\": \"DAI\",\r\n};\r\n\r\nfunction getTokenDecimals(token) {\r\n  return tokenDecimals[token] || 18;\r\n}\r\n\r\nconst knownSwapSources = {\r\n  fantom: {\r\n    [getAddress(FANTOM, \"Router\")]: \"SKULL\",\r\n    [getAddress(FANTOM, \"OrderBook\")]: \"SKULL\",\r\n    [getAddress(FANTOM, \"PositionManager\")]: \"SKULL\",\r\n    // [getAddress(FANTOM, \"OrderExecutor\")]: \"SKULL\",\r\n    [getAddress(FANTOM, \"FastPriceFeed\")]: \"SKULL\",\r\n    [getAddress(FANTOM, \"PositionExecutorUpKeep\")]: \"SKULL\",\r\n    [getAddress(FANTOM, \"PositionRouter\")]: \"SKULL\",\r\n  },\r\n};\r\n\r\nconst defaultFetcher = (url) => fetch(url).then((res) => res.json());\r\nexport function useRequest(url, defaultValue, fetcher = defaultFetcher) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  const [data, setData] = useState(defaultValue);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await fetcher(url);\r\n      setData(data);\r\n    } catch (ex) {\r\n      console.error(ex);\r\n      setError(ex);\r\n    }\r\n    setLoading(false);\r\n  }, [url]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useCoingeckoPrices(symbol, { from = FIRST_DATE_TS } = {}) {\r\n  // token ids https://api.coingecko.com/api/v3/coins\r\n  const _symbol = {\r\n    BTC: \"bitcoin\",\r\n    ETH: \"ethereum\",\r\n    FTM: \"fantom\",\r\n    MATIC: \"matic-network\",\r\n    WBTC: \"wrapped-bitcoin\",\r\n    USDC: \"usd-coin\",\r\n    USDT: \"tether\",\r\n    DAI: \"dai\",\r\n  }[symbol];\r\n\r\n  const now = Date.now() / 1000;\r\n  const days = Math.ceil(now / 86400) - Math.ceil(from / 86400) - 1;\r\n\r\n  const url = `https://api.coingecko.com/api/v3/coins/${_symbol}/market_chart?vs_currency=usd&days=${days}&interval=daily`;\r\n\r\n  const [res, loading, error] = useRequest(url);\r\n\r\n  const data = useMemo(() => {\r\n    if (!res || res.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const ret = res.prices.map((item) => {\r\n      // -1 is for shifting to previous day\r\n      // because CG uses first price of the day, but for SLP we store last price of the day\r\n      const timestamp = item[0] - 1;\r\n      const groupTs = parseInt(timestamp / 1000 / 86400) * 86400;\r\n      return {\r\n        timestamp: groupTs,\r\n        value: item[1],\r\n      };\r\n    });\r\n    return ret;\r\n  }, [res]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nfunction getImpermanentLoss(change) {\r\n  return (2 * Math.sqrt(change)) / (1 + change) - 1;\r\n}\r\n\r\nfunction getChainSubgraph(chainName) {\r\n  // return \"chimpydev/stats\";\r\n  return \"chimpydev/cranium-core\";\r\n}\r\n\r\nexport function useGraph(\r\n  querySource,\r\n  { subgraph = null, subgraphUrl = null, chainName = \"fantom\" } = {}\r\n) {\r\n  const query = gql(querySource);\r\n\r\n  if (!subgraphUrl) {\r\n    if (!subgraph) {\r\n      subgraph = getChainSubgraph(chainName);\r\n    }\r\n    subgraphUrl = `https://api.thegraph.com/subgraphs/name/${subgraph}`;\r\n  }\r\n\r\n  const client = new ApolloClient({\r\n    link: new HttpLink({ uri: subgraphUrl, fetch }),\r\n    cache: new InMemoryCache(),\r\n  });\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, [querySource, setLoading]);\r\n\r\n  useEffect(() => {\r\n    client\r\n      .query({ query })\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((ex) => {\r\n        console.warn(\r\n          \"Subgraph request failed error: %s subgraphUrl: %s\",\r\n          ex.message,\r\n          subgraphUrl\r\n        );\r\n        setError(ex);\r\n        setLoading(false);\r\n      });\r\n  }, [querySource, setData, setError, setLoading]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useLastBlock(chainName = \"fantom\") {\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    providers[chainName]\r\n      .getBlock()\r\n      .then(setData)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useLastSubgraphBlock(chainName = \"fantom\") {\r\n  const [data, loading, error] = useGraph(\r\n    `{\r\n    _meta {\r\n      block {\r\n        number\r\n      }\r\n    } \r\n  }`,\r\n    {\r\n      chainName,\r\n    }\r\n  );\r\n  const [block, setBlock] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    providers[chainName].getBlock(data._meta.block.number).then((block) => {\r\n      setBlock(block);\r\n    });\r\n  }, [data, setBlock]);\r\n\r\n  return [block, loading, error];\r\n}\r\n\r\nexport function useTradersData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const [closedPositionsData, loading, error] = useGraph(\r\n    `{\r\n    tradingStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      profit\r\n      loss\r\n      profitCumulative\r\n      lossCumulative\r\n      longOpenInterest\r\n      shortOpenInterest\r\n    }\r\n  }`,\r\n    { chainName }\r\n  );\r\n  const [feesData] = useFeesData({ from, to, chainName });\r\n  const marginFeesByTs = useMemo(() => {\r\n    if (\r\n      !feesData ||\r\n      !closedPositionsData ||\r\n      (closedPositionsData && !closedPositionsData.tradingStats.length)\r\n    ) {\r\n      return {};\r\n    }\r\n\r\n    let feesCumulative = 0;\r\n    return feesData.reduce((memo, { timestamp, margin: fees }) => {\r\n      feesCumulative += fees;\r\n      memo[timestamp] = {\r\n        fees,\r\n        feesCumulative,\r\n      };\r\n      return memo;\r\n    }, {});\r\n  }, [feesData]);\r\n\r\n  let ret = null;\r\n  const data =\r\n    closedPositionsData && closedPositionsData.tradingStats.length > 0\r\n      ? sortBy(closedPositionsData.tradingStats, (i) => i.timestamp).map(\r\n          (dataItem) => {\r\n            const longOpenInterest = dataItem.longOpenInterest / 1e30;\r\n            const shortOpenInterest = dataItem.shortOpenInterest / 1e30;\r\n            const openInterest = longOpenInterest + shortOpenInterest;\r\n\r\n            const fees = marginFeesByTs[dataItem.timestamp]?.fees || 0;\r\n            const feesCumulative =\r\n              marginFeesByTs[dataItem.timestamp]?.feesCumulative || 0;\r\n\r\n            const profit = dataItem.profit / 1e30;\r\n            const loss = dataItem.loss / 1e30;\r\n            const profitCumulative = dataItem.profitCumulative / 1e30;\r\n            const lossCumulative = dataItem.lossCumulative / 1e30;\r\n            const pnlCumulative = profitCumulative - lossCumulative;\r\n            const pnl = profit - loss;\r\n            return {\r\n              longOpenInterest,\r\n              shortOpenInterest,\r\n              openInterest,\r\n              profit,\r\n              loss: -loss,\r\n              profitCumulative,\r\n              lossCumulative: -lossCumulative,\r\n              pnl,\r\n              pnlCumulative,\r\n              timestamp: dataItem.timestamp,\r\n            };\r\n          }\r\n        )\r\n      : null;\r\n\r\n  if (data) {\r\n    const maxProfit = maxBy(data, (item) => item.profit).profit;\r\n    const maxLoss = minBy(data, (item) => item.loss).loss;\r\n    const maxProfitLoss = Math.max(maxProfit, -maxLoss);\r\n\r\n    const maxPnl = maxBy(data, (item) => item.pnl).pnl;\r\n    const minPnl = minBy(data, (item) => item.pnl).pnl;\r\n    const maxCumulativePnl = maxBy(\r\n      data,\r\n      (item) => item.pnlCumulative\r\n    ).pnlCumulative;\r\n    const minCumulativePnl = minBy(\r\n      data,\r\n      (item) => item.pnlCumulative\r\n    ).pnlCumulative;\r\n\r\n    const profitCumulative = data[data.length - 1].profitCumulative;\r\n    const lossCumulative = data[data.length - 1].lossCumulative;\r\n    const stats = {\r\n      maxProfit,\r\n      maxLoss,\r\n      maxProfitLoss,\r\n      profitCumulative,\r\n      lossCumulative,\r\n      maxCumulativeProfitLoss: Math.max(profitCumulative, -lossCumulative),\r\n\r\n      maxAbsOfPnlAndCumulativePnl: Math.max(\r\n        Math.abs(maxPnl),\r\n        Math.abs(maxCumulativePnl),\r\n        Math.abs(minPnl),\r\n        Math.abs(minCumulativePnl)\r\n      ),\r\n    };\r\n\r\n    ret = {\r\n      data,\r\n      stats,\r\n    };\r\n  }\r\n\r\n  return [ret, loading];\r\n}\r\n\r\nfunction getSwapSourcesFragment(skip = 0, from, to) {\r\n  return `\r\n    hourlyVolumeBySources(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      source\r\n      swap\r\n    }\r\n  `;\r\n}\r\nexport function useSwapSources({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const query = `{\r\n    a: ${getSwapSourcesFragment(0, from, to)}\r\n    b: ${getSwapSourcesFragment(1000, from, to)}\r\n    c: ${getSwapSourcesFragment(2000, from, to)}\r\n    d: ${getSwapSourcesFragment(3000, from, to)}\r\n    e: ${getSwapSourcesFragment(4000, from, to)}\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  let total = 0;\r\n  let data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    const { a, b, c, d, e } = graphData;\r\n    const all = [...a, ...b, ...c, ...d, ...e];\r\n\r\n    const totalVolumeBySource = a.reduce((acc, item) => {\r\n      const source = knownSwapSources[chainName][item.source] || item.source;\r\n      if (!acc[source]) {\r\n        acc[source] = 0;\r\n      }\r\n      acc[source] += item.swap / 1e30;\r\n      return acc;\r\n    }, {});\r\n    const topVolumeSources = new Set(\r\n      Object.entries(totalVolumeBySource)\r\n        .sort((a, b) => b[1] - a[1])\r\n        .map((item) => item[0])\r\n        .slice(0, 30)\r\n    );\r\n\r\n    let ret = chain(all)\r\n      .groupBy((item) => parseInt(item.timestamp / 86400) * 86400)\r\n      .map((values, timestamp) => {\r\n        let all = 0;\r\n        const retItem = {\r\n          timestamp: Number(timestamp),\r\n          ...values.reduce((memo, item) => {\r\n            let source =\r\n              knownSwapSources[chainName][item.source] || item.source;\r\n            if (!topVolumeSources.has(source)) {\r\n              source = \"Other\";\r\n            }\r\n            if (item.swap != 0) {\r\n              const volume = item.swap / 1e30;\r\n              memo[source] = memo[source] || 0;\r\n              memo[source] += volume;\r\n              all += volume;\r\n            }\r\n            return memo;\r\n          }, {}),\r\n        };\r\n\r\n        retItem.all = all;\r\n\r\n        return retItem;\r\n      })\r\n      .sortBy((item) => item.timestamp)\r\n      .value();\r\n\r\n    return ret;\r\n  }, [graphData]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nfunction getServerHostname(chainName) {\r\n  return process.env.RAZZLE_SKULL_API_URL;\r\n}\r\n\r\nexport function useTotalVolumeFromServer() {\r\n  const [data, loading] = useRequest(getServerHostname() + \"/total_volume\");\r\n\r\n  return useMemo(() => {\r\n    if (!data) {\r\n      return [data, loading];\r\n    }\r\n\r\n    const total = data.reduce((memo, item) => {\r\n      return memo + parseInt(item.data.volume) / 1e30;\r\n    }, 0);\r\n    return [total, loading];\r\n  }, [data, loading]);\r\n}\r\n\r\nexport async function getStatsFromSubgraph(graphClient, chainName=\"fantom\"){\r\n  const queryString = `{\r\n    totalVolumes: volumeStats(where: {period: \"total\"}) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n    deltaVolumes: volumeStats(\r\n      first:1\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: \"daily\"}\r\n    ) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n  \ttotalFees: feeStats(where: {period: \"total\"}) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n\t\t}\r\n    deltaFees: feeStats(\r\n      first:1\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: \"daily\"}\r\n    ) {\r\n      swap\r\n      mint\r\n      burn\r\n      margin\r\n      liquidation\r\n    }\r\n  }`;\r\n\r\n  const query = gql(queryString);\r\n  const { data } = await graphClient.query({query})\r\n  const statsProps = [\"totalVolumes\", \"deltaVolumes\", \"totalFees\", \"deltaFees\"]\r\n  const methodProps = [\"swap\", \"mint\", \"burn\", \"margin\", \"liquidation\"]\r\n  const result = {}\r\n  console.log(data);\r\n  statsProps.forEach((statsProp)=>{\r\n    result[statsProp] = {}\r\n    let total = 0;\r\n    methodProps.forEach((methodProp)=>{\r\n      const statValue = parseInt(data[statsProp][0][methodProp]) / 1e30;\r\n      console.log(statValue);\r\n      result[statsProp][methodProp] = statValue\r\n      total += statValue\r\n    })\r\n    result[statsProp].total = total;\r\n  })\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nexport function useVolumeDataFromServer({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const [data, loading] = useRequest(\r\n    `${getServerHostname(chainName)}/daily_volume`,\r\n    null,\r\n    async (url) => {\r\n      let after;\r\n      const ret = [];\r\n      while (true) {\r\n        const res = await (\r\n          await fetch(url + (after ? `?after=${after}` : \"\"))\r\n        ).json();\r\n        if (res.length === 0) return ret;\r\n        for (const item of res) {\r\n          if (item.data.timestamp < from) {\r\n            return ret;\r\n          }\r\n          ret.push(item);\r\n        }\r\n        after = res[res.length - 1].id;\r\n      }\r\n    }\r\n  );\r\n\r\n  const ret = useMemo(() => {\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    const tmp = data.reduce((memo, item) => {\r\n      const timestamp = item.data.timestamp;\r\n      if (timestamp < from || timestamp > to) {\r\n        return memo;\r\n      }\r\n\r\n      let type;\r\n      if (item.data.action === \"Swap\") {\r\n        type = \"swap\";\r\n      } else if (item.data.action === \"SellUSDM\") {\r\n        type = \"burn\";\r\n      } else if (item.data.action === \"BuyUSDM\") {\r\n        type = \"mint\";\r\n      } else if (item.data.action.includes(\"LiquidatePosition\")) {\r\n        type = \"liquidation\";\r\n      } else {\r\n        type = \"margin\";\r\n      }\r\n      const volume = Number(item.data.volume) / 1e30;\r\n      memo[timestamp] = memo[timestamp] || {};\r\n      memo[timestamp][type] = memo[timestamp][type] || 0;\r\n      memo[timestamp][type] += volume;\r\n      return memo;\r\n    }, {});\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return Object.keys(tmp)\r\n      .sort()\r\n      .map((timestamp) => {\r\n        const item = tmp[timestamp];\r\n        let all = 0;\r\n\r\n        let movingAverageAll;\r\n        const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD;\r\n        if (movingAverageTs in cumulativeByTs) {\r\n          movingAverageAll =\r\n            (cumulative - cumulativeByTs[movingAverageTs]) /\r\n            MOVING_AVERAGE_DAYS;\r\n        }\r\n\r\n        PROPS.forEach((prop) => {\r\n          if (item[prop]) all += item[prop];\r\n        });\r\n        cumulative += all;\r\n        cumulativeByTs[timestamp] = cumulative;\r\n        return {\r\n          timestamp,\r\n          all,\r\n          cumulative,\r\n          movingAverageAll,\r\n          ...item,\r\n        };\r\n      });\r\n  }, [data, from, to]);\r\n\r\n  return [ret, loading];\r\n}\r\n\r\nexport function useUsersData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const query = `{\r\n    userStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      uniqueCount\r\n      uniqueSwapCount\r\n      uniqueMarginCount\r\n      uniqueMintBurnCount\r\n      uniqueCountCumulative\r\n      uniqueSwapCountCumulative\r\n      uniqueMarginCountCumulative\r\n      uniqueMintBurnCountCumulative\r\n      actionCount\r\n      actionSwapCount\r\n      actionMarginCount\r\n      actionMintBurnCount\r\n      timestamp\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const prevUniqueCountCumulative = {};\r\n  const data = graphData\r\n    ? sortBy(graphData.userStats, \"timestamp\").map((item) => {\r\n        const newCountData = [\"\", \"Swap\", \"Margin\", \"MintBurn\"].reduce(\r\n          (memo, type) => {\r\n            memo[`new${type}Count`] = prevUniqueCountCumulative[type]\r\n              ? item[`unique${type}CountCumulative`] -\r\n                prevUniqueCountCumulative[type]\r\n              : item[`unique${type}Count`];\r\n            prevUniqueCountCumulative[type] =\r\n              item[`unique${type}CountCumulative`];\r\n            return memo;\r\n          },\r\n          {}\r\n        );\r\n        const oldCount = item.uniqueCount - newCountData.newCount;\r\n        const oldPercent = ((oldCount / item.uniqueCount) * 100).toFixed(1);\r\n        return {\r\n          all: item.uniqueCount,\r\n          uniqueSum:\r\n            item.uniqueSwapCount +\r\n            item.uniqueMarginCount +\r\n            item.uniqueMintBurnCount,\r\n          oldCount,\r\n          oldPercent,\r\n          ...newCountData,\r\n          ...item,\r\n        };\r\n      })\r\n    : null;\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nexport function useFundingRateData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const query = `{\r\n    fundingRates(\r\n      first: 1000,\r\n      orderBy: timestamp,\r\n      orderDirection: desc,\r\n      where: { period: \"daily\", id_gte: ${from}, id_lte: ${to} }\r\n    ) {\r\n      id,\r\n      token,\r\n      timestamp,\r\n      startFundingRate,\r\n      startTimestamp,\r\n      endFundingRate,\r\n      endTimestamp\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    const groups = graphData.fundingRates.reduce((memo, item) => {\r\n      const symbol = tokenSymbols[item.token];\r\n      memo[item.timestamp] = memo[item.timestamp] || {\r\n        timestamp: item.timestamp,\r\n      };\r\n      const group = memo[item.timestamp];\r\n      const timeDelta =\r\n        parseInt((item.endTimestamp - item.startTimestamp) / 3600) * 3600;\r\n\r\n      let fundingRate = 0;\r\n      if (item.endFundingRate && item.startFundingRate) {\r\n        const fundingDelta = item.endFundingRate - item.startFundingRate;\r\n        const divisor = timeDelta / 86400;\r\n        fundingRate = (fundingDelta / divisor / 10000) * 365;\r\n      }\r\n      group[symbol] = fundingRate;\r\n      return memo;\r\n    }, {});\r\n\r\n    return fillNa(sortBy(Object.values(groups), \"timestamp\"), [\r\n      \"FTM\",\r\n      \"ETH\",\r\n      \"USDC\",\r\n      \"USDT\",\r\n      \"BTC\",\r\n      \"DAI\",\r\n    ]);\r\n  }, [graphData]);\r\n\r\n  return [data, loading, error];\r\n}\r\n\r\nconst MOVING_AVERAGE_DAYS = 7;\r\nconst MOVING_AVERAGE_PERIOD = 86400 * MOVING_AVERAGE_DAYS;\r\n\r\nexport function useVolumeData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const timestampProp = \"timestamp\";\r\n  const query = `{\r\n    volumeStats(\r\n      first: 1000,\r\n      orderBy: timestamp,\r\n      orderDirection: desc\r\n      where: { period: daily, timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      timestamp\r\n      ${PROPS.join(\"\\n\")}\r\n    }\r\n  }`;\r\n  const [graphData, loading, error] = useGraph(query, { chainName });\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null;\r\n    }\r\n\r\n    let ret = sortBy(graphData.volumeStats, timestampProp).map((item) => {\r\n      const ret = { timestamp: item[timestampProp] };\r\n      let all = 0;\r\n      PROPS.forEach((prop) => {\r\n        ret[prop] = item[prop] / 1e30;\r\n        all += ret[prop];\r\n      });\r\n      ret.all = all;\r\n      return ret;\r\n    });\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return ret.map((item) => {\r\n      cumulative += item.all;\r\n\r\n      let movingAverageAll;\r\n      const movingAverageTs = item.timestamp - MOVING_AVERAGE_PERIOD;\r\n      if (movingAverageTs in cumulativeByTs) {\r\n        movingAverageAll =\r\n          (cumulative - cumulativeByTs[movingAverageTs]) / MOVING_AVERAGE_DAYS;\r\n      }\r\n\r\n      return {\r\n        movingAverageAll,\r\n        cumulative,\r\n        ...item,\r\n      };\r\n    });\r\n  }, [graphData]);\r\n\r\n  let total;\r\n\r\n  if(data&&data.length)\r\n    total = data[data.length-1].cumulative;\r\n\r\n\r\n\r\n  return [data,total, loading, error];\r\n}\r\n\r\nexport function useFeesData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const PROPS = \"margin liquidation swap mint burn\".split(\" \");\r\n  const feesQuery = `{\r\n    feeStats(\r\n      first: 1000\r\n      orderBy: id\r\n      orderDirection: desc\r\n      where: { period: daily, timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      id\r\n      margin\r\n      marginAndLiquidation\r\n      swap\r\n      mint\r\n      burn\r\n      timestamp\r\n    }\r\n  }`;\r\n\r\n  let [feesData, loading, error] = useGraph(feesQuery, { chainName });\r\n\r\n  const feesChartData = useMemo(() => {\r\n    if (!feesData || (feesData && feesData.feeStats.length === 0)) {\r\n      return null;\r\n    }\r\n\r\n    let chartData = sortBy(feesData.feeStats, \"id\").map((item) => {\r\n      const ret = { timestamp: item.timestamp || item.id };\r\n\r\n      PROPS.forEach((prop) => {\r\n        if (item[prop]) {\r\n          ret[prop] = item[prop] / 1e30;\r\n        }\r\n      });\r\n\r\n      ret.liquidation = item.marginAndLiquidation / 1e30 - item.margin / 1e30;\r\n      ret.all = PROPS.reduce((memo, prop) => memo + ret[prop], 0);\r\n      return ret;\r\n    });\r\n\r\n    let cumulative = 0;\r\n    const cumulativeByTs = {};\r\n    return chain(chartData)\r\n      .groupBy((item) => item.timestamp)\r\n      .map((values, timestamp) => {\r\n        const all = sumBy(values, \"all\");\r\n        cumulative += all;\r\n\r\n        let movingAverageAll;\r\n        const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD;\r\n        if (movingAverageTs in cumulativeByTs) {\r\n          movingAverageAll =\r\n            (cumulative - cumulativeByTs[movingAverageTs]) /\r\n            MOVING_AVERAGE_DAYS;\r\n        }\r\n\r\n        const ret = {\r\n          timestamp: Number(timestamp),\r\n          all,\r\n          cumulative,\r\n          movingAverageAll,\r\n        };\r\n        PROPS.forEach((prop) => {\r\n          ret[prop] = sumBy(values, prop);\r\n        });\r\n        cumulativeByTs[timestamp] = cumulative;\r\n        return ret;\r\n      })\r\n      .value()\r\n      .filter((item) => item.timestamp >= from);\r\n  }, [feesData]);\r\n\r\n  return [feesChartData, loading, error];\r\n}\r\n\r\nexport function useAumPerformanceData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  groupPeriod,\r\n}) {\r\n  const [feesData, feesLoading] = useFeesData({ from, to, groupPeriod });\r\n  const [slpData, slpLoading] = useSlpData({ from, to, groupPeriod });\r\n  const [volumeData, volumeLoading] = useVolumeData({ from, to, groupPeriod });\r\n\r\n  const dailyCoef = 86400 / groupPeriod;\r\n\r\n  const data = useMemo(() => {\r\n    if (!feesData || !slpData || !volumeData) {\r\n      return null;\r\n    }\r\n\r\n    const ret = feesData.map((feeItem, i) => {\r\n      const slpItem = slpData[i];\r\n      const volumeItem = volumeData[i];\r\n      let apr =\r\n        feeItem?.all && slpItem?.aum\r\n          ? (feeItem.all / slpItem.aum) * 100 * 365 * dailyCoef\r\n          : null;\r\n      if (apr > 10000) {\r\n        apr = null;\r\n      }\r\n      let usage =\r\n        volumeItem?.all && slpItem?.aum\r\n          ? (volumeItem.all / slpItem.aum) * 100 * dailyCoef\r\n          : null;\r\n      if (usage > 10000) {\r\n        usage = null;\r\n      }\r\n\r\n      return {\r\n        timestamp: feeItem.timestamp,\r\n        apr,\r\n        usage,\r\n      };\r\n    });\r\n    const averageApr =\r\n      ret.reduce((memo, item) => item.apr + memo, 0) / ret.length;\r\n    ret.forEach((item) => (item.averageApr = averageApr));\r\n    const averageUsage =\r\n      ret.reduce((memo, item) => item.usage + memo, 0) / ret.length;\r\n    ret.forEach((item) => (item.averageUsage = averageUsage));\r\n    return ret;\r\n  }, [feesData, slpData, volumeData]);\r\n\r\n  return [data, feesLoading || slpLoading || volumeLoading];\r\n}\r\n\r\nexport function useSlpData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const query = `{\r\n    slpStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {period: daily, timestamp_gte: ${from}, timestamp_lte: ${to}}\r\n    ) {\r\n      timestamp\r\n      aumInUsdm\r\n      slpSupply\r\n      distributedUsd\r\n      distributedEth\r\n    }\r\n  }`;\r\n  let [data, loading, error] = useGraph(query, { chainName });\r\n\r\n  let cumulativeDistributedUsdPerSlp = 0;\r\n  let cumulativeDistributedEthPerSlp = 0;\r\n  const slpChartData = useMemo(() => {\r\n    if (!data || (data && data.slpStats.length === 0)) {\r\n      return null;\r\n    }\r\n\r\n    const getTimestamp = (item) => item.timestamp;\r\n\r\n    let prevSlpSupply;\r\n    let prevAum;\r\n\r\n    let ret = sortBy(data.slpStats, (item) => item.timestamp)\r\n      .filter((item) => item.timestamp % 86400 === 0)\r\n      .reduce((memo, item) => {\r\n        const last = memo[memo.length - 1];\r\n\r\n        const aum = Number(item.aumInUsdm) / 1e18;\r\n        const slpSupply = Number(item.slpSupply) / 1e18;\r\n\r\n        const distributedUsd = Number(item.distributedUsd) / 1e30;\r\n        const distributedUsdPerSlp = distributedUsd / slpSupply || 0;\r\n        cumulativeDistributedUsdPerSlp += distributedUsdPerSlp;\r\n\r\n        const distributedEth = Number(item.distributedEth) / 1e18;\r\n        const distributedEthPerSlp = distributedEth / slpSupply || 0;\r\n        cumulativeDistributedEthPerSlp += distributedEthPerSlp;\r\n\r\n        const slpPrice = aum / slpSupply;\r\n        const timestamp = parseInt(item.timestamp);\r\n\r\n        const newItem = {\r\n          timestamp,\r\n          aum,\r\n          slpSupply,\r\n          slpPrice,\r\n          cumulativeDistributedEthPerSlp,\r\n          cumulativeDistributedUsdPerSlp,\r\n          distributedUsdPerSlp,\r\n          distributedEthPerSlp,\r\n        };\r\n\r\n        if (last && last.timestamp === timestamp) {\r\n          memo[memo.length - 1] = newItem;\r\n        } else {\r\n          memo.push(newItem);\r\n        }\r\n\r\n        return memo;\r\n      }, [])\r\n      .map((item) => {\r\n        let { slpSupply, aum } = item;\r\n        if (!slpSupply) {\r\n          slpSupply = prevSlpSupply;\r\n        }\r\n        if (!aum) {\r\n          aum = prevAum;\r\n        }\r\n        item.slpSupplyChange = prevSlpSupply\r\n          ? ((slpSupply - prevSlpSupply) / prevSlpSupply) * 100\r\n          : 0;\r\n        if (item.slpSupplyChange > 1000) item.slpSupplyChange = 0;\r\n        item.aumChange = prevAum ? ((aum - prevAum) / prevAum) * 100 : 0;\r\n        if (item.aumChange > 1000) item.aumChange = 0;\r\n        prevSlpSupply = slpSupply;\r\n        prevAum = aum;\r\n        return item;\r\n      });\r\n\r\n    ret = fillNa(ret);\r\n    return ret;\r\n  }, [data]);\r\n\r\n  return [slpChartData, loading, error];\r\n}\r\n\r\nexport function useSlpPerformanceData(\r\n  slpData,\r\n  feesData,\r\n  { from = FIRST_DATE_TS, chainName = \"fantom\" } = {}\r\n) {\r\n  const [btcPrices] = useCoingeckoPrices(\"BTC\", { from });\r\n  const [ethPrices] = useCoingeckoPrices(\"ETH\", { from });\r\n  const [maticPrices] = useCoingeckoPrices(\"FTM\", { from });\r\n\r\n  const slpPerformanceChartData = useMemo(() => {\r\n    if (!btcPrices || !ethPrices || !slpData || !feesData) {\r\n      return null;\r\n    }\r\n\r\n    const slpDataById = slpData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item;\r\n      return memo;\r\n    }, {});\r\n\r\n    const feesDataById = feesData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item;\r\n      return memo;\r\n    });\r\n\r\n    let BTC_WEIGHT = 0.15;\r\n    let ETH_WEIGHT = 0.2;\r\n    let FTM_WEIGHT = 0.1;\r\n\r\n\r\n    let prevEthPrice = 1200;\r\n    let prevMaticPrice = 0.4;\r\n\r\n    const STABLE_WEIGHT = 0.5;\r\n    const SLP_START_PRICE =\r\n      slpDataById[btcPrices[0].timestamp]?.slpPrice || 1.19;\r\n\r\n    const btcFirstPrice = btcPrices[0]?.value;\r\n    const ethFirstPrice = ethPrices[0]?.value;\r\n    const maticFirstPrice = ( maticPrices && maticPrices[0] && maticPrices[0].value ) || prevMaticPrice;\r\n\r\n    const indexBtcCount = (SLP_START_PRICE * BTC_WEIGHT) / btcFirstPrice;\r\n    const indexEthCount = (SLP_START_PRICE * ETH_WEIGHT) / ethFirstPrice;\r\n    const indexMaticCount = (SLP_START_PRICE * FTM_WEIGHT) / maticFirstPrice;\r\n\r\n    const lpBtcCount = (SLP_START_PRICE * 0.5) / btcFirstPrice;\r\n    const lpEthCount = (SLP_START_PRICE * 0.5) / ethFirstPrice;\r\n    const lpMaticCount = (SLP_START_PRICE * 0.5) / maticFirstPrice;\r\n\r\n    const ret = [];\r\n    let cumulativeFeesPerSlp = 0;\r\n    let cumulativeEsskullRewardsPerSlp = 0;\r\n    let lastSlpPrice = 0;\r\n\r\n    for (let i = 0; i < btcPrices.length; i++) {\r\n      const btcPrice = btcPrices[i].value;\r\n      const ethPrice = ethPrices[i]?.value || prevEthPrice;\r\n      const maticPrice = ( maticPrices && maticPrices[i] && maticPrices[i].value ) || prevMaticPrice;\r\n      prevMaticPrice = maticPrice;\r\n      prevEthPrice = ethPrice;\r\n\r\n      const timestampGroup = parseInt(btcPrices[i].timestamp / 86400) * 86400;\r\n      const slpItem = slpDataById[timestampGroup];\r\n      const slpPrice = slpItem?.slpPrice ?? lastSlpPrice;\r\n      lastSlpPrice = slpPrice;\r\n      const slpSupply = slpDataById[timestampGroup]?.slpSupply;\r\n      const dailyFees = feesDataById[timestampGroup]?.all;\r\n\r\n      const syntheticPrice =\r\n        indexBtcCount * btcPrice +\r\n        indexEthCount * ethPrice +\r\n        indexMaticCount * maticPrice +\r\n        SLP_START_PRICE * STABLE_WEIGHT;\r\n\r\n      const lpBtcPrice =\r\n        (lpBtcCount * btcPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(btcPrice / btcFirstPrice));\r\n      const lpEthPrice =\r\n        (lpEthCount * ethPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(ethPrice / ethFirstPrice));\r\n      const lpMaticPrice =\r\n        (lpMaticCount * maticPrice + SLP_START_PRICE / 2) *\r\n        (1 + getImpermanentLoss(maticPrice / maticFirstPrice));\r\n\r\n      if (dailyFees && slpSupply) {\r\n        const INCREASED_SLP_REWARDS_TIMESTAMP = 1635714000;\r\n        const SLP_REWARDS_SHARE =\r\n          timestampGroup >= INCREASED_SLP_REWARDS_TIMESTAMP ? 0.7 : 0.5;\r\n        const collectedFeesPerSlp =\r\n          (dailyFees / slpSupply) * SLP_REWARDS_SHARE;\r\n        cumulativeFeesPerSlp += collectedFeesPerSlp;\r\n\r\n        cumulativeEsskullRewardsPerSlp += (slpPrice * 0.8) / 365;\r\n      }\r\n\r\n      let slpPlusFees = slpPrice;\r\n      if (slpPrice && slpSupply && cumulativeFeesPerSlp) {\r\n        slpPlusFees = slpPrice + cumulativeFeesPerSlp;\r\n      }\r\n\r\n      let slpApr;\r\n      let slpPlusDistributedUsd;\r\n      let slpPlusDistributedEth;\r\n      if (slpItem) {\r\n        if (slpItem.cumulativeDistributedUsdPerSlp) {\r\n          slpPlusDistributedUsd =\r\n            slpPrice + slpItem.cumulativeDistributedUsdPerSlp;\r\n          // slpApr = slpItem.distributedUsdPerSlp / slpPrice * 365 * 100 // incorrect?\r\n        }\r\n        if (slpItem.cumulativeDistributedEthPerSlp) {\r\n          slpPlusDistributedEth =\r\n            slpPrice + slpItem.cumulativeDistributedEthPerSlp * ethPrice;\r\n        }\r\n      }\r\n\r\n      ret.push({\r\n        timestamp: btcPrices[i].timestamp,\r\n        syntheticPrice,\r\n        lpBtcPrice,\r\n        lpEthPrice,\r\n        lpMaticPrice,\r\n        slpPrice,\r\n        btcPrice,\r\n        ethPrice,\r\n        slpPlusFees,\r\n        slpPlusDistributedUsd,\r\n        slpPlusDistributedEth,\r\n\r\n        performanceLpEth: ((slpPrice / lpEthPrice) * 100).toFixed(1),\r\n        performanceLpEthCollectedFees: (\r\n          (slpPlusFees / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceLpEthDistributedUsd: (\r\n          (slpPlusDistributedUsd / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceLpEthDistributedEth: (\r\n          (slpPlusDistributedEth / lpEthPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        performanceLpBtcCollectedFees: (\r\n          (slpPlusFees / lpBtcPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        performanceSynthetic: ((slpPrice / syntheticPrice) * 100).toFixed(1),\r\n        performanceSyntheticCollectedFees: (\r\n          (slpPlusFees / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceSyntheticDistributedUsd: (\r\n          (slpPlusDistributedUsd / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n        performanceSyntheticDistributedEth: (\r\n          (slpPlusDistributedEth / syntheticPrice) *\r\n          100\r\n        ).toFixed(1),\r\n\r\n        slpApr,\r\n      });\r\n    }\r\n\r\n    return ret;\r\n  }, [btcPrices, ethPrices, slpData, feesData]);\r\n\r\n  return [slpPerformanceChartData];\r\n}\r\n\r\nexport function useReferralsData({\r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  chainName = \"fantom\",\r\n} = {}) {\r\n  const query = `{\r\n    globalStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n    ) {\r\n      volume\r\n      volumeCumulative\r\n      totalRebateUsd\r\n      totalRebateUsdCumulative\r\n      discountUsd\r\n      discountUsdCumulative\r\n      referrersCount\r\n      referrersCountCumulative\r\n      referralCodesCount\r\n      referralCodesCountCumulative\r\n      referralsCount\r\n      referralsCountCumulative\r\n      timestamp\r\n    }\r\n  }`;\r\n\r\n  const subgraph = process.env.RAZZLE_REFERRAL_SUBGRAPH_URL;\r\n  const [graphData, loading, error] = useGraph(query, { subgraph });\r\n\r\n  const data = graphData\r\n    ? sortBy(graphData.globalStats, \"timestamp\").map((item) => {\r\n        const totalRebateUsd = item.totalRebateUsd / 1e30;\r\n        const discountUsd = item.discountUsd / 1e30;\r\n        return {\r\n          ...item,\r\n          volume: item.volume / 1e30,\r\n          volumeCumulative: item.volumeCumulative / 1e30,\r\n          totalRebateUsd,\r\n          totalRebateUsdCumulative: item.totalRebateUsdCumulative / 1e30,\r\n          discountUsd,\r\n          referrerRebateUsd: totalRebateUsd - discountUsd,\r\n          discountUsdCumulative: item.discountUsdCumulative / 1e30,\r\n          referralCodesCount: parseInt(item.referralCodesCount),\r\n          referralCodesCountCumulative: parseInt(\r\n            item.referralCodesCountCumulative\r\n          ),\r\n          referrersCount: parseInt(item.referrersCount),\r\n          referrersCountCumulative: parseInt(item.referrersCountCumulative),\r\n          referralsCount: parseInt(item.referralsCount),\r\n          referralsCountCumulative: parseInt(item.referralsCountCumulative),\r\n        };\r\n      })\r\n    : null;\r\n\r\n  return [data, loading, error];\r\n}\r\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport * as ethers from \"ethers\";\r\nimport moment from \"moment\";\r\nimport { RiLoader5Fill } from \"react-icons/ri\";\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatter,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  formatNumber,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS\r\n} from \"../helpers\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie,\r\n} from \"recharts\";\r\n\r\nimport ChartWrapper from \"../components/ChartWrapper\";\r\nimport VolumeChart from \"../components/VolumeChart\";\r\nimport FeesChart from \"../components/FeesChart\";\r\nimport GenericChart from \"../components/GenericChart\";\r\n\r\nimport {\r\n  useVolumeData,\r\n  useTotalVolumeFromServer,\r\n  useVolumeDataFromServer,\r\n  useFeesData,\r\n  useSlpData,\r\n  useAumPerformanceData,\r\n  useCoingeckoPrices,\r\n  useSlpPerformanceData,\r\n  useTradersData,\r\n  useSwapSources,\r\n  useFundingRateData,\r\n  useUsersData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock,\r\n} from \"../dataProvider\";\r\n\r\nconst { BigNumber } = ethers;\r\nconst { formatUnits } = ethers.utils;\r\nconst NOW = Math.floor(Date.now() / 1000);\r\n\r\nfunction Fantom(props) {\r\n  const DEFAULT_GROUP_PERIOD = 86400;\r\n  const [groupPeriod, setGroupPeriod] = useState(DEFAULT_GROUP_PERIOD);\r\n\r\n  const [fromValue, setFromValue] = useState();\r\n  const [toValue, setToValue] = useState();\r\n\r\n  const { mode } = props;\r\n\r\n  const setDateRange = useCallback(\r\n    (range) => {\r\n      setFromValue(\r\n        new Date(Date.now() - range * 1000).toISOString().slice(0, 10)\r\n      );\r\n      setToValue(undefined);\r\n    },\r\n    [setFromValue, setToValue]\r\n  );\r\n\r\n  const from = fromValue ? +new Date(fromValue) / 1000 : undefined;\r\n  const to = toValue ? +new Date(toValue) / 1000 : NOW;\r\n\r\n  const params = { from, to, groupPeriod };\r\n\r\n  const [fundingRateData, fundingRateLoading] = useFundingRateData(params);\r\n  // const [volumeData, volumeLoading] = useVolumeDataFromServer(params);\r\n  const [volumeData, totalVolume, volumeLoading] = useVolumeData(params);\r\n  //const [totalVolume] = useTotalVolumeFromServer();\r\n  const totalVolumeDelta = useMemo(() => {\r\n    if (!volumeData || volumeData.length == 0) {\r\n      return null;\r\n    }\r\n    return volumeData[volumeData.length - 1].all;\r\n  }, [volumeData]);\r\n\r\n  const [feesData, feesLoading] = useFeesData(params);\r\n  const [totalFees, totalFeesDelta] = useMemo(() => {\r\n    if (!feesData) {\r\n      return [];\r\n    }\r\n    const total = feesData[feesData.length - 1]?.cumulative;\r\n    const delta = total - feesData[feesData.length - 2]?.cumulative;\r\n    return [total, delta];\r\n  }, [feesData]);\r\n\r\n  const [slpData, slpLoading] = useSlpData(params);\r\n  const [totalAum, totalAumDelta] = useMemo(() => {\r\n    if (!slpData) {\r\n      return [];\r\n    }\r\n    const total = slpData[slpData.length - 1]?.aum;\r\n    const delta = total - slpData[slpData.length - 2]?.aum;\r\n    return [total, delta];\r\n  }, [slpData]);\r\n\r\n  const [aumPerformanceData, aumPerformanceLoading] =\r\n    useAumPerformanceData(params);\r\n\r\n  const [slpPerformanceData, slpPerformanceLoading] = useSlpPerformanceData(\r\n    slpData,\r\n    feesData,\r\n    params\r\n  );\r\n\r\n  const [tradersData, tradersLoading] = useTradersData(params);\r\n  const [openInterest, openInterestDelta] = useMemo(() => {\r\n    if (!tradersData) {\r\n      return [];\r\n    }\r\n    const total = tradersData.data[tradersData.data.length - 1]?.openInterest;\r\n    const delta =\r\n      total - tradersData.data[tradersData.data.length - 2]?.openInterest;\r\n    return [total, delta];\r\n  }, [tradersData]);\r\n  const [swapSources, swapSourcesLoading] = useSwapSources(params);\r\n  const swapSourcesKeys = Object.keys(\r\n    (swapSources || []).reduce((memo, el) => {\r\n      Object.keys(el).forEach((key) => {\r\n        if (key === \"all\" || key === \"timestamp\") return;\r\n        memo[key] = true;\r\n      });\r\n      return memo;\r\n    }, {})\r\n  );\r\n\r\n  const [usersData, usersLoading] = useUsersData(params);\r\n  const [totalUsers, totalUsersDelta] = useMemo(() => {\r\n    if (!usersData) {\r\n      return [null, null];\r\n    }\r\n    const total = usersData[usersData.length - 1]?.uniqueCountCumulative;\r\n    const prevTotal = usersData[usersData.length - 2]?.uniqueCountCumulative;\r\n    const delta = total && prevTotal ? total - prevTotal : null;\r\n    return [total, delta];\r\n  }, [usersData]);\r\n\r\n  const [lastSubgraphBlock] = useLastSubgraphBlock();\r\n  const [lastBlock] = useLastBlock();\r\n\r\n  const isObsolete =\r\n    lastSubgraphBlock &&\r\n    lastBlock &&\r\n    lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600;\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false);\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem(\"experiment\"));\r\n  }, [setIsExperiment]);\r\n\r\n  const showForm = false;\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Analytics / Fantom</h1>\r\n      {lastSubgraphBlock && lastBlock && (\r\n        <p\r\n          className={cx(\"page-description\", { warning: isObsolete })}\r\n          style={{ marginTop: \"-1rem\" }}\r\n        >\r\n          {isObsolete && \"Data is obsolete. \"}\r\n          Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n          &nbsp;at block{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://ftmscan.com/block/${lastSubgraphBlock.number}`}\r\n          >\r\n            {lastSubgraphBlock.number}\r\n          </a>\r\n        </p>\r\n      )}\r\n      {showForm && (\r\n        <div className=\"form\">\r\n          <p>\r\n            <label>Period</label>\r\n            <input\r\n              type=\"date\"\r\n              value={fromValue}\r\n              onChange={(evt) => setFromValue(evt.target.value)}\r\n            />\r\n            &nbsp;—&nbsp;\r\n            <input\r\n              type=\"date\"\r\n              value={toValue}\r\n              onChange={(evt) => setToValue(evt.target.value)}\r\n            />\r\n            <button onClick={(evt) => setDateRange(86400 * 29)}>30 days</button>\r\n            <button onClick={(evt) => setDateRange(86400 * 6)}>7 days</button>\r\n          </p>\r\n        </div>\r\n      )}\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {totalVolume ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Volume</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalVolume, { currency: true })}\r\n                {totalVolumeDelta && (\r\n                  <span\r\n                    className=\"total-stat-delta plus\"\r\n                    title=\"Change since previous day\"\r\n                  >\r\n                    +\r\n                    {formatNumber(totalVolumeDelta, {\r\n                      currency: true,\r\n                      compact: true,\r\n                    })}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : volumeLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Volume</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalFees ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Fees</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalFees, { currency: true })}\r\n                <span\r\n                  className=\"total-stat-delta plus\"\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  +\r\n                  {formatNumber(totalFeesDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : feesLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Fees</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalAum ? (\r\n            <>\r\n              <div className=\"total-stat-label\">SLP Pool</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalAum, { currency: true })}\r\n                <span\r\n                  className={cx(\r\n                    \"total-stat-delta\",\r\n                    totalAumDelta > 0 ? \"plus\" : \"minus\"\r\n                  )}\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  {totalAumDelta > 0 ? \"+\" : \"\"}\r\n                  {formatNumber(totalAumDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalUsers ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Users</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(totalUsers)}\r\n                <span\r\n                  className=\"total-stat-delta plus\"\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  +{formatNumber(totalUsersDelta)}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : usersLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Total Users</div>\r\n              <div className=\"total-stat-value\">{formatNumber(0)}</div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {openInterest ? (\r\n            <>\r\n              <div className=\"total-stat-label\">Open Interest</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(openInterest, { currency: true })}\r\n                <span\r\n                  className={cx(\r\n                    \"total-stat-delta\",\r\n                    openInterestDelta > 0 ? \"plus\" : \"minus\"\r\n                  )}\r\n                  title=\"Change since previous day\"\r\n                >\r\n                  {openInterestDelta > 0 ? \"+\" : \"\"}\r\n                  {formatNumber(openInterestDelta, {\r\n                    currency: true,\r\n                    compact: true,\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : tradersLoading ? (\r\n            <RiLoader5Fill size=\"3em\" className=\"loader\" />\r\n          ) : (\r\n            <>\r\n              <div className=\"total-stat-label\">Open Interest</div>\r\n              <div className=\"total-stat-value\">\r\n                {formatNumber(0, { currency: true })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <VolumeChart\r\n            data={volumeData}\r\n            loading={volumeLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            yaxisTickFormatter={yaxisFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n            tooltipFormatter={tooltipFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <FeesChart\r\n            data={feesData}\r\n            loading={feesLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            yaxisTickFormatter={yaxisFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n            tooltipFormatter={tooltipFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"SKULL & Slp Supply\"\r\n            loading={slpLoading}\r\n            data={slpData}\r\n            csvFields={[{ key: \"aum\" }, { key: \"slpSupply\" }]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"aum\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  unit=\"$\"\r\n                  dot={false}\r\n                  dataKey=\"aum\"\r\n                  stackId=\"a\"\r\n                  name=\"SKULL\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  dataKey=\"slpSupply\"\r\n                  stackId=\"a\"\r\n                  name=\"SLP Supply\"\r\n                  stroke={COLORS[1]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>\r\n\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Slp Performance\"\r\n            loading={slpLoading}\r\n            data={slpPerformanceData}\r\n            csvFields={[\r\n              { key: \"syntheticPrice\" },\r\n              { key: \"slpPrice\" },\r\n              { key: \"slpPlusFees\" },\r\n              { key: \"lpBtcPrice\" },\r\n              { key: \"lpEthPrice\" },\r\n              { key: \"performanceSyntheticCollectedFees\" },\r\n              { key: \"indexBtcCount\" },\r\n              { key: \"indexEthCount\" },\r\n              { key: \"indexAvaxCount\" },\r\n              { key: \"indexStableCount\" },\r\n              { key: \"BTC_WEIGHT\" },\r\n              { key: \"ETH_WEIGHT\" },\r\n              { key: \"FTM_WEIGHT\" },\r\n              { key: \"STABLE_WEIGHT\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  domain={[80, 180]}\r\n                  unit=\"%\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceLpBtcCollectedFees\"\r\n                  name=\"% LP BTC-USDC (w/ fees)\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceLpEthCollectedFees\"\r\n                  name=\"% LP ETH-USDC (w/ fees)\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  name=\"% Index (w/ fees)\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{ color: COLORS[0] }}>% of Index (with fees)</span>{\" \"}\r\n                is SLP with fees / Index Price * 100. Index is a basket of 25%\r\n                BTC, 25% ETH, 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n                <br />\r\n                <span style={{ color: COLORS[4] }}>\r\n                  % of LP ETH-USDC (with fees)\r\n                </span>{\" \"}\r\n                is SLP Price with fees / LP ETH-USDC * 100\r\n                <br />\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Slp Price Comparison\"\r\n            loading={slpLoading}\r\n            data={slpPerformanceData}\r\n            csvFields={[\r\n              { key: \"syntheticPrice\" },\r\n              { key: \"slpPrice\" },\r\n              { key: \"slpPlusFees\" },\r\n              { key: \"lpBtcPrice\" },\r\n              { key: \"lpEthPrice\" },\r\n              { key: \"performanceSyntheticCollectedFees\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  domain={[60, 210]}\r\n                  unit=\"%\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <YAxis\r\n                  dataKey=\"slpPrice\"\r\n                  domain={[0.4, 1.7]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatterNumber}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceLpBtcCollectedFees\"\r\n                  name=\"% LP BTC-USDC (w/ fees)\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceLpEthCollectedFees\"\r\n                  name=\"% LP ETH-USDC (w/ fees)\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n                <Line\r\n                  dot={false}\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"%\"\r\n                  strokeWidth={2}\r\n                  dataKey=\"performanceSyntheticCollectedFees\"\r\n                  name=\"% Index (w/ fees)\"\r\n                  stroke={COLORS[0]}\r\n                />\r\n\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"syntheticPrice\"\r\n                  name=\"Index Price\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"slpPrice\"\r\n                  name=\"Slp Price\"\r\n                  stroke={COLORS[1]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"slpPlusFees\"\r\n                  name=\"Slp w/ fees\"\r\n                  stroke={COLORS[3]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"lpBtcPrice\"\r\n                  name=\"LP BTC-USDC\"\r\n                  stroke={COLORS[2]}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"monotone\"\r\n                  unit=\"$\"\r\n                  strokeWidth={1}\r\n                  yAxisId=\"right\"\r\n                  dot={false}\r\n                  dataKey=\"lpEthPrice\"\r\n                  name=\"LP ETH-USDC\"\r\n                  stroke={COLORS[4]}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{ color: COLORS[3] }}>Slp with fees</span> is\r\n                based on SLP share of fees received\r\n                {/* based on SLP share of fees received and excluding esSKULL rewards */}\r\n                <br />\r\n                <span style={{ color: COLORS[0] }}>\r\n                  % of Index (with fees)\r\n                </span>{\" \"}\r\n                is Slp with fees / Index Price * 100\r\n                <br />\r\n                <span style={{ color: COLORS[4] }}>\r\n                  % of LP ETH-USDC (with fees)\r\n                </span>{\" \"}\r\n                is Slp Price with fees / LP ETH-USDC * 100\r\n                <br />\r\n                <span style={{ color: COLORS[2] }}>Index Price</span> is 25%\r\n                BTC, 25% ETH, 50% USDC\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        {isExperiment && (\r\n          <div className=\"chart-cell experiment\">\r\n            <ChartWrapper title=\"Performance vs. Index\" loading={slpLoading}>\r\n              <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n                <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                  <CartesianGrid strokeDasharray=\"10 10\" />\r\n                  <XAxis\r\n                    dataKey=\"timestamp\"\r\n                    tickFormatter={tooltipLabelFormatter}\r\n                    minTickGap={30}\r\n                  />\r\n                  <YAxis\r\n                    dataKey=\"performanceSyntheticCollectedFees\"\r\n                    domain={[80, 120]}\r\n                    unit=\"%\"\r\n                    tickFormatter={yaxisFormatterNumber}\r\n                    width={YAXIS_WIDTH}\r\n                  />\r\n                  <Tooltip\r\n                    formatter={tooltipFormatterNumber}\r\n                    labelFormatter={tooltipLabelFormatter}\r\n                    contentStyle={{ textAlign: \"left\" }}\r\n                  />\r\n                  <Legend />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticCollectedFees\"\r\n                    name=\"Collected Fees\"\r\n                    stroke={COLORS[0]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticDistributedUsd\"\r\n                    name=\"Distributed Usd\"\r\n                    stroke={COLORS[1]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSyntheticDistributedEth\"\r\n                    name=\"Distributed Eth\"\r\n                    stroke={COLORS[2]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceSynthetic\"\r\n                    name=\"No Fees\"\r\n                    stroke={COLORS[3]}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </ChartWrapper>\r\n          </div>\r\n        )}\r\n        {isExperiment && (\r\n          <div className=\"chart-cell experiment\">\r\n            <ChartWrapper title=\"Performance vs. ETH LP\" loading={slpLoading}>\r\n              <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n                <LineChart data={slpPerformanceData} syncId=\"syncSlp\">\r\n                  <CartesianGrid strokeDasharray=\"10 10\" />\r\n                  <XAxis\r\n                    dataKey=\"timestamp\"\r\n                    tickFormatter={tooltipLabelFormatter}\r\n                    minTickGap={30}\r\n                  />\r\n                  <YAxis\r\n                    dataKey=\"performanceLpEthCollectedFees\"\r\n                    domain={[80, 120]}\r\n                    unit=\"%\"\r\n                    tickFormatter={yaxisFormatterNumber}\r\n                    width={YAXIS_WIDTH}\r\n                  />\r\n                  <Tooltip\r\n                    formatter={tooltipFormatterNumber}\r\n                    labelFormatter={tooltipLabelFormatter}\r\n                    contentStyle={{ textAlign: \"left\" }}\r\n                  />\r\n                  <Legend />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthCollectedFees\"\r\n                    name=\"Collected Fees\"\r\n                    stroke={COLORS[0]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthDistributedUsd\"\r\n                    name=\"Distributed Usd\"\r\n                    stroke={COLORS[1]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEthDistributedEth\"\r\n                    name=\"Distributed Eth\"\r\n                    stroke={COLORS[2]}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    unit=\"%\"\r\n                    strokeWidth={2}\r\n                    dataKey=\"performanceLpEth\"\r\n                    name=\"No Fees\"\r\n                    stroke={COLORS[3]}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </ChartWrapper>\r\n          </div>\r\n        )}\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Net PnL\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[\r\n              { key: \"pnl\", name: \"Net PnL\" },\r\n              { key: \"pnlCumulative\", name: \"Cumulative PnL\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer\r\n              width=\"100%\"\r\n              syncId=\"tradersId\"\r\n              height={CHART_HEIGHT}\r\n            >\r\n              <ComposedChart data={tradersData?.data}>\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxAbsOfPnlAndCumulativePnl * 1.05,\r\n                    tradersData?.stats.maxAbsOfPnlAndCumulativePnl * 1.05,\r\n                  ]}\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill={mode == \"dark\" ? \"#FFFFFF\" : \"#000000\"}\r\n                  dot={false}\r\n                  dataKey=\"pnl\"\r\n                  name=\"Net PnL\"\r\n                >\r\n                  {(tradersData?.data || []).map((item, i) => {\r\n                    return (\r\n                      <Cell\r\n                        key={`cell-${i}`}\r\n                        fill={item.pnl > 0 ? \"#22c761\" : \"#f93333\"}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Bar>\r\n                <Line\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  stroke={COLORS[4]}\r\n                  dataKey=\"pnlCumulative\"\r\n                  name=\"Cumulative PnL\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Profit vs. Loss\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[\r\n              { key: \"profit\" },\r\n              { key: \"loss\" },\r\n              { key: \"profitCumulative\" },\r\n              { key: \"lossCumulative\" },\r\n            ]}\r\n          >\r\n            <ResponsiveContainer\r\n              width=\"100%\"\r\n              syncId=\"tradersId\"\r\n              height={CHART_HEIGHT}\r\n            >\r\n              <ComposedChart data={tradersData?.data} barGap={0}>\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  tickFormatter={tooltipLabelFormatter}\r\n                  minTickGap={30}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxProfitLoss * 1.05,\r\n                    tradersData?.stats.maxProfitLoss * 1.05,\r\n                  ]}\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <YAxis\r\n                  domain={[\r\n                    -tradersData?.stats.maxCumulativeProfitLoss * 1.1,\r\n                    tradersData?.stats.maxCumulativeProfitLoss * 1.1,\r\n                  ]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: \"left\" }}\r\n                />\r\n                <Legend />\r\n                <Area\r\n                  yAxisId=\"right\"\r\n                  type=\"monotone\"\r\n                  stroke={0}\r\n                  fill=\"#22c761\"\r\n                  fillOpacity=\"0.4\"\r\n                  dataKey=\"profitCumulative\"\r\n                  name=\"Cumulative Profit\"\r\n                />\r\n                <Area\r\n                  yAxisId=\"right\"\r\n                  type=\"monotone\"\r\n                  stroke={0}\r\n                  fill=\"#f93333\"\r\n                  fillOpacity=\"0.4\"\r\n                  dataKey=\"lossCumulative\"\r\n                  name=\"Cumulative Loss\"\r\n                />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill=\"#22c761\"\r\n                  dot={false}\r\n                  dataKey=\"profit\"\r\n                  name=\"Profit\"\r\n                />\r\n                <Bar\r\n                  type=\"monotone\"\r\n                  fill=\"#f93333\"\r\n                  dot={false}\r\n                  dataKey=\"loss\"\r\n                  name=\"Loss\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={fundingRateLoading}\r\n            title=\"Borrowing Rate Annualized\"\r\n            data={fundingRateData}\r\n            yaxisDataKey=\"ETH\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[\r\n              { key: \"FTM\", color: \"#7C43DA\" },\r\n              { key: \"ETH\", color: \"#6185F5\" },\r\n              { key: \"BTC\", color: \"#F7931A\" },\r\n              { key: \"USDC\", color: \"#2775CA\" },\r\n              { key: \"USDT\", color: \"#67B18A\" },\r\n              { key: \"DAI\", color: \"#FAC044\" },\r\n            ]}\r\n            type=\"Line\"\r\n            yaxisDomain={[0, 90 /* ~87% is a maximum yearly borrow rate */]}\r\n            isCoinChart={true}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={tradersLoading}\r\n            title=\"Open Interest\"\r\n            data={tradersData?.data.map((item) => ({\r\n              all: item.openInterest,\r\n              ...item,\r\n            }))}\r\n            yaxisDataKey=\"openInterest\"\r\n            items={[\r\n              { key: \"shortOpenInterest\", name: \"Short\", color: \"#f93333\" },\r\n              { key: \"longOpenInterest\", name: \"Long\", color: \"#22c761\" },\r\n            ]}\r\n            type=\"Bar\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={aumPerformanceLoading}\r\n            title=\"SKULL Performance Annualized\"\r\n            data={aumPerformanceData}\r\n            yaxisDataKey=\"apr\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[{ key: \"apr\", name: \"APR\", color: COLORS[0] }]}\r\n            description=\"Formula = Daily Fees / SLP Pool * 365 days * 100\"\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={aumPerformanceLoading}\r\n            title=\"SKULL Daily Usage\"\r\n            data={aumPerformanceData}\r\n            yaxisDataKey=\"usage\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[{ key: \"usage\", name: \"Daily Usage\", color: COLORS[4] }]}\r\n            description=\"Formula = Daily Volume / SLP Pool * 100\"\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"Unique Users\"\r\n            data={usersData}\r\n            yaxisDataKey=\"uniqueSum\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"uniqueSwapCount\", name: \"Swaps\" },\r\n              { key: \"uniqueMarginCount\", name: \"Margin trading\" },\r\n              { key: \"uniqueMintBurnCount\", name: \"Mint & Burn SLP\" },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"New Users\"\r\n            data={usersData?.map((item) => ({ ...item, all: item.newCount }))}\r\n            yaxisDataKey=\"newCount\"\r\n            rightYaxisDataKey=\"uniqueCountCumulative\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"newSwapCount\", name: \"Swap\" },\r\n              { key: \"newMarginCount\", name: \"Margin trading\" },\r\n              { key: \"newMintBurnCount\", name: \"Mint & Burn\" },\r\n              {\r\n                key: \"uniqueCountCumulative\",\r\n                name: \"Cumulative\",\r\n                type: \"Line\",\r\n                yAxisId: \"right\",\r\n                strokeWidth: 2,\r\n                color: COLORS[4],\r\n              },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"New vs. Existing Users\"\r\n            data={usersData?.map((item) => ({\r\n              ...item,\r\n              all: item.uniqueCount,\r\n            }))}\r\n            yaxisDataKey=\"uniqueCount\"\r\n            rightYaxisDataKey=\"oldPercent\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"newCount\", name: \"New\" },\r\n              { key: \"oldCount\", name: \"Existing\" },\r\n              {\r\n                key: \"oldPercent\",\r\n                name: \"Existing %\",\r\n                yAxisId: \"right\",\r\n                type: \"Line\",\r\n                strokeWidth: 2,\r\n                color: COLORS[4],\r\n                unit: \"%\",\r\n              },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncSlp\"\r\n            loading={usersLoading}\r\n            title=\"User Actions\"\r\n            data={(usersData || []).map((item) => ({\r\n              ...item,\r\n              all: item.actionCount,\r\n            }))}\r\n            yaxisDataKey=\"actionCount\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: \"actionSwapCount\", name: \"Swaps\" },\r\n              { key: \"actionMarginCount\", name: \"Margin trading\" },\r\n              { key: \"actionMintBurnCount\", name: \"Mint & Burn SLP\" },\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={swapSourcesLoading}\r\n            title=\"Swap Sources\"\r\n            data={swapSources}\r\n            items={swapSourcesKeys.map((key) => ({ key }))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fantom;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport moment from 'moment'\r\nimport { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatterNumber,\r\n  formatNumber,\r\n  COLORS\r\n} from '../helpers'\r\n\r\nimport GenericChart from '../components/GenericChart'\r\n\r\nimport {\r\n  useReferralsData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock\r\n} from '../dataProvider'\r\n\r\nconst NOW = Math.floor(Date.now() / 1000)\r\n\r\nfunction Referrals(props) {\r\n  const [fromValue, setFromValue] = useState()\r\n  const [toValue, setToValue] = useState()\r\n\r\n\r\n  const from = fromValue ? +new Date(fromValue) / 1000 : undefined\r\n  const to = toValue ? +new Date(toValue) / 1000 : NOW\r\n  const params = { from, to, chainName: props.match?.params?.chainName || 'fantom' }\r\n\r\n  const [referralsData, referralsLoading] = useReferralsData(params)\r\n  const stats = useMemo(() => {\r\n    if (!referralsData) {\r\n      return null\r\n    }\r\n    const totalVolume = referralsData[referralsData.length - 1]?.volumeCumulative\r\n    const prevTotalVolume = referralsData[referralsData.length - 2]?.volumeCumulative\r\n    const totalVolumeDelta = totalVolume && prevTotalVolume ? totalVolume - prevTotalVolume : null\r\n\r\n    const totalDiscountUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalDiscountUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalDiscountUsdDelta = totalDiscountUsd && prevTotalDiscountUsd ? totalDiscountUsd - prevTotalDiscountUsd : null\r\n\r\n    const totalReferrerRebateUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalReferrerRebateUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalReferrerRebateUsdDelta = totalReferrerRebateUsd && prevTotalReferrerRebateUsd ? totalReferrerRebateUsd - prevTotalReferrerRebateUsd : null\r\n\r\n    const totalReferrersCount = referralsData[referralsData.length - 1]?.referrersCountCumulative\r\n    const prevTotalReferrersCount = referralsData[referralsData.length - 2]?.referrersCountCumulative\r\n    const totalReferrersCountDelta = totalReferrersCount && prevTotalReferrersCount ? totalReferrersCount - prevTotalReferrersCount : null\r\n\r\n    const totalReferralsCount = referralsData[referralsData.length - 1]?.referralsCountCumulative\r\n    const prevTotalReferralsCount = referralsData[referralsData.length - 2]?.referralsCountCumulative\r\n    const totalReferralsCountDelta = totalReferralsCount && prevTotalReferralsCount ? totalReferralsCount - prevTotalReferralsCount : null\r\n\r\n    return {\r\n      totalVolume,\r\n      totalVolumeDelta,\r\n      totalDiscountUsd,\r\n      totalDiscountUsdDelta,\r\n      totalReferrerRebateUsd,\r\n      totalReferrerRebateUsdDelta,\r\n      totalReferrersCount,\r\n      totalReferrersCountDelta,\r\n      totalReferralsCount,\r\n      totalReferralsCountDelta\r\n    }\r\n  }, [referralsData])\r\n\r\n  const [lastSubgraphBlock] = useLastSubgraphBlock()\r\n  const [lastBlock] = useLastBlock()\r\n\r\n  const isObsolete = lastSubgraphBlock && lastBlock && lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false)\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem('experiment'))\r\n  }, [setIsExperiment])\r\n\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Analytics / Referrals</h1>\r\n      {lastSubgraphBlock && lastBlock &&\r\n        <p className={cx('page-description', { warning: isObsolete })} style={{ marginTop: '-1rem' }}>\r\n          {isObsolete && \"Data is obsolete. \"}\r\n          Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n          &nbsp;at block <a target=\"_blank\" rel=\"noreferrer\" href={`https://arbiscan.io/block/${lastSubgraphBlock.number}`}>{lastSubgraphBlock.number}</a>\r\n        </p>\r\n      }\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referral Volume</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalVolume, {currency: true})}\r\n              {stats.totalVolumeDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalVolumeDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Traders Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalDiscountUsd, {currency: true})}\r\n              {stats.totalDiscountUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalDiscountUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalReferrerRebateUsd, {currency: true})}\r\n              {stats.totalReferrerRebateUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalReferrerRebateUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Registered</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferrersCount}\r\n              {stats.totalReferrersCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferrersCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referrals Registrations</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferralsCount}\r\n              {stats.totalReferralsCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferralsCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Volume\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"volume\"\r\n              rightYaxisDataKey=\"volumeCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'volume', name: 'Daily', unit: '$' },\r\n                {\r\n                  key: 'volumeCumulative',\r\n                  name: 'Cumulative',\r\n                  type: 'Line',\r\n                  yAxisId: 'right',\r\n                  strokeWidth: 2,\r\n                  color: COLORS[4],\r\n                  unit: '$'\r\n                }\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Volume generated by registered referrals\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Rebates\"\r\n              data={referralsData?.map(item => ({ all: item.totalRebateUsd.toFixed(2), ...item }))}\r\n              yaxisDataKey=\"totalRebateUsd\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'discountUsd', name: 'Discount', unit: '$' },\r\n                { key: 'referrerRebateUsd', name: 'Rebates', unit: '$' }\r\n              ]}\r\n              type=\"Bar\"\r\n              description=\"Rebates go to Affiliates, Discount go to Traders\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Registered Affiliates\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referrersCount\"\r\n              rightYaxisDataKey=\"referrersCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referrersCount', type: 'Bar', name: 'Daily'},\r\n                {\r\n                  key: 'referrersCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Affiliates',\r\n                  color: COLORS[4]\r\n                },\r\n              ]}\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncSlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Registrations\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referralsCount\"\r\n              rightYaxisDataKey=\"referralsCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referralsCount', type: 'Bar', name: 'Daily'},\r\n                {\r\n                  key: 'referralsCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Referrals',\r\n                  color: COLORS[4]\r\n                },\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Traders registrations with referral code\"\r\n            />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Referrals;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport * as strftime from 'strftime'\r\n\r\nimport { urlWithParams, tsToIso } from '../helpers'\r\nimport { useRequest } from '../dataProvider'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart\r\n} from 'recharts';\r\n\r\nconst { BigNumber } = ethers\r\nconst { formatUnits} = ethers.utils\r\n\r\n\r\nfunction Trading() {\r\n  const [from, setFrom] = useState(tsToIso(Date.now() - 86400000 * 3))\r\n  const [to, setTo] = useState()\r\n\r\n  const fromTs = +new Date(from) / 1000\r\n  const toTs = to ?? +new Date(to) / 1000\r\n\r\n  const params = {from: fromTs, to: toTs}\r\n  const [btcData] = useRequest(urlWithParams(`/api/prices/BTC`, params), [])\r\n  const [ethData] = useRequest(urlWithParams(`/api/prices/ETH`, params), [])\r\n  const [bnbData] = useRequest(urlWithParams(`/api/prices/BNB`, params), [])\r\n\r\n  const assetChartData = useMemo(() => {\r\n    const all = {}\r\n    const options = [\r\n      ['BTC', btcData],\r\n      ['ETH', ethData],\r\n      ['BNB', bnbData]\r\n    ]\r\n\r\n    options.forEach(([name, assetData]) => {\r\n      if (!assetData || assetData.length === 0) {\r\n        return\r\n      }\r\n      let maxPrice = 0\r\n      let minPrice = Infinity\r\n      all[name] = {\r\n        data: assetData.map(item => {\r\n          const price = item.price / 1e8\r\n          if (price > maxPrice) {\r\n            maxPrice = price\r\n          }\r\n          if (price < minPrice) {\r\n            minPrice = price\r\n          }\r\n          return {\r\n            date: new Date(item.timestamp * 1000),\r\n            price: price,\r\n            poolAmount: item.poolAmount\r\n          }\r\n        })\r\n      }\r\n      all[name].maxPrice = maxPrice\r\n      all[name].minPrice = minPrice\r\n    })\r\n\r\n    return all\r\n  }, [btcData, ethData, bnbData])\r\n\r\n  const [pnlData] = useRequest(urlWithParams('/api/marginPnl', params), [])\r\n  const pnlChartData = useMemo(() => {\r\n    return pnlData.map(item => {\r\n      if (!item.metrics) {\r\n        return {\r\n          date: new Date(item.timestamp * 1000)\r\n        }\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        net: item.metrics.net,\r\n        profits: item.metrics.profits,\r\n        loss: item.metrics.loss,\r\n        long: item.metrics.long,\r\n        short: item.metrics.short,\r\n      } \r\n    })\r\n  }, [pnlData])\r\n  const pnlMin = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].loss : 0\r\n  const pnlMax = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].profits : 0\r\n\r\n  const [liquidationsData] = useRequest(urlWithParams('api/liquidations', {from: fromTs, to: toTs}), [])\r\n  const liquidationsChartData = useMemo(() => {\r\n    let cum = 0\r\n    let longCum = 0\r\n    let shortCum = 0\r\n    return liquidationsData.map(item => {\r\n      const collateral = item.collateral || 0\r\n      cum += collateral\r\n      if (item.isLong) {\r\n        longCum += collateral\r\n      } else {\r\n        shortCum += collateral\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        collateral: cum,\r\n        long: longCum,\r\n        short: shortCum\r\n      }\r\n    })\r\n  }, [liquidationsData])\r\n\r\n  const [feesData] = useRequest(urlWithParams('/api/fees', { disableGrouping: 1, ...params }), [])\r\n  const feesChartData = useMemo(() => {\r\n    const cum = {}\r\n    return feesData.map(item => {\r\n      cum[item.type] = (cum[item.type] || 0) + item.value\r\n      const all = Object.values(cum).reduce((sum, value) => sum + value)\r\n      return {\r\n        ...cum,\r\n        all,\r\n        date: new Date(item.timestamp * 1000)\r\n      }\r\n    })\r\n  }, [feesData])\r\n\r\n  const [swapSourcesData] = useRequest(urlWithParams('/api/swapSources', { period: 3600, rawSource: 1, ...params }), [])\r\n  const swapSourcesFilteredKeys = useMemo(() => {\r\n    if (swapSourcesData.length === 0) {\r\n      return []\r\n    }\r\n    const count = {}\r\n    swapSourcesData.forEach(item => {\r\n      if (!item.metrics) {\r\n        return\r\n      }\r\n      Object.keys(item.metrics).forEach(key => {\r\n        count[key] = (count[key] || 0) + 1\r\n      })\r\n    })\r\n\r\n    return Object.keys(count).filter(key => count[key] > 1)\r\n  }, [swapSourcesData])\r\n  const swapSourcesChartData = useMemo(() => {\r\n    if (swapSourcesFilteredKeys.length === 0) {\r\n      return []\r\n    }\r\n\r\n    let cum = {}\r\n    return swapSourcesData.map(item => {\r\n      let all = 0\r\n      swapSourcesFilteredKeys.forEach(key => {\r\n        if (item.metrics && item.metrics[key]) {\r\n          cum[key] = (cum[key] || 0) + item.metrics[key]\r\n          all += cum[key]\r\n        }\r\n      })\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        all,\r\n        ...cum\r\n      }\r\n    })\r\n  }, [swapSourcesData, swapSourcesFilteredKeys])\r\n\r\n  const COLORS = ['red', 'green', 'blue', 'lightblue', 'purple', 'pink', 'brown', 'orange']\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>\r\n          <label>From</label>\r\n          <input type=\"datetime-local\" value={from} onChange={evt => setFrom(evt.target.value)} />\r\n        </p>\r\n        <p>\r\n          <label>To</label>\r\n          <input type=\"datetime-local\" value={to} onChange={evt => setTo(evt.target.value)} />\r\n        </p>\r\n      </div>     \r\n      {Object.entries(assetChartData).map(([name, {data, maxPrice, minPrice}]) => {\r\n        return <div key={name}>\r\n          <h2>{name}</h2>\r\n          <ResponsiveContainer width=\"100%\" height={600}>\r\n            <ComposedChart\r\n              data={data}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"10 10\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis\r\n                yAxisId=\"left\"\r\n                dataKey=\"price\"\r\n                domain={[Math.round(minPrice * 0.99), Math.round(maxPrice * 1.01)]}\r\n              />\r\n              <YAxis yAxisId=\"right\" orientation=\"right\" dataKey=\"poolAmount\" />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Area isAnimationActive={false} strokeWidth={0} yAxisId=\"right\" dataKey=\"poolAmount\" name=\"Pool\" dot={false} fill=\"#627EEA\" />\r\n              <Line isAnimationActive={false} yAxisId=\"left\" dataKey=\"price\" name=\"Chainlink Price\" dot={false} stroke=\"#666\" strokeWidth={2} />\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      })}\r\n\r\n      <h2>Liquidated Collateral</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={liquidationsChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"collateral\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"long\" name=\"Long\" dot={false} strokeWidth={0} stroke=\"purple\" fill=\"purple\" />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"short\" name=\"Short\" dot={false} stroke=\"green\" strokeWidth={0} fill=\"green\" />\r\n          <Line isAnimationActive={false} dataKey=\"collateral\" name=\"All\" dot={false} stroke=\"black\" strokeWidth={2} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Global PnL</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={pnlChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis domain={[pnlMin * 1.5, pnlMax * 0.50]} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} dataKey=\"profits\" name=\"Profits\" dot={false} strokeWidth={0} fill=\"lightblue\" />\r\n          <Area isAnimationActive={false} dataKey=\"loss\" name=\"Loss\" dot={false} stroke=\"pink\" strokeWidth={0} fill=\"pink\" />\r\n          <Line isAnimationActive={false} dataKey=\"net\" name=\"Net\" dot={false} stroke=\"#000\" strokeWidth={2} />\r\n          <Line isAnimationActive={false} dataKey=\"long\" name=\"Longs Net\" dot={false} stroke=\"green\" strokeWidth={1} />\r\n          <Line isAnimationActive={false} dataKey=\"short\" name=\"Shorts Net\" dot={false} stroke=\"red\" strokeWidth={1} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Fees</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart syncId=\"syncId\" data={feesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"swap\" stackId=\"a\" name=\"Swap\" stroke=\"#FE88B1\" fill=\"#FE88B1\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"mint\" stackId=\"a\" name=\"Mint USDS\" stroke=\"#C9DB74\" fill=\"#C9DB74\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"burn\" stackId=\"a\" name=\"Burn USDS\" stroke=\"#ab6100\" fill=\"#ab6100\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" stroke=\"#c90000\" fill=\"#c90000\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" stroke=\"#5D69B1\" fill=\"#5D69B1\" />\r\n          <Line isAnimationActive={false} dot={false} dataKey=\"all\" name=\"Total\" stroke=\"#000\" />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Swap volumes by recipient</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <LineChart syncId=\"syncId\" data={swapSourcesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          {swapSourcesFilteredKeys.map((key, i) => {\r\n            return <Line dataKey={key} dot={false} stroke={COLORS[i % COLORS.length]} />\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Trading","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport cx from \"classnames\";\r\nimport Fantom from './views/Fantom';\r\nimport Referrals from './views/Referrals';\r\nimport Trading from './views/Trading';\r\nimport './App.css';\r\nimport darkLogoIcon from './img/anzor-logo.png';\r\nimport lightLogoIcon from './img/anzor-logo.png';\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { RiMenuLine } from 'react-icons/ri';\r\n\r\nfunction AppHeaderLinks({ mode, small, clickCloseIcon }) {\r\n  return (\r\n    <div className=\"App-header-links\">\r\n      {small &&\r\n        <div className=\"App-header-links-header\">\r\n          <div className=\"App-header-menu-icon-block\" onClick={() => clickCloseIcon()}>\r\n            <FiX className=\"App-header-menu-icon\" />\r\n          </div>\r\n          <NavLink exact activeClassName=\"active\" className=\"App-header-link-main\" to=\"/\">\r\n            <img src={darkLogoIcon} alt=\"SKULL Logo\" style={{width: '40px', height: '40px'}} />\r\n          </NavLink>\r\n        </div>\r\n      }\r\n      <div className=\"App-header-link-container\">\r\n        <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">Fantom</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [mode, setMode] = useState(null);\r\n  const [isDrawerVisible, setIsDrawerVisible] = useState(undefined);\r\n\r\n  const slideVariants = {\r\n    hidden: { x: \"-100%\" },\r\n    visible: { x: 0 }\r\n  }\r\n\r\n  const fadeVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const savedMode = window.localStorage.getItem('mode');\r\n    const targetMode = savedMode == 'light' ? 'light' : 'dark';\r\n    document.querySelector('body').style.backgroundColor = targetMode == 'dark' ? '#000000' : '#f6f9ff';\r\n    setMode(targetMode);\r\n  }, [])\r\n\r\n  return (\r\n    <Switch>\r\n      {\r\n        mode && <div className={cx(\"App\", mode)}>\r\n          {isDrawerVisible &&\r\n            <AnimatePresence>\r\n              {isDrawerVisible &&\r\n                <motion.div className=\"App-header-backdrop\"\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"hidden\"\r\n                  variants={fadeVariants}\r\n                  transition={{ duration: 0.2 }}\r\n                  onClick={() => setIsDrawerVisible(!isDrawerVisible)}\r\n                >\r\n                </motion.div>\r\n              }\r\n            </AnimatePresence>\r\n          }\r\n          <div className=\"nav\">\r\n            <div className=\"nav-left\">\r\n              <div className=\"App-header-menu-icon-block\" onClick={() => setIsDrawerVisible(!isDrawerVisible)}>\r\n                {!isDrawerVisible && <RiMenuLine className=\"App-header-menu-icon\" />}\r\n                {isDrawerVisible && <FaTimes className=\"App-header-menu-icon\" />}\r\n              </div>\r\n              <a href=\"https://cranium.exchange\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-logo\" style={{textDecoration: 'none', alignItems: 'center'}}>\r\n                <img style={{width: '40px', height: '40px'}} src={mode == 'dark' ? darkLogoIcon : lightLogoIcon} />\r\n                <p style={{textDecoration: 'none', fontSize: '1.3rem', fontWeight: '40px'}}>Cranium</p>\r\n              </a>\r\n              {/* <NavLink to=\"/\" style={{paddingRight: \"12px\"}} exact className=\"nav-link\" activeClassName=\"active\">Fantom</NavLink> */}\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <a href=\"https://docs.cranium.exchange\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link\">Docs</a>\r\n              <a href=\"https://cranium.exchange\" target=\"_blank\" rel=\"noreferrer\" className=\"nav-link\">Launch App</a>\r\n            </div>\r\n          </div>\r\n          <AnimatePresence>\r\n            {isDrawerVisible &&\r\n              <motion.div\r\n                onClick={() => setIsDrawerVisible(false)}\r\n                className=\"App-header-links-container App-header-drawer\"\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"hidden\"\r\n                variants={slideVariants}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <AppHeaderLinks mode={mode} small clickCloseIcon={() => setIsDrawerVisible(false)} />\r\n              </motion.div>\r\n            }\r\n          </AnimatePresence>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" render={(props) => (\r\n              <Fantom {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/referrals/:chainName\" render={(props) => (\r\n              <Referrals {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/trading\" component={Trading} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </Switch>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import { ethers } from 'ethers'\r\nimport React from 'react';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport { renderToString } from 'react-dom/server';\r\nimport fetch from 'cross-fetch';\r\nimport sizeof from 'object-sizeof'\r\n\r\nimport App from './App';\r\nimport { ApolloClient, InMemoryCache, gql, HttpLink } from '@apollo/client'\r\nimport { getLogger } from './helpers'\r\nimport { addresses, FANTOM } from './addresses'\r\nimport { queryEarnData, getStatsFromSubgraph } from './dataProvider'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\r\n\r\nconst cssLinksFromAssets = (assets, entrypoint) => {\r\n  return assets[entrypoint] ? assets[entrypoint].css ?\r\n  assets[entrypoint].css.map(asset=>\r\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\r\n  return assets[entrypoint] ? assets[entrypoint].js ?\r\n  assets[entrypoint].js.map(asset=>\r\n    `<script src=\"${asset}\"${extra}></script>`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst { formatUnits} = ethers.utils\r\n\r\nconst logger = getLogger('routes')\r\n\r\nconst apolloOptions = {\r\n  query: {\r\n    fetchPolicy: 'no-cache'\r\n  },\r\n  watchQuery: {\r\n    fetchPolicy: 'no-cache'\r\n  }\r\n}\r\n\r\nconst fantomGraphClient = new ApolloClient({\r\n  link: new HttpLink({ uri: process.env.RAZZLE_SUBGRAPH_URL, fetch }),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: apolloOptions\r\n})\r\n\r\nconst cachedPrices = {\r\n  sorted: {\r\n    [FANTOM]: {},\r\n  },\r\n  byKey: {\r\n    [FANTOM]: {},\r\n  }\r\n}\r\nfunction putPricesIntoCache(prices, chainId, entitiesKey) {\r\n  if (!prices || !chainId || !entitiesKey) {\r\n    throw new Error('Invalid arguments')\r\n  }\r\n  let ret = true\r\n  const precision = entitiesKey === \"chainlinkPrices\" ? 1e8 : 1e30\r\n  const changedTokens = new Set([])\r\n  const byKeyNs = cachedPrices.byKey\r\n  byKeyNs[chainId][entitiesKey] = byKeyNs[chainId][entitiesKey] || {}\r\n  for (const price of prices) {\r\n    const token = price.token.toLowerCase()\r\n    const timestamp = price.timestamp\r\n    byKeyNs[chainId][entitiesKey][token] = byKeyNs[chainId][entitiesKey][token] || {}\r\n    byKeyNs[chainId][entitiesKey][token][timestamp] = Number(price.value) / precision\r\n    changedTokens.add(token)\r\n  }\r\n\r\n  const sortedNs = cachedPrices.sorted\r\n  sortedNs[chainId][entitiesKey] = sortedNs[chainId][entitiesKey] || {}\r\n  for (const token of changedTokens) {\r\n    sortedNs[chainId][entitiesKey][token] = Object.entries(byKeyNs[chainId][entitiesKey][token])\r\n      .map(([timestamp, price]) => [Number(timestamp), price])\r\n      .sort((a, b) => a[0] - b[0])\r\n  }\r\n\r\n  if (!IS_PRODUCTION) {\r\n    console.time('sizeof call')\r\n    const size = sizeof(cachedPrices) / 1024 / 1024\r\n    console.timeEnd('sizeof call')\r\n    let pricesCount = 0\r\n    for (const chainId of Object.keys(cachedPrices.sorted)) {\r\n      for (const entitiesKey of Object.keys(cachedPrices.sorted[chainId])) {\r\n        for (const prices of Object.values(cachedPrices.sorted[chainId][entitiesKey])) {\r\n          pricesCount += prices.length\r\n        }\r\n      }\r\n    }\r\n    logger.debug('Estimated price cache size: %s MB, prices count: %s', size, pricesCount)\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nclass TtlCache {\r\n  constructor(ttl = 60, maxKeys) {\r\n    this._cache = {}\r\n    this._ttl = ttl\r\n    this._maxKeys = maxKeys\r\n    this._logger = getLogger('routes.TtlCache')\r\n  }\r\n\r\n  get(key) {\r\n    this._logger.debug('get key %s', key)\r\n    return this._cache[key]\r\n  }\r\n\r\n  set(key, value) {\r\n    this._cache[key] = value\r\n\r\n    const keys = Object.keys(this._cache)\r\n    if (this._maxKeys && keys.length >= this._maxKeys) {\r\n      for (let i = 0; i <= keys.length - this._maxKeys; i++) {\r\n        this._logger.debug('delete key %s (max keys)', key)\r\n        delete this._cache[keys[i]]\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this._logger.debug('delete key %s (ttl)', key)\r\n      delete this._cache[key]\r\n    }, this._ttl * 1000)\r\n\r\n    if (!IS_PRODUCTION) {\r\n      console.time('sizeof call')\r\n      const size = sizeof(this._cache) / 1024 / 1024\r\n      console.timeEnd('sizeof call')\r\n      this._logger.debug('TtlCache cache size %s MB', size)\r\n    }\r\n  }\r\n}\r\nconst ttlCache = new TtlCache(60, 100)\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nasync function precacheOldPrices(chainId, entitiesKey) {\r\n  logger.info('precache old prices into memory for %s...', chainId)\r\n\r\n  const baseRetryTimeout = 10000\r\n  let oldestTimestamp = parseInt(Date.now() / 1000)\r\n  let i = 0\r\n  let retryTimeout = baseRetryTimeout\r\n  let failCount = 0\r\n  while (i < 100) {\r\n    try {\r\n      const prices = await loadPrices({ before: oldestTimestamp, chainId, entitiesKey })\r\n      if (prices.length === 0) {\r\n        logger.info('All old prices loaded for chain: %s %s', chainId, entitiesKey)\r\n        break\r\n      }\r\n\r\n      if (!putPricesIntoCache(prices, chainId, entitiesKey)) {\r\n        logger.info('putPricesIntoCache returned false for chain: %s %s. stop', chainId, entitiesKey)\r\n        break\r\n      }\r\n      oldestTimestamp = prices[prices.length - 1].timestamp - 1\r\n      failCount = 0\r\n      retryTimeout = baseRetryTimeout\r\n    } catch (ex) {\r\n      failCount++\r\n      logger.warn('Old prices load failed')\r\n      logger.error(ex)\r\n      if (failCount > 10) {\r\n        logger.warn('too many load failures for chainId: %s %s. retry in %s seconds',\r\n          chainId, entitiesKey, retryTimeout / 1000)\r\n        await sleep(retryTimeout)\r\n        retryTimeout *= 2\r\n      }\r\n      await sleep(500)\r\n    }\r\n    i++\r\n  }\r\n}\r\nif (!process.env.DISABLE_PRICES) {\r\n  precacheOldPrices(FANTOM, \"chainlinkPrices\")\r\n  precacheOldPrices(FANTOM, \"fastPrices\")\r\n}\r\n\r\n\r\nlet newestPriceTimestamp = parseInt(Date.now() / 1000) - 60 * 5\r\nasync function precacheNewPrices(chainId, entitiesKey) {\r\n  logger.info('Precache new prices into memory chainId: %s %s...', chainId, entitiesKey)\r\n\r\n  try {\r\n    const after = newestPriceTimestamp - 60 * 15 // 15 minutes before last update.\r\n    const prices = await loadPrices({ after, chainId, entitiesKey })\r\n    if (prices.length > 0) {\r\n      logger.info('Loaded %s prices since %s chainId: %s %s',\r\n        prices.length,\r\n        toReadable(after),\r\n        chainId,\r\n        entitiesKey\r\n      )\r\n      if (putPricesIntoCache(prices, chainId, entitiesKey)) {\r\n        newestPriceTimestamp = prices[0].timestamp\r\n      } else {\r\n        logger.warn('Prices were not saved')\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    logger.warn('New prices load failed chainId: %s %s', chainId, entitiesKey)\r\n    logger.error(ex)\r\n  }\r\n\r\n  setTimeout(precacheNewPrices, 1000 * 60 * 1, chainId, entitiesKey)\r\n}\r\nif (!process.env.DISABLE_PRICES) {\r\n  precacheNewPrices(FANTOM, \"chainlinkPrices\")\r\n  precacheNewPrices(FANTOM, \"fastPrices\")\r\n}\r\n\r\nasync function loadPrices({ before, after, chainId, entitiesKey } = {}) {\r\n  if (!chainId) {\r\n    throw new Error('loadPrices requires chainId')\r\n  }\r\n  if (!entitiesKey) {\r\n    throw new Error('loadPrices requires entitiesKey')\r\n  }\r\n  if (!before) {\r\n    before = parseInt(Date.now() / 1000) + 86400 * 365\r\n  }\r\n  if (!after) {\r\n    after = 0\r\n  }\r\n  logger.info('loadPrices %s chainId: %s before: %s, after: %s',\r\n    entitiesKey,\r\n    chainId,\r\n    toReadable(before),\r\n    after && toReadable(after)\r\n  )\r\n\r\n  const fragment = (skip) => {\r\n     return `${entitiesKey}(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: {\r\n        timestamp_lte: ${before}\r\n        timestamp_gte: ${after}\r\n        period: any\r\n      }\r\n    ) { value, timestamp, token }\\n`\r\n  }\r\n  const queryString = `{\r\n    p0: ${fragment(0)}\r\n    p1: ${fragment(1000)}\r\n    p2: ${fragment(2000)}\r\n    p3: ${fragment(3000)}\r\n    p4: ${fragment(4000)}\r\n    p5: ${fragment(5000)}\r\n  }`\r\n  const query = gql(queryString)\r\n\r\n  const graphClient = fantomGraphClient;\r\n  const { data } = await graphClient.query({query})\r\n  const prices = [\r\n    ...data.p0,\r\n    ...data.p1,\r\n    ...data.p2,\r\n    ...data.p3,\r\n    ...data.p4,\r\n    ...data.p5\r\n  ]\r\n\r\n  if (prices.length) {\r\n    logger.debug('Loaded %s prices (%s – %s) for chain %s %s',\r\n      prices.length,\r\n      toReadable(prices[prices.length - 1].timestamp),\r\n      toReadable(prices[0].timestamp),\r\n      chainId,\r\n      entitiesKey,\r\n    )\r\n  }\r\n\r\n  return prices\r\n}\r\n\r\nfunction toReadable(ts) {\r\n  return (new Date(ts * 1000).toISOString()).replace('T', ' ').replace('.000Z', '')\r\n}\r\n\r\nfunction getPriceRange(sortedPrices, from, to, inbound = false) {\r\n  const indexFrom = binSearchPrice(sortedPrices, from, inbound)\r\n  const indexTo = binSearchPrice(sortedPrices, to, !inbound) + 1\r\n\r\n  return [\r\n    sortedPrices.slice(indexFrom, indexTo),\r\n    sortedPrices[0][0]\r\n  ]\r\n}\r\n\r\nfunction binSearchPrice(prices, timestamp, gt = true) {\r\n  let left = 0\r\n  let right = prices.length - 1\r\n  let mid\r\n  while (left + 1 < right) {\r\n    mid = Math.floor((left + right) / 2)\r\n    if (prices[mid][0] < timestamp) {\r\n      left = mid\r\n    } else {\r\n      right = mid\r\n    }\r\n  }\r\n  const ret = gt ? right : left\r\n  return ret\r\n}\r\n\r\nfunction getPrices(from, to, preferableChainId = FANTOM, preferableSource = \"chainlink\", symbol) {\r\n  const start = Date.now()\r\n\r\n  if (preferableSource !== \"chainlink\" && preferableSource !== \"fast\") {\r\n    throw createHttpError(400, `Invalid preferableSource ${preferableSource}. Valid options are: chainlink, fast`)\r\n  }\r\n\r\n  const validSymbols = new Set(['FTM', 'BTC', 'ETH'])\r\n  if (!validSymbols.has(symbol)) {\r\n    throw createHttpError(400, `Invalid symbol ${symbol}`)\r\n  }\r\n  preferableChainId = Number(preferableChainId)\r\n  const validSources = new Set([FANTOM])\r\n  if (!validSources.has(preferableChainId)) {\r\n    throw createHttpError(400, `Invalid preferableChainId ${preferableChainId}. Valid options are ${FANTOM}`)\r\n  }\r\n\r\n  const tokenAddress = addresses[preferableChainId][symbol]?.toLowerCase()\r\n  if (!tokenAddress || !cachedPrices.byKey[preferableChainId].chainlinkPrices\r\n    || !cachedPrices.byKey[preferableChainId].chainlinkPrices[tokenAddress]\r\n  ) {\r\n    return []\r\n  }\r\n\r\n  const cacheKey = `${from}:${to}:${preferableChainId}:${preferableSource}:${symbol}`\r\n  const fromCache = ttlCache.get(cacheKey)\r\n  if (fromCache) {\r\n    logger.debug('from cache')\r\n    return fromCache\r\n  }\r\n\r\n  const entitiesKey = preferableSource === \"chainlink\" ? \"chainlinkPrices\" : \"fastPrices\"\r\n\r\n  const sortedPrices = (\r\n    cachedPrices.sorted[preferableChainId]\r\n    && cachedPrices.sorted[preferableChainId][entitiesKey]\r\n    && cachedPrices.sorted[preferableChainId][entitiesKey][tokenAddress]\r\n  ) || []\r\n\r\n  let [prices, firstTimestamp] = getPriceRange(sortedPrices, from, to)\r\n\r\n  if (preferableSource === \"fast\" && firstTimestamp > from) {\r\n    // there is no enough fast price data. upfill it with chainlink prices\r\n    const otherSortedPrices = (\r\n      cachedPrices.sorted[preferableChainId]\r\n      && cachedPrices.sorted[preferableChainId].chainlinkPrices\r\n      && cachedPrices.sorted[preferableChainId].chainlinkPrices[tokenAddress]\r\n    ) || []\r\n    const [chainlinkPrices] = getPriceRange(otherSortedPrices, from, firstTimestamp, true)\r\n\r\n    prices = [...chainlinkPrices, ...prices]\r\n  }\r\n\r\n  ttlCache.set(cacheKey, prices)\r\n\r\n  logger.debug('getPrices took %sms cacheKey %s', Date.now() - start, cacheKey)\r\n\r\n  return prices\r\n}\r\n\r\nconst periodsMap = {\r\n  '5m': 60 * 5,\r\n  '15m': 60 * 15,\r\n  '1h': 60 * 60,\r\n  '4h': 60 * 60 * 4,\r\n  '1d': 60 * 60 * 24,\r\n  '1w': 60 * 60 * 24 * 7\r\n}\r\n\r\nfunction getCandles(prices, period) {\r\n  const periodTime = periodsMap[period]\r\n\r\n  if (prices.length < 2) {\r\n    return []\r\n  }\r\n\r\n  const candles = []\r\n  const first = prices[0]\r\n  let prevTsGroup = Math.floor(first[0] / periodTime) * periodTime\r\n  let prevPrice = first[1]\r\n  let prevTs = first[0]\r\n  let o = prevPrice\r\n  let h = prevPrice\r\n  let l = prevPrice\r\n  let c = prevPrice\r\n  for (let i = 1; i < prices.length; i++) {\r\n    const [ts, price] = prices[i]\r\n    const tsGroup = ts - (ts % periodTime)\r\n\r\n    if (prevTs > ts) {\r\n      logger.warn(`Invalid order prevTs: ${prevTs} (${toReadable(prevTs)}) ts: ${ts} (${toReadable(ts)})`)\r\n      continue\r\n    }\r\n\r\n    if (prevTsGroup !== tsGroup) {\r\n      candles.push({ t: prevTsGroup, o, h, l, c })\r\n      o = c\r\n      h = o > c ? o : c\r\n      l = o < c ? o : c\r\n    }\r\n    c = price\r\n    h = h > price ? h : price\r\n    l = l < price ? l : price\r\n    prevTsGroup = tsGroup\r\n    prevTs = ts\r\n  }\r\n\r\n  return candles\r\n}\r\n\r\nfunction getFromAndTo(req) {\r\n  const granularity = 60 // seconds\r\n  let from = Number(req.query.from) || Math.round(Date.now() / 1000) - 86400 * 90\r\n  from = Math.floor(from / granularity) * granularity\r\n  let to = Number(req.query.to) || Math.round(Date.now() / 1000)\r\n  to = Math.ceil(to / granularity) * granularity\r\n\r\n  return [from, to]\r\n}\r\n\r\nfunction createHttpError(code, message) {\r\n  const error = new Error(message)\r\n  error.code = code\r\n  return error\r\n}\r\n\r\nexport default function routes(app) {\r\n\r\n  app.get('/api/total_volumes', async (req, res, next) => {\r\n    const queryString = `\r\n    {\r\n      volumeStats (where : {period:\"total\"}){\r\n        id\r\n        swap\r\n        mint\r\n        margin\r\n        burn\r\n        liquidation\r\n        period\r\n      }\r\n    }\r\n    `\r\n    const query = gql(queryString);\r\n\r\n    const graphClient = fantomGraphClient;\r\n    const { data } = await graphClient.query({query})\r\n    \r\n    try {\r\n      const stats = data.volumeStats[0]\r\n      const statsResponse = {\r\n        swap: parseInt(stats.swap) / 1e30,\r\n        mint: parseInt(stats.mint) / 1e30,\r\n        burn: parseInt(stats.burn) / 1e30,\r\n        margin: parseInt(stats.margin) / 1e30,\r\n        liquidation: parseInt(stats.liquidation) / 1e30\r\n      };\r\n\r\n      statsResponse.total = statsResponse.swap + statsResponse.mint + statsResponse.burn + statsResponse.margin + statsResponse.liquidation;\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(statsResponse)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/stats', async (req, res, next) => {\r\n\r\n    try {\r\n      const stats = await getStatsFromSubgraph(fantomGraphClient);\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(stats)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/total_volumes_delta', async (req, res, next) => {\r\n    const queryString = `\r\n    {\r\n      volumeStats (first:1 orderBy: timestamp orderDirection: desc where : {period:\"daily\"}){\r\n        id\r\n        swap\r\n        mint\r\n        margin\r\n        burn\r\n        liquidation\r\n        period\r\n      }\r\n    }\r\n    `\r\n    const query = gql(queryString);\r\n\r\n    const graphClient = fantomGraphClient;\r\n    const { data } = await graphClient.query({query})\r\n    \r\n    try {\r\n      const stats = data.volumeStats[0]\r\n      const statsResponse = {\r\n        swap: parseInt(stats.swap) / 1e30,\r\n        mint: parseInt(stats.mint) / 1e30,\r\n        burn: parseInt(stats.burn) / 1e30,\r\n        margin: parseInt(stats.margin) / 1e30,\r\n        liquidation: parseInt(stats.liquidation) / 1e30\r\n      };\r\n\r\n      statsResponse.total = statsResponse.swap + statsResponse.mint + statsResponse.burn + statsResponse.margin + statsResponse.liquidation;\r\n      res.set('Cache-Control', 'max-age=60')\r\n      res.send(statsResponse)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/earn/:account', async (req, res, next) => {\r\n    const chainName = req.query.chain || 'fantom'\r\n    const validChainNames = new Set(['fantom'])\r\n    if (!validChainNames.has(chainName)) {\r\n      next(createHttpError(400, `Valid chains are: ${Array.from(validChainNames)}`))\r\n      return\r\n    }\r\n    try {\r\n      const earnData = await queryEarnData(chainName, req.params.account)\r\n      res.send(earnData)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/skull-supply', async (req, res) => {\r\n    const apiResponse = await fetch('https://stats.cranium.exchange/api/total_supply')\r\n    const data = (await apiResponse.text()).toString()\r\n    res.set('Content-Type', 'text/plain')\r\n    res.send(formatUnits(data))\r\n  })\r\n\r\n  app.get('/api/chart/:symbol', async (req, res, next) => {\r\n    const [from, to] = getFromAndTo(req)\r\n\r\n    let prices\r\n    try {\r\n      prices = getPrices(from, to, req.query.preferableChainId, req.query.preferableSource, req.params.symbol)\r\n    } catch (ex) {\r\n      next(ex)\r\n      return\r\n    }\r\n\r\n    res.set('Cache-Control', 'max-age=60')\r\n    res.send(prices)\r\n  })\r\n\r\n  app.get('/api/candles/:symbol', async (req, res, next) => {\r\n    const [from, to] = getFromAndTo(req)\r\n\r\n    let prices\r\n    try {\r\n      prices = getPrices(from, to, req.query.preferableChainId, req.query.preferableSource, req.params.symbol)\r\n    } catch (ex) {\r\n      next(ex)\r\n      return\r\n    }\r\n\r\n    const period = req.query.period?.toLowerCase()\r\n    if (!period || !periodsMap[period]) {\r\n      next(createHttpError(400, `Invalid period. Valid periods are ${Object.keys(periodsMap)}`))\r\n      return\r\n    }\r\n\r\n    const candles = getCandles(prices, period)\r\n    let updatedAt\r\n    if (prices.length) {\r\n      updatedAt = prices[prices.length - 1][0]\r\n    }\r\n\r\n    res.set('Cache-Control', 'max-age=60')\r\n    res.send({\r\n      prices: candles,\r\n      period,\r\n      updatedAt\r\n    })\r\n  })\r\n\r\n  const cssAssetsTag = cssLinksFromAssets(assets, 'client')\r\n  const jsAssetsTag = jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')\r\n\r\n  app.get('/*', (req, res, next) => {\r\n    if (res.headersSent) {\r\n      next()\r\n      return\r\n    }\r\n\r\n    const context = {};\r\n    const markup = renderToString(\r\n      <StaticRouter context={context} location={req.url}>\r\n        <App />\r\n      </StaticRouter>\r\n    );\r\n    res.set('Content-Type', 'text/html')\r\n\r\n    res.status(200).send(\r\n      `<!doctype html>\r\n          <html lang=\"\">\r\n          <head>\r\n              <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n              <meta charset=\"utf-8\" />\r\n              <title>Cranium Statistics</title>\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n              <link rel=\"icon\" type=\"image/png\" href=\"/favicon.png\" />\r\n              ${cssAssetsTag}\r\n          </head>\r\n          <body>\r\n              <div id=\"root\">${markup}</div>\r\n              ${jsAssetsTag}\r\n          </body>\r\n      </html>`\r\n    );\r\n    next()\r\n  });\r\n\r\n  app.use('/api', function (err, req, res, next) {\r\n    res.set('Content-Type', 'text/plain')\r\n    const statusCode = Number(err.code) || 500\r\n    let response = ''\r\n    if (IS_PRODUCTION) {\r\n      if (err.code === 400) {\r\n        response = err.message\r\n      }\r\n    } else {\r\n      response = err.stack\r\n    }\r\n    res.status(statusCode)\r\n    res.send(response)\r\n  })\r\n}","import { getLogger } from \"./helpers\";\r\nconst logger = getLogger(\"app\");\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === \"production\";\r\n\r\nfunction _logRequest(req, res) {\r\n  const time = Date.now() - req.start;\r\n  const method = res.statusCode < 400 ? \"info\" : \"warn\";\r\n  logger[method](\r\n    \"request %s %s handled statusCode: %s in time: %sms referer: %s ip: %s\",\r\n    req.method,\r\n    req.originalUrl,\r\n    res.statusCode,\r\n    time,\r\n    req.get(\"referer\"),\r\n    req.ip\r\n  );\r\n}\r\n\r\nexport function requestLogger(req, res, next) {\r\n  req.start = Date.now();\r\n  res.on(\"close\", (evt) => {\r\n    _logRequest(req, res);\r\n  });\r\n  next();\r\n}\r\n\r\nexport function csp(req, res, next) {\r\n  const csp = {\r\n    \"default-src\": [\"'self'\"],\r\n    \"style-src\": [\"'self'\"],\r\n    \"connect-src\": [\r\n      \"https://api.thegraph.com\",\r\n      \"https://api.coingecko.com\",\r\n      \"https://stats.cranium.exchange/api\",\r\n      \"https://cranium.exchange\",\r\n      \"cranium.exchange\",\r\n    ]\r\n  };\r\n\r\n  if (!IS_PRODUCTION) {\r\n    csp[\"default-src\"].push(\"localhost:3114\")\r\n    csp[\"style-src\"].push(\"'unsafe-inline'\")\r\n    csp[\"connect-src\"].push(\"localhost:3114\", \"ws://localhost:3114\")\r\n  }\r\n  \r\n  const cspString = Object.entries(csp).map(([key, value]) => `${key} ${value.join(' ')}`).join('; ')\r\n  res.set(\"Content-Security-Policy\", cspString)\r\n  next();\r\n}\r\n","import express from 'express';\r\n\r\nimport routes from './routes'\r\nimport { requestLogger, csp } from './middlewares'\r\n\r\nconst app = express();\r\n// app.set('trust proxy', true)\r\n\r\napp\r\n  .disable('x-powered-by')\r\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\r\n  .use(require('cors')())\r\n  .use(requestLogger)\r\n  // .use(csp)\r\n  .use((req, res, next) => {\r\n    res.set('X-Content-Type-Options', 'nosniff')\r\n    res.set('X-Frame-Options', 'DENY')\r\n    res.set('Referrer-Policy', 'same-origin')\r\n    next()\r\n  })\r\n\r\napp.get('/ping', (req, res, next) => {\r\n  res.send('ok')\r\n  next()\r\n});\r\n\r\nroutes(app)\r\n\r\nexport default app;\r\n"],"sourceRoot":""}